// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dilate.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dilate::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dilate::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> dilate::ap_ST_fsm_state1 = "1";
const sc_lv<7> dilate::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<7> dilate::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<7> dilate::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<7> dilate::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<7> dilate::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<7> dilate::ap_ST_fsm_state11 = "1000000";
const bool dilate::ap_const_boolean_1 = true;
const sc_lv<32> dilate::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dilate::ap_const_lv32_1 = "1";
const bool dilate::ap_const_boolean_0 = false;
const sc_lv<1> dilate::ap_const_lv1_0 = "0";
const sc_lv<32> dilate::ap_const_lv32_2 = "10";
const sc_lv<32> dilate::ap_const_lv32_3 = "11";
const sc_lv<32> dilate::ap_const_lv32_4 = "100";
const sc_lv<32> dilate::ap_const_lv32_5 = "101";
const sc_lv<1> dilate::ap_const_lv1_1 = "1";
const sc_lv<15> dilate::ap_const_lv15_0 = "000000000000000";
const sc_lv<8> dilate::ap_const_lv8_1 = "1";
const sc_lv<8> dilate::ap_const_lv8_0 = "00000000";
const sc_lv<8> dilate::ap_const_lv8_FF = "11111111";
const sc_lv<15> dilate::ap_const_lv15_7BC4 = "111101111000100";
const sc_lv<15> dilate::ap_const_lv15_1 = "1";
const sc_lv<8> dilate::ap_const_lv8_B3 = "10110011";
const sc_lv<15> dilate::ap_const_lv15_B4 = "10110100";
const sc_lv<32> dilate::ap_const_lv32_7 = "111";
const sc_lv<9> dilate::ap_const_lv9_14C = "101001100";
const sc_lv<15> dilate::ap_const_lv15_7FFF = "111111111111111";
const sc_lv<9> dilate::ap_const_lv9_B4 = "10110100";
const sc_lv<32> dilate::ap_const_lv32_6 = "110";

dilate::dilate(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage2_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_184_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_177_p4);
    sensitive << ( i_reg_173 );
    sensitive << ( exitcond_flatten_reg_353 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_13_reg_423 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_155_p4);
    sensitive << ( indvar_flatten_reg_151 );
    sensitive << ( exitcond_flatten_reg_353 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_357 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_j_phi_fu_166_p4);
    sensitive << ( j_reg_162 );
    sensitive << ( exitcond_flatten_reg_353 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_mid2_v_v_reg_369 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_exitcond_flatten_fu_184_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_155_p4 );

    SC_METHOD(thread_exitcond_fu_196_p2);
    sensitive << ( exitcond_flatten_fu_184_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_phi_fu_177_p4 );

    SC_METHOD(thread_foreground_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_fu_241_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_foreground_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_i_13_fu_291_p2);
    sensitive << ( i_mid2_reg_362 );

    SC_METHOD(thread_i_cast3_fu_233_p1);
    sensitive << ( i_mid2_reg_362 );

    SC_METHOD(thread_i_cast_fu_245_p1);
    sensitive << ( i_mid2_reg_362 );

    SC_METHOD(thread_i_mid2_fu_202_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_177_p4 );
    sensitive << ( exitcond_fu_196_p2 );

    SC_METHOD(thread_indvar_flatten_next_fu_190_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_155_p4 );

    SC_METHOD(thread_j_s_fu_210_p2);
    sensitive << ( ap_phi_mux_j_phi_fu_166_p4 );

    SC_METHOD(thread_output_addr_5_gep_fu_73_p3);
    sensitive << ( exitcond_flatten_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_19_reg_389 );
    sensitive << ( tmp_fu_248_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( exitcond_flatten_reg_353 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_19_reg_389 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_fu_248_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( output_addr_5_gep_fu_73_p3 );
    sensitive << ( tmp_74_0_1_fu_296_p1 );
    sensitive << ( tmp_74_1_2_fu_319_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_22_fu_327_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_74_2_fu_345_p1 );

    SC_METHOD(thread_output_r_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_74_1_fu_300_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_74_2_1_fu_323_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_74_0_2_fu_331_p1 );
    sensitive << ( tmp_74_2_2_fu_349_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( exitcond_flatten_reg_353 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( tmp_fu_248_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_r_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( exitcond_flatten_reg_353 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_fu_248_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_output_r_d1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( exitcond_flatten_reg_353 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( tmp_fu_248_p3 );
    sensitive << ( tmp_reg_400 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_r_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( tmp_reg_400 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp1_cast_fu_262_p1);
    sensitive << ( tmp1_fu_256_p2 );

    SC_METHOD(thread_tmp1_fu_256_p2);
    sensitive << ( i_cast_fu_245_p1 );

    SC_METHOD(thread_tmp2_cast_fu_282_p1);
    sensitive << ( tmp2_fu_276_p2 );

    SC_METHOD(thread_tmp2_fu_276_p2);
    sensitive << ( i_cast_fu_245_p1 );

    SC_METHOD(thread_tmp_19_fu_241_p1);
    sensitive << ( tmp_s_reg_382 );

    SC_METHOD(thread_tmp_20_fu_266_p2);
    sensitive << ( tmp_mid2_reg_375 );
    sensitive << ( tmp1_cast_fu_262_p1 );

    SC_METHOD(thread_tmp_21_fu_309_p2);
    sensitive << ( tmp_20_reg_404 );

    SC_METHOD(thread_tmp_22_fu_327_p1);
    sensitive << ( tmp_21_reg_433 );

    SC_METHOD(thread_tmp_72_2_fu_286_p2);
    sensitive << ( tmp_mid2_reg_375 );
    sensitive << ( tmp2_cast_fu_282_p1 );

    SC_METHOD(thread_tmp_73_0_2_fu_314_p2);
    sensitive << ( tmp_20_reg_404 );

    SC_METHOD(thread_tmp_73_1_2_fu_304_p2);
    sensitive << ( tmp_s_reg_382 );

    SC_METHOD(thread_tmp_73_1_fu_271_p2);
    sensitive << ( tmp_s_reg_382 );

    SC_METHOD(thread_tmp_73_2_2_fu_340_p2);
    sensitive << ( tmp_72_2_reg_416 );

    SC_METHOD(thread_tmp_73_2_fu_335_p2);
    sensitive << ( tmp_72_2_reg_416 );

    SC_METHOD(thread_tmp_74_0_1_fu_296_p1);
    sensitive << ( tmp_20_reg_404 );

    SC_METHOD(thread_tmp_74_0_2_fu_331_p1);
    sensitive << ( tmp_73_0_2_reg_438 );

    SC_METHOD(thread_tmp_74_1_2_fu_319_p1);
    sensitive << ( tmp_73_1_2_reg_428 );

    SC_METHOD(thread_tmp_74_1_fu_300_p1);
    sensitive << ( tmp_73_1_reg_411 );

    SC_METHOD(thread_tmp_74_2_1_fu_323_p1);
    sensitive << ( tmp_72_2_reg_416 );

    SC_METHOD(thread_tmp_74_2_2_fu_349_p1);
    sensitive << ( tmp_73_2_2_reg_448 );

    SC_METHOD(thread_tmp_74_2_fu_345_p1);
    sensitive << ( tmp_73_2_reg_443 );

    SC_METHOD(thread_tmp_fu_248_p3);
    sensitive << ( foreground_q0 );

    SC_METHOD(thread_tmp_mid2_fu_227_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_mid2_fu_227_p00 );

    SC_METHOD(thread_tmp_mid2_fu_227_p00);
    sensitive << ( tmp_mid2_v_v_reg_369 );

    SC_METHOD(thread_tmp_mid2_fu_227_p2);
    sensitive << ( tmp_mid2_fu_227_p0 );

    SC_METHOD(thread_tmp_mid2_v_v_fu_216_p3);
    sensitive << ( ap_phi_mux_j_phi_fu_166_p4 );
    sensitive << ( exitcond_fu_196_p2 );
    sensitive << ( j_s_fu_210_p2 );

    SC_METHOD(thread_tmp_s_fu_236_p2);
    sensitive << ( tmp_mid2_reg_375 );
    sensitive << ( i_cast3_fu_233_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten_fu_184_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dilate_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_address1, "(port)output_r_address1");
    sc_trace(mVcdFile, output_r_ce1, "(port)output_r_ce1");
    sc_trace(mVcdFile, output_r_we1, "(port)output_r_we1");
    sc_trace(mVcdFile, output_r_d1, "(port)output_r_d1");
    sc_trace(mVcdFile, foreground_address0, "(port)foreground_address0");
    sc_trace(mVcdFile, foreground_ce0, "(port)foreground_ce0");
    sc_trace(mVcdFile, foreground_q0, "(port)foreground_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_151, "indvar_flatten_reg_151");
    sc_trace(mVcdFile, j_reg_162, "j_reg_162");
    sc_trace(mVcdFile, i_reg_173, "i_reg_173");
    sc_trace(mVcdFile, exitcond_flatten_fu_184_p2, "exitcond_flatten_fu_184_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_353, "exitcond_flatten_reg_353");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_190_p2, "indvar_flatten_next_fu_190_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_357, "indvar_flatten_next_reg_357");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, i_mid2_fu_202_p3, "i_mid2_fu_202_p3");
    sc_trace(mVcdFile, i_mid2_reg_362, "i_mid2_reg_362");
    sc_trace(mVcdFile, tmp_mid2_v_v_fu_216_p3, "tmp_mid2_v_v_fu_216_p3");
    sc_trace(mVcdFile, tmp_mid2_v_v_reg_369, "tmp_mid2_v_v_reg_369");
    sc_trace(mVcdFile, tmp_mid2_fu_227_p2, "tmp_mid2_fu_227_p2");
    sc_trace(mVcdFile, tmp_mid2_reg_375, "tmp_mid2_reg_375");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_s_fu_236_p2, "tmp_s_fu_236_p2");
    sc_trace(mVcdFile, tmp_s_reg_382, "tmp_s_reg_382");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage2_iter1, "ap_block_state9_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, tmp_19_fu_241_p1, "tmp_19_fu_241_p1");
    sc_trace(mVcdFile, tmp_19_reg_389, "tmp_19_reg_389");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage3_iter1, "ap_block_state10_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, tmp_fu_248_p3, "tmp_fu_248_p3");
    sc_trace(mVcdFile, tmp_reg_400, "tmp_reg_400");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, tmp_20_fu_266_p2, "tmp_20_fu_266_p2");
    sc_trace(mVcdFile, tmp_20_reg_404, "tmp_20_reg_404");
    sc_trace(mVcdFile, tmp_73_1_fu_271_p2, "tmp_73_1_fu_271_p2");
    sc_trace(mVcdFile, tmp_73_1_reg_411, "tmp_73_1_reg_411");
    sc_trace(mVcdFile, tmp_72_2_fu_286_p2, "tmp_72_2_fu_286_p2");
    sc_trace(mVcdFile, tmp_72_2_reg_416, "tmp_72_2_reg_416");
    sc_trace(mVcdFile, i_13_fu_291_p2, "i_13_fu_291_p2");
    sc_trace(mVcdFile, i_13_reg_423, "i_13_reg_423");
    sc_trace(mVcdFile, tmp_73_1_2_fu_304_p2, "tmp_73_1_2_fu_304_p2");
    sc_trace(mVcdFile, tmp_73_1_2_reg_428, "tmp_73_1_2_reg_428");
    sc_trace(mVcdFile, tmp_21_fu_309_p2, "tmp_21_fu_309_p2");
    sc_trace(mVcdFile, tmp_21_reg_433, "tmp_21_reg_433");
    sc_trace(mVcdFile, tmp_73_0_2_fu_314_p2, "tmp_73_0_2_fu_314_p2");
    sc_trace(mVcdFile, tmp_73_0_2_reg_438, "tmp_73_0_2_reg_438");
    sc_trace(mVcdFile, tmp_73_2_fu_335_p2, "tmp_73_2_fu_335_p2");
    sc_trace(mVcdFile, tmp_73_2_reg_443, "tmp_73_2_reg_443");
    sc_trace(mVcdFile, tmp_73_2_2_fu_340_p2, "tmp_73_2_2_fu_340_p2");
    sc_trace(mVcdFile, tmp_73_2_2_reg_448, "tmp_73_2_2_reg_448");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_155_p4, "ap_phi_mux_indvar_flatten_phi_fu_155_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_j_phi_fu_166_p4, "ap_phi_mux_j_phi_fu_166_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_177_p4, "ap_phi_mux_i_phi_fu_177_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, output_addr_5_gep_fu_73_p3, "output_addr_5_gep_fu_73_p3");
    sc_trace(mVcdFile, tmp_74_0_1_fu_296_p1, "tmp_74_0_1_fu_296_p1");
    sc_trace(mVcdFile, tmp_74_1_fu_300_p1, "tmp_74_1_fu_300_p1");
    sc_trace(mVcdFile, tmp_74_1_2_fu_319_p1, "tmp_74_1_2_fu_319_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_74_2_1_fu_323_p1, "tmp_74_2_1_fu_323_p1");
    sc_trace(mVcdFile, tmp_22_fu_327_p1, "tmp_22_fu_327_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_74_0_2_fu_331_p1, "tmp_74_0_2_fu_331_p1");
    sc_trace(mVcdFile, tmp_74_2_fu_345_p1, "tmp_74_2_fu_345_p1");
    sc_trace(mVcdFile, tmp_74_2_2_fu_349_p1, "tmp_74_2_2_fu_349_p1");
    sc_trace(mVcdFile, exitcond_fu_196_p2, "exitcond_fu_196_p2");
    sc_trace(mVcdFile, j_s_fu_210_p2, "j_s_fu_210_p2");
    sc_trace(mVcdFile, tmp_mid2_fu_227_p0, "tmp_mid2_fu_227_p0");
    sc_trace(mVcdFile, i_cast3_fu_233_p1, "i_cast3_fu_233_p1");
    sc_trace(mVcdFile, i_cast_fu_245_p1, "i_cast_fu_245_p1");
    sc_trace(mVcdFile, tmp1_fu_256_p2, "tmp1_fu_256_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_262_p1, "tmp1_cast_fu_262_p1");
    sc_trace(mVcdFile, tmp2_fu_276_p2, "tmp2_fu_276_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_282_p1, "tmp2_cast_fu_282_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, tmp_mid2_fu_227_p00, "tmp_mid2_fu_227_p00");
#endif

    }
}

dilate::~dilate() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void dilate::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_173 = i_13_reg_423.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_173 = ap_const_lv8_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_151 = indvar_flatten_next_reg_357.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_151 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_reg_162 = tmp_mid2_v_v_reg_369.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_162 = ap_const_lv8_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_353 = exitcond_flatten_fu_184_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        i_13_reg_423 = i_13_fu_291_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_184_p2.read(), ap_const_lv1_0))) {
        i_mid2_reg_362 = i_mid2_fu_202_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next_reg_357 = indvar_flatten_next_fu_190_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_19_reg_389 = tmp_19_fu_241_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_fu_248_p3.read(), ap_const_lv1_1))) {
        tmp_20_reg_404 = tmp_20_fu_266_p2.read();
        tmp_72_2_reg_416 = tmp_72_2_fu_286_p2.read();
        tmp_73_1_reg_411 = tmp_73_1_fu_271_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1))) {
        tmp_21_reg_433 = tmp_21_fu_309_p2.read();
        tmp_73_0_2_reg_438 = tmp_73_0_2_fu_314_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1))) {
        tmp_73_1_2_reg_428 = tmp_73_1_2_fu_304_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1))) {
        tmp_73_2_2_reg_448 = tmp_73_2_2_fu_340_p2.read();
        tmp_73_2_reg_443 = tmp_73_2_fu_335_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0))) {
        tmp_mid2_reg_375 = tmp_mid2_fu_227_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_184_p2.read(), ap_const_lv1_0))) {
        tmp_mid2_v_v_reg_369 = tmp_mid2_v_v_fu_216_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        tmp_reg_400 = foreground_q0.read().range(7, 7);
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_s_reg_382 = tmp_s_fu_236_p2.read();
    }
}

void dilate::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void dilate::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void dilate::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void dilate::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void dilate::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void dilate::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dilate::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[6];
}

void dilate::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state10_pp0_stage3_iter1() {
    ap_block_state10_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_block_state9_pp0_stage2_iter1() {
    ap_block_state9_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dilate::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_184_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void dilate::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dilate::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void dilate::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dilate::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void dilate::thread_ap_phi_mux_i_phi_fu_177_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_177_p4 = i_13_reg_423.read();
    } else {
        ap_phi_mux_i_phi_fu_177_p4 = i_reg_173.read();
    }
}

void dilate::thread_ap_phi_mux_indvar_flatten_phi_fu_155_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_155_p4 = indvar_flatten_next_reg_357.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_155_p4 = indvar_flatten_reg_151.read();
    }
}

void dilate::thread_ap_phi_mux_j_phi_fu_166_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_phi_fu_166_p4 = tmp_mid2_v_v_reg_369.read();
    } else {
        ap_phi_mux_j_phi_fu_166_p4 = j_reg_162.read();
    }
}

void dilate::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dilate::thread_exitcond_flatten_fu_184_p2() {
    exitcond_flatten_fu_184_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_155_p4.read().is_01() || !ap_const_lv15_7BC4.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_155_p4.read() == ap_const_lv15_7BC4);
}

void dilate::thread_exitcond_fu_196_p2() {
    exitcond_fu_196_p2 = (!ap_phi_mux_i_phi_fu_177_p4.read().is_01() || !ap_const_lv8_B3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_177_p4.read() == ap_const_lv8_B3);
}

void dilate::thread_foreground_address0() {
    foreground_address0 =  (sc_lv<15>) (tmp_19_fu_241_p1.read());
}

void dilate::thread_foreground_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        foreground_ce0 = ap_const_logic_1;
    } else {
        foreground_ce0 = ap_const_logic_0;
    }
}

void dilate::thread_i_13_fu_291_p2() {
    i_13_fu_291_p2 = (!i_mid2_reg_362.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_mid2_reg_362.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void dilate::thread_i_cast3_fu_233_p1() {
    i_cast3_fu_233_p1 = esl_zext<15,8>(i_mid2_reg_362.read());
}

void dilate::thread_i_cast_fu_245_p1() {
    i_cast_fu_245_p1 = esl_zext<9,8>(i_mid2_reg_362.read());
}

void dilate::thread_i_mid2_fu_202_p3() {
    i_mid2_fu_202_p3 = (!exitcond_fu_196_p2.read()[0].is_01())? sc_lv<8>(): ((exitcond_fu_196_p2.read()[0].to_bool())? ap_const_lv8_1: ap_phi_mux_i_phi_fu_177_p4.read());
}

void dilate::thread_indvar_flatten_next_fu_190_p2() {
    indvar_flatten_next_fu_190_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_155_p4.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(ap_phi_mux_indvar_flatten_phi_fu_155_p4.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dilate::thread_j_s_fu_210_p2() {
    j_s_fu_210_p2 = (!ap_phi_mux_j_phi_fu_166_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ap_phi_mux_j_phi_fu_166_p4.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void dilate::thread_output_addr_5_gep_fu_73_p3() {
    output_addr_5_gep_fu_73_p3 =  (sc_lv<15>) (tmp_19_reg_389.read());
}

void dilate::thread_output_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        output_r_address0 =  (sc_lv<15>) (tmp_74_2_fu_345_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        output_r_address0 =  (sc_lv<15>) (tmp_22_fu_327_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_r_address0 =  (sc_lv<15>) (tmp_74_1_2_fu_319_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_r_address0 =  (sc_lv<15>) (tmp_74_0_1_fu_296_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(tmp_fu_248_p3.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        output_r_address0 = output_addr_5_gep_fu_73_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_248_p3.read()))) {
        output_r_address0 =  (sc_lv<15>) (tmp_19_reg_389.read());
    } else {
        output_r_address0 = "XXXXXXXXXXXXXXX";
    }
}

void dilate::thread_output_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            output_r_address1 =  (sc_lv<15>) (tmp_74_2_2_fu_349_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            output_r_address1 =  (sc_lv<15>) (tmp_74_0_2_fu_331_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            output_r_address1 =  (sc_lv<15>) (tmp_74_2_1_fu_323_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            output_r_address1 =  (sc_lv<15>) (tmp_74_1_fu_300_p1.read());
        } else {
            output_r_address1 = "XXXXXXXXXXXXXXX";
        }
    } else {
        output_r_address1 = "XXXXXXXXXXXXXXX";
    }
}

void dilate::thread_output_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_248_p3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_fu_248_p3.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void dilate::thread_output_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_r_ce1 = ap_const_logic_1;
    } else {
        output_r_ce1 = ap_const_logic_0;
    }
}

void dilate::thread_output_r_d0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(tmp_fu_248_p3.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)))) {
        output_r_d0 = ap_const_lv8_FF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_248_p3.read()))) {
        output_r_d0 = ap_const_lv8_0;
    } else {
        output_r_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void dilate::thread_output_r_d1() {
    output_r_d1 = ap_const_lv8_FF;
}

void dilate::thread_output_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_248_p3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_353.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_fu_248_p3.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void dilate::thread_output_r_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_reg_400.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_r_we1 = ap_const_logic_1;
    } else {
        output_r_we1 = ap_const_logic_0;
    }
}

void dilate::thread_tmp1_cast_fu_262_p1() {
    tmp1_cast_fu_262_p1 = esl_sext<15,9>(tmp1_fu_256_p2.read());
}

void dilate::thread_tmp1_fu_256_p2() {
    tmp1_fu_256_p2 = (!i_cast_fu_245_p1.read().is_01() || !ap_const_lv9_14C.is_01())? sc_lv<9>(): (sc_biguint<9>(i_cast_fu_245_p1.read()) + sc_bigint<9>(ap_const_lv9_14C));
}

void dilate::thread_tmp2_cast_fu_282_p1() {
    tmp2_cast_fu_282_p1 = esl_zext<15,9>(tmp2_fu_276_p2.read());
}

void dilate::thread_tmp2_fu_276_p2() {
    tmp2_fu_276_p2 = (!i_cast_fu_245_p1.read().is_01() || !ap_const_lv9_B4.is_01())? sc_lv<9>(): (sc_biguint<9>(i_cast_fu_245_p1.read()) + sc_biguint<9>(ap_const_lv9_B4));
}

void dilate::thread_tmp_19_fu_241_p1() {
    tmp_19_fu_241_p1 = esl_zext<64,15>(tmp_s_reg_382.read());
}

void dilate::thread_tmp_20_fu_266_p2() {
    tmp_20_fu_266_p2 = (!tmp1_cast_fu_262_p1.read().is_01() || !tmp_mid2_reg_375.read().is_01())? sc_lv<15>(): (sc_bigint<15>(tmp1_cast_fu_262_p1.read()) + sc_biguint<15>(tmp_mid2_reg_375.read()));
}

void dilate::thread_tmp_21_fu_309_p2() {
    tmp_21_fu_309_p2 = (!tmp_20_reg_404.read().is_01() || !ap_const_lv15_7FFF.is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_20_reg_404.read()) + sc_bigint<15>(ap_const_lv15_7FFF));
}

void dilate::thread_tmp_22_fu_327_p1() {
    tmp_22_fu_327_p1 = esl_zext<64,15>(tmp_21_reg_433.read());
}

void dilate::thread_tmp_72_2_fu_286_p2() {
    tmp_72_2_fu_286_p2 = (!tmp2_cast_fu_282_p1.read().is_01() || !tmp_mid2_reg_375.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp2_cast_fu_282_p1.read()) + sc_biguint<15>(tmp_mid2_reg_375.read()));
}

void dilate::thread_tmp_73_0_2_fu_314_p2() {
    tmp_73_0_2_fu_314_p2 = (!tmp_20_reg_404.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_20_reg_404.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dilate::thread_tmp_73_1_2_fu_304_p2() {
    tmp_73_1_2_fu_304_p2 = (!tmp_s_reg_382.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_s_reg_382.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dilate::thread_tmp_73_1_fu_271_p2() {
    tmp_73_1_fu_271_p2 = (!tmp_s_reg_382.read().is_01() || !ap_const_lv15_7FFF.is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_s_reg_382.read()) + sc_bigint<15>(ap_const_lv15_7FFF));
}

void dilate::thread_tmp_73_2_2_fu_340_p2() {
    tmp_73_2_2_fu_340_p2 = (!tmp_72_2_reg_416.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_72_2_reg_416.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dilate::thread_tmp_73_2_fu_335_p2() {
    tmp_73_2_fu_335_p2 = (!tmp_72_2_reg_416.read().is_01() || !ap_const_lv15_7FFF.is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_72_2_reg_416.read()) + sc_bigint<15>(ap_const_lv15_7FFF));
}

void dilate::thread_tmp_74_0_1_fu_296_p1() {
    tmp_74_0_1_fu_296_p1 = esl_zext<64,15>(tmp_20_reg_404.read());
}

void dilate::thread_tmp_74_0_2_fu_331_p1() {
    tmp_74_0_2_fu_331_p1 = esl_zext<64,15>(tmp_73_0_2_reg_438.read());
}

void dilate::thread_tmp_74_1_2_fu_319_p1() {
    tmp_74_1_2_fu_319_p1 = esl_zext<64,15>(tmp_73_1_2_reg_428.read());
}

void dilate::thread_tmp_74_1_fu_300_p1() {
    tmp_74_1_fu_300_p1 = esl_zext<64,15>(tmp_73_1_reg_411.read());
}

void dilate::thread_tmp_74_2_1_fu_323_p1() {
    tmp_74_2_1_fu_323_p1 = esl_zext<64,15>(tmp_72_2_reg_416.read());
}

void dilate::thread_tmp_74_2_2_fu_349_p1() {
    tmp_74_2_2_fu_349_p1 = esl_zext<64,15>(tmp_73_2_2_reg_448.read());
}

void dilate::thread_tmp_74_2_fu_345_p1() {
    tmp_74_2_fu_345_p1 = esl_zext<64,15>(tmp_73_2_reg_443.read());
}

void dilate::thread_tmp_fu_248_p3() {
    tmp_fu_248_p3 = foreground_q0.read().range(7, 7);
}

void dilate::thread_tmp_mid2_fu_227_p0() {
    tmp_mid2_fu_227_p0 =  (sc_lv<8>) (tmp_mid2_fu_227_p00.read());
}

void dilate::thread_tmp_mid2_fu_227_p00() {
    tmp_mid2_fu_227_p00 = esl_zext<15,8>(tmp_mid2_v_v_reg_369.read());
}

void dilate::thread_tmp_mid2_fu_227_p2() {
    tmp_mid2_fu_227_p2 = (!tmp_mid2_fu_227_p0.read().is_01() || !ap_const_lv15_B4.is_01())? sc_lv<15>(): sc_biguint<8>(tmp_mid2_fu_227_p0.read()) * sc_biguint<15>(ap_const_lv15_B4);
}

void dilate::thread_tmp_mid2_v_v_fu_216_p3() {
    tmp_mid2_v_v_fu_216_p3 = (!exitcond_fu_196_p2.read()[0].is_01())? sc_lv<8>(): ((exitcond_fu_196_p2.read()[0].to_bool())? j_s_fu_210_p2.read(): ap_phi_mux_j_phi_fu_166_p4.read());
}

void dilate::thread_tmp_s_fu_236_p2() {
    tmp_s_fu_236_p2 = (!tmp_mid2_reg_375.read().is_01() || !i_cast3_fu_233_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_mid2_reg_375.read()) + sc_biguint<15>(i_cast3_fu_233_p1.read()));
}

void dilate::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_184_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_184_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

