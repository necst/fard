// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _blobsCount_HH_
#define _blobsCount_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct blobsCount : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > foreground_clean_address0;
    sc_out< sc_logic > foreground_clean_ce0;
    sc_in< sc_lv<8> > foreground_clean_q0;
    sc_out< sc_lv<15> > foreground_clean_address1;
    sc_out< sc_logic > foreground_clean_ce1;
    sc_in< sc_lv<8> > foreground_clean_q1;
    sc_out< sc_lv<31> > ap_return;


    // Module declarations
    blobsCount(sc_module_name name);
    SC_HAS_PROCESS(blobsCount);

    ~blobsCount();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > indvar_flatten_reg_99;
    sc_signal< sc_lv<8> > i_reg_110;
    sc_signal< sc_lv<32> > external_1_reg_122;
    sc_signal< sc_lv<8> > j_reg_134;
    sc_signal< sc_lv<32> > internal_1_reg_145;
    sc_signal< sc_lv<8> > reg_157;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_454;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_454_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state9_pp0_stage1_iter3;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_454_pp0_iter2_reg;
    sc_signal< sc_lv<8> > reg_161;
    sc_signal< sc_lv<8> > i_17_fu_177_p2;
    sc_signal< sc_lv<8> > i_17_reg_448;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_183_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_454_pp0_iter3_reg;
    sc_signal< sc_lv<15> > indvar_flatten_next_fu_189_p2;
    sc_signal< sc_lv<15> > indvar_flatten_next_reg_458;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond5_fu_195_p2;
    sc_signal< sc_lv<1> > exitcond5_reg_463;
    sc_signal< sc_lv<8> > j_mid2_fu_201_p3;
    sc_signal< sc_lv<8> > j_mid2_reg_469;
    sc_signal< sc_lv<8> > i_cast5_mid2_fu_209_p3;
    sc_signal< sc_lv<8> > i_cast5_mid2_reg_475;
    sc_signal< sc_lv<8> > i_17_mid1_fu_215_p2;
    sc_signal< sc_lv<8> > i_17_mid1_reg_481;
    sc_signal< sc_lv<15> > tmp_28_fu_224_p2;
    sc_signal< sc_lv<15> > tmp_28_reg_486;
    sc_signal< sc_lv<8> > j_4_fu_230_p2;
    sc_signal< sc_lv<8> > j_4_reg_494;
    sc_signal< sc_lv<15> > i_cast5_mid2_cast_fu_235_p1;
    sc_signal< sc_lv<15> > i_cast5_mid2_cast_reg_499;
    sc_signal< sc_lv<15> > tmp_29_fu_247_p2;
    sc_signal< sc_lv<15> > tmp_29_reg_505;
    sc_signal< sc_lv<15> > tmp_32_fu_252_p2;
    sc_signal< sc_lv<15> > tmp_32_reg_510;
    sc_signal< sc_lv<15> > tmp_35_fu_270_p2;
    sc_signal< sc_lv<15> > tmp_35_reg_525;
    sc_signal< sc_lv<15> > tmp_38_fu_280_p2;
    sc_signal< sc_lv<15> > tmp_38_reg_530;
    sc_signal< sc_lv<1> > tmp_39_fu_289_p2;
    sc_signal< sc_lv<1> > tmp_39_reg_541;
    sc_signal< sc_lv<1> > tmp_39_reg_541_pp0_iter3_reg;
    sc_signal< sc_lv<1> > grp_fu_165_p2;
    sc_signal< sc_lv<1> > tmp_31_reg_551;
    sc_signal< sc_lv<1> > grp_fu_171_p2;
    sc_signal< sc_lv<1> > tmp_34_reg_557;
    sc_signal< sc_lv<2> > p_px_1_fu_321_p3;
    sc_signal< sc_lv<2> > p_px_1_reg_562;
    sc_signal< sc_lv<1> > tmp_41_reg_567;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<32> > external_fu_329_p2;
    sc_signal< sc_lv<32> > external_reg_572;
    sc_signal< sc_lv<32> > internal_fu_335_p2;
    sc_signal< sc_lv<32> > internal_reg_577;
    sc_signal< sc_lv<32> > p_external_1_fu_370_p3;
    sc_signal< sc_lv<32> > internal_2_fu_383_p3;
    sc_signal< sc_lv<32> > tmp_fu_390_p2;
    sc_signal< sc_lv<32> > tmp_reg_592;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp_26_reg_597;
    sc_signal< sc_lv<30> > tmp_25_reg_602;
    sc_signal< sc_lv<30> > tmp_24_reg_607;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<15> > ap_phi_mux_indvar_flatten_phi_fu_103_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<8> > ap_phi_mux_i_phi_fu_114_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_j_phi_fu_138_p4;
    sc_signal< sc_lv<64> > tmp_30_fu_257_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_33_fu_261_p1;
    sc_signal< sc_lv<64> > tmp_36_fu_285_p1;
    sc_signal< sc_lv<64> > tmp_40_fu_294_p1;
    sc_signal< sc_lv<8> > tmp_28_fu_224_p0;
    sc_signal< sc_lv<8> > i_17_cast_mid2_fu_238_p3;
    sc_signal< sc_lv<15> > i_17_cast_mid2_cast_fu_243_p1;
    sc_signal< sc_lv<15> > tmp1_fu_265_p2;
    sc_signal< sc_lv<15> > tmp2_fu_275_p2;
    sc_signal< sc_lv<2> > px_fu_301_p3;
    sc_signal< sc_lv<2> > p_cast_fu_298_p1;
    sc_signal< sc_lv<2> > px_1_fu_308_p3;
    sc_signal< sc_lv<2> > px_2_fu_315_p2;
    sc_signal< sc_lv<3> > p_px_1_cast_fu_341_p1;
    sc_signal< sc_lv<3> > px_4_fu_344_p2;
    sc_signal< sc_lv<3> > p_px_1_30_fu_350_p3;
    sc_signal< sc_lv<3> > px_3_fu_357_p3;
    sc_signal< sc_lv<1> > tmp_42_fu_364_p2;
    sc_signal< sc_lv<1> > tmp_43_fu_377_p2;
    sc_signal< sc_lv<32> > p_neg_fu_414_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<31> > p_lshr_cast_fu_429_p1;
    sc_signal< sc_lv<31> > p_neg_t_fu_432_p2;
    sc_signal< sc_lv<31> > p_lshr_f_cast_fu_438_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<15> > tmp_28_fu_224_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_state10;
    static const sc_lv<6> ap_ST_fsm_state11;
    static const sc_lv<6> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<15> ap_const_lv15_7DDC;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<8> ap_const_lv8_B3;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<15> ap_const_lv15_B4;
    static const sc_lv<15> ap_const_lv15_B5;
    static const sc_lv<15> ap_const_lv15_7E90;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<31> ap_const_lv31_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_block_state7_pp0_stage1_iter2();
    void thread_ap_block_state8_pp0_stage0_iter3();
    void thread_ap_block_state9_pp0_stage1_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_114_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_103_p4();
    void thread_ap_phi_mux_j_phi_fu_138_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_exitcond5_fu_195_p2();
    void thread_exitcond_flatten_fu_183_p2();
    void thread_external_fu_329_p2();
    void thread_foreground_clean_address0();
    void thread_foreground_clean_address1();
    void thread_foreground_clean_ce0();
    void thread_foreground_clean_ce1();
    void thread_grp_fu_165_p2();
    void thread_grp_fu_171_p2();
    void thread_i_17_cast_mid2_cast_fu_243_p1();
    void thread_i_17_cast_mid2_fu_238_p3();
    void thread_i_17_fu_177_p2();
    void thread_i_17_mid1_fu_215_p2();
    void thread_i_cast5_mid2_cast_fu_235_p1();
    void thread_i_cast5_mid2_fu_209_p3();
    void thread_indvar_flatten_next_fu_189_p2();
    void thread_internal_2_fu_383_p3();
    void thread_internal_fu_335_p2();
    void thread_j_4_fu_230_p2();
    void thread_j_mid2_fu_201_p3();
    void thread_p_cast_fu_298_p1();
    void thread_p_external_1_fu_370_p3();
    void thread_p_lshr_cast_fu_429_p1();
    void thread_p_lshr_f_cast_fu_438_p1();
    void thread_p_neg_fu_414_p2();
    void thread_p_neg_t_fu_432_p2();
    void thread_p_px_1_30_fu_350_p3();
    void thread_p_px_1_cast_fu_341_p1();
    void thread_p_px_1_fu_321_p3();
    void thread_px_1_fu_308_p3();
    void thread_px_2_fu_315_p2();
    void thread_px_3_fu_357_p3();
    void thread_px_4_fu_344_p2();
    void thread_px_fu_301_p3();
    void thread_tmp1_fu_265_p2();
    void thread_tmp2_fu_275_p2();
    void thread_tmp_28_fu_224_p0();
    void thread_tmp_28_fu_224_p00();
    void thread_tmp_28_fu_224_p2();
    void thread_tmp_29_fu_247_p2();
    void thread_tmp_30_fu_257_p1();
    void thread_tmp_32_fu_252_p2();
    void thread_tmp_33_fu_261_p1();
    void thread_tmp_35_fu_270_p2();
    void thread_tmp_36_fu_285_p1();
    void thread_tmp_38_fu_280_p2();
    void thread_tmp_39_fu_289_p2();
    void thread_tmp_40_fu_294_p1();
    void thread_tmp_42_fu_364_p2();
    void thread_tmp_43_fu_377_p2();
    void thread_tmp_fu_390_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
