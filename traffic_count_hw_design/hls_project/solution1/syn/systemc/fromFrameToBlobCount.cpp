// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fromFrameToBlobCount.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fromFrameToBlobCount::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fromFrameToBlobCount::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state1 = "1";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state2 = "10";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state8 = "10000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp1_stage0 = "100000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp1_stage1 = "1000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state20 = "10000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp2_stage0 = "100000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state26 = "1000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state27 = "10000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state28 = "100000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state29 = "1000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state30 = "10000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state31 = "100000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state32 = "1000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state33 = "10000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state34 = "100000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state35 = "1000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state36 = "10000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state37 = "100000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state38 = "1000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state39 = "10000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state40 = "100000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state41 = "1000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state42 = "10000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp3_stage0 = "100000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp3_stage1 = "1000000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state48 = "10000000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp4_stage0 = "100000000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp4_stage1 = "1000000000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp4_stage2 = "10000000000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_pp4_stage3 = "100000000000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state54 = "1000000000000000000000000000000000";
const sc_lv<35> fromFrameToBlobCount::ap_ST_fsm_state55 = "10000000000000000000000000000000000";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool fromFrameToBlobCount::ap_const_boolean_1 = true;
const sc_lv<1> fromFrameToBlobCount::ap_const_lv1_0 = "0";
const sc_lv<1> fromFrameToBlobCount::ap_const_lv1_1 = "1";
const sc_lv<2> fromFrameToBlobCount::ap_const_lv2_0 = "00";
const sc_lv<2> fromFrameToBlobCount::ap_const_lv2_2 = "10";
const sc_lv<2> fromFrameToBlobCount::ap_const_lv2_3 = "11";
const sc_lv<2> fromFrameToBlobCount::ap_const_lv2_1 = "1";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_1B = "11011";
const bool fromFrameToBlobCount::ap_const_boolean_0 = false;
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_3 = "11";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_18 = "11000";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_19 = "11001";
const int fromFrameToBlobCount::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_5 = "101";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_6 = "110";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_8 = "1000";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_1F = "11111";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_1 = "1";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_2 = "10";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_A = "1010";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_E = "1110";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_12 = "10010";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_1A = "11010";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_1D = "11101";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_1E = "11110";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_20 = "100000";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_4 = "100";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_7 = "111";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_1C = "11100";
const sc_lv<15> fromFrameToBlobCount::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_D = "1101";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_9 = "1001";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_11 = "10001";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_15 = "10101";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_B = "1011";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_13 = "10011";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_17 = "10111";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_F = "1111";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_16 = "10110";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_C = "1100";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_10 = "10000";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_14 = "10100";
const sc_lv<4> fromFrameToBlobCount::ap_const_lv4_F = "1111";
const sc_lv<64> fromFrameToBlobCount::ap_const_lv64_18 = "11000";
const sc_lv<64> fromFrameToBlobCount::ap_const_lv64_1F = "11111";
const sc_lv<64> fromFrameToBlobCount::ap_const_lv64_10 = "10000";
const sc_lv<64> fromFrameToBlobCount::ap_const_lv64_17 = "10111";
const sc_lv<64> fromFrameToBlobCount::ap_const_lv64_8 = "1000";
const sc_lv<64> fromFrameToBlobCount::ap_const_lv64_F = "1111";
const sc_lv<15> fromFrameToBlobCount::ap_const_lv15_5EEC = "101111011101100";
const sc_lv<15> fromFrameToBlobCount::ap_const_lv15_1 = "1";
const sc_lv<19> fromFrameToBlobCount::ap_const_lv19_47332 = "1000111001100110010";
const sc_lv<19> fromFrameToBlobCount::ap_const_lv19_5EEE2 = "1011110111011100010";
const sc_lv<17> fromFrameToBlobCount::ap_const_lv17_18CCE = "11000110011001110";
const sc_lv<17> fromFrameToBlobCount::ap_const_lv17_17BAF = "10111101110101111";
const sc_lv<17> fromFrameToBlobCount::ap_const_lv17_3 = "11";
const sc_lv<17> fromFrameToBlobCount::ap_const_lv17_2 = "10";
const sc_lv<17> fromFrameToBlobCount::ap_const_lv17_1 = "1";
const sc_lv<15> fromFrameToBlobCount::ap_const_lv15_7E90 = "111111010010000";
const sc_lv<18> fromFrameToBlobCount::ap_const_lv18_1 = "1";
const sc_lv<18> fromFrameToBlobCount::ap_const_lv18_2 = "10";
const sc_lv<15> fromFrameToBlobCount::ap_const_lv15_3B = "111011";
const sc_lv<5> fromFrameToBlobCount::ap_const_lv5_0 = "00000";
const sc_lv<8> fromFrameToBlobCount::ap_const_lv8_FF = "11111111";
const sc_lv<9> fromFrameToBlobCount::ap_const_lv9_0 = "000000000";
const sc_lv<8> fromFrameToBlobCount::ap_const_lv8_0 = "00000000";
const sc_lv<17> fromFrameToBlobCount::ap_const_lv17_22 = "100010";
const sc_lv<17> fromFrameToBlobCount::ap_const_lv17_17BD2 = "10111101111010010";
const sc_lv<13> fromFrameToBlobCount::ap_const_lv13_B = "1011";
const sc_lv<36> fromFrameToBlobCount::ap_const_lv36_28F5D = "101000111101011101";
const sc_lv<32> fromFrameToBlobCount::ap_const_lv32_22 = "100010";

fromFrameToBlobCount::fromFrameToBlobCount(sc_module_name name) : sc_module(name), mVcdFile(0) {
    background_U = new fromFrameToBlobCount_background("background_U");
    background_U->clk(ap_clk);
    background_U->reset(ap_rst_n_inv);
    background_U->address0(background_address0);
    background_U->ce0(background_ce0);
    background_U->we0(background_we0);
    background_U->d0(background_d0);
    background_U->q0(background_q0);
    background_U->address1(background_address1);
    background_U->ce1(background_ce1);
    background_U->we1(background_we1);
    background_U->d1(background_d1);
    background_U->q1(background_q1);
    input_r_U = new fromFrameToBlobCount_background("input_r_U");
    input_r_U->clk(ap_clk);
    input_r_U->reset(ap_rst_n_inv);
    input_r_U->address0(input_r_address0);
    input_r_U->ce0(input_r_ce0);
    input_r_U->we0(input_r_we0);
    input_r_U->d0(input_r_d0);
    input_r_U->q0(input_r_q0);
    input_r_U->address1(input_r_address1);
    input_r_U->ce1(input_r_ce1);
    input_r_U->we1(input_r_we1);
    input_r_U->d1(input_r_d1);
    input_r_U->q1(input_r_q1);
    input_grey_U = new fromFrameToBlobCount_input_grey("input_grey_U");
    input_grey_U->clk(ap_clk);
    input_grey_U->reset(ap_rst_n_inv);
    input_grey_U->address0(input_grey_address0);
    input_grey_U->ce0(input_grey_ce0);
    input_grey_U->we0(input_grey_we0);
    input_grey_U->d0(input_grey_d0);
    input_grey_U->q0(input_grey_q0);
    foreground_U = new fromFrameToBlobCount_input_grey("foreground_U");
    foreground_U->clk(ap_clk);
    foreground_U->reset(ap_rst_n_inv);
    foreground_U->address0(foreground_address0);
    foreground_U->ce0(foreground_ce0);
    foreground_U->we0(foreground_we0);
    foreground_U->d0(foreground_d0);
    foreground_U->q0(foreground_q0);
    foreground_clean_U = new fromFrameToBlobCount_foreground_clean("foreground_clean_U");
    foreground_clean_U->clk(ap_clk);
    foreground_clean_U->reset(ap_rst_n_inv);
    foreground_clean_U->address0(foreground_clean_address0);
    foreground_clean_U->ce0(foreground_clean_ce0);
    foreground_clean_U->we0(foreground_clean_we0);
    foreground_clean_U->d0(foreground_clean_d0);
    foreground_clean_U->q0(foreground_clean_q0);
    foreground_clean_U->address1(foreground_clean_address1);
    foreground_clean_U->ce1(foreground_clean_ce1);
    foreground_clean_U->we1(foreground_clean_we1);
    foreground_clean_U->d1(grp_dilate_fu_579_output_r_d1);
    foreground_clean_U->q1(foreground_clean_q1);
    fromFrameToBlobCount_control_s_axi_U = new fromFrameToBlobCount_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("fromFrameToBlobCount_control_s_axi_U");
    fromFrameToBlobCount_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    fromFrameToBlobCount_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    fromFrameToBlobCount_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    fromFrameToBlobCount_control_s_axi_U->WVALID(s_axi_control_WVALID);
    fromFrameToBlobCount_control_s_axi_U->WREADY(s_axi_control_WREADY);
    fromFrameToBlobCount_control_s_axi_U->WDATA(s_axi_control_WDATA);
    fromFrameToBlobCount_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    fromFrameToBlobCount_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    fromFrameToBlobCount_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    fromFrameToBlobCount_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    fromFrameToBlobCount_control_s_axi_U->RVALID(s_axi_control_RVALID);
    fromFrameToBlobCount_control_s_axi_U->RREADY(s_axi_control_RREADY);
    fromFrameToBlobCount_control_s_axi_U->RDATA(s_axi_control_RDATA);
    fromFrameToBlobCount_control_s_axi_U->RRESP(s_axi_control_RRESP);
    fromFrameToBlobCount_control_s_axi_U->BVALID(s_axi_control_BVALID);
    fromFrameToBlobCount_control_s_axi_U->BREADY(s_axi_control_BREADY);
    fromFrameToBlobCount_control_s_axi_U->BRESP(s_axi_control_BRESP);
    fromFrameToBlobCount_control_s_axi_U->ACLK(ap_clk);
    fromFrameToBlobCount_control_s_axi_U->ARESET(ap_rst_n_inv);
    fromFrameToBlobCount_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    fromFrameToBlobCount_control_s_axi_U->ap_start(ap_start);
    fromFrameToBlobCount_control_s_axi_U->interrupt(interrupt);
    fromFrameToBlobCount_control_s_axi_U->ap_ready(ap_ready);
    fromFrameToBlobCount_control_s_axi_U->ap_done(ap_done);
    fromFrameToBlobCount_control_s_axi_U->ap_idle(ap_idle);
    fromFrameToBlobCount_control_s_axi_U->action(action);
    fromFrameToBlobCount_control_s_axi_U->md_threshold(md_threshold);
    fromFrameToBlobCount_control_s_axi_U->erosion_iteration(erosion_iteration);
    fromFrameToBlobCount_control_s_axi_U->dilate_iteration(dilate_iteration);
    fromFrameToBlobCount_control_s_axi_U->second_erosion_iteration(second_erosion_iteration);
    grp_erode_filter_fu_565 = new erode_filter("grp_erode_filter_fu_565");
    grp_erode_filter_fu_565->ap_clk(ap_clk);
    grp_erode_filter_fu_565->ap_rst(ap_rst_n_inv);
    grp_erode_filter_fu_565->ap_start(grp_erode_filter_fu_565_ap_start);
    grp_erode_filter_fu_565->ap_done(grp_erode_filter_fu_565_ap_done);
    grp_erode_filter_fu_565->ap_idle(grp_erode_filter_fu_565_ap_idle);
    grp_erode_filter_fu_565->ap_ready(grp_erode_filter_fu_565_ap_ready);
    grp_erode_filter_fu_565->input_r_address0(grp_erode_filter_fu_565_input_r_address0);
    grp_erode_filter_fu_565->input_r_ce0(grp_erode_filter_fu_565_input_r_ce0);
    grp_erode_filter_fu_565->input_r_q0(foreground_q0);
    grp_erode_filter_fu_565->output_r_address0(grp_erode_filter_fu_565_output_r_address0);
    grp_erode_filter_fu_565->output_r_ce0(grp_erode_filter_fu_565_output_r_ce0);
    grp_erode_filter_fu_565->output_r_we0(grp_erode_filter_fu_565_output_r_we0);
    grp_erode_filter_fu_565->output_r_d0(grp_erode_filter_fu_565_output_r_d0);
    grp_blobsCount_fu_573 = new blobsCount("grp_blobsCount_fu_573");
    grp_blobsCount_fu_573->ap_clk(ap_clk);
    grp_blobsCount_fu_573->ap_rst(ap_rst_n_inv);
    grp_blobsCount_fu_573->ap_start(grp_blobsCount_fu_573_ap_start);
    grp_blobsCount_fu_573->ap_done(grp_blobsCount_fu_573_ap_done);
    grp_blobsCount_fu_573->ap_idle(grp_blobsCount_fu_573_ap_idle);
    grp_blobsCount_fu_573->ap_ready(grp_blobsCount_fu_573_ap_ready);
    grp_blobsCount_fu_573->foreground_clean_address0(grp_blobsCount_fu_573_foreground_clean_address0);
    grp_blobsCount_fu_573->foreground_clean_ce0(grp_blobsCount_fu_573_foreground_clean_ce0);
    grp_blobsCount_fu_573->foreground_clean_q0(foreground_clean_q0);
    grp_blobsCount_fu_573->foreground_clean_address1(grp_blobsCount_fu_573_foreground_clean_address1);
    grp_blobsCount_fu_573->foreground_clean_ce1(grp_blobsCount_fu_573_foreground_clean_ce1);
    grp_blobsCount_fu_573->foreground_clean_q1(foreground_clean_q1);
    grp_blobsCount_fu_573->ap_return(grp_blobsCount_fu_573_ap_return);
    grp_dilate_fu_579 = new dilate("grp_dilate_fu_579");
    grp_dilate_fu_579->ap_clk(ap_clk);
    grp_dilate_fu_579->ap_rst(ap_rst_n_inv);
    grp_dilate_fu_579->ap_start(grp_dilate_fu_579_ap_start);
    grp_dilate_fu_579->ap_done(grp_dilate_fu_579_ap_done);
    grp_dilate_fu_579->ap_idle(grp_dilate_fu_579_ap_idle);
    grp_dilate_fu_579->ap_ready(grp_dilate_fu_579_ap_ready);
    grp_dilate_fu_579->output_r_address0(grp_dilate_fu_579_output_r_address0);
    grp_dilate_fu_579->output_r_ce0(grp_dilate_fu_579_output_r_ce0);
    grp_dilate_fu_579->output_r_we0(grp_dilate_fu_579_output_r_we0);
    grp_dilate_fu_579->output_r_d0(grp_dilate_fu_579_output_r_d0);
    grp_dilate_fu_579->output_r_address1(grp_dilate_fu_579_output_r_address1);
    grp_dilate_fu_579->output_r_ce1(grp_dilate_fu_579_output_r_ce1);
    grp_dilate_fu_579->output_r_we1(grp_dilate_fu_579_output_r_we1);
    grp_dilate_fu_579->output_r_d1(grp_dilate_fu_579_output_r_d1);
    grp_dilate_fu_579->foreground_address0(grp_dilate_fu_579_foreground_address0);
    grp_dilate_fu_579->foreground_ce0(grp_dilate_fu_579_foreground_ce0);
    grp_dilate_fu_579->foreground_q0(foreground_q0);
    grp_cleanBorders_fu_587 = new cleanBorders("grp_cleanBorders_fu_587");
    grp_cleanBorders_fu_587->ap_clk(ap_clk);
    grp_cleanBorders_fu_587->ap_rst(ap_rst_n_inv);
    grp_cleanBorders_fu_587->ap_start(grp_cleanBorders_fu_587_ap_start);
    grp_cleanBorders_fu_587->ap_done(grp_cleanBorders_fu_587_ap_done);
    grp_cleanBorders_fu_587->ap_idle(grp_cleanBorders_fu_587_ap_idle);
    grp_cleanBorders_fu_587->ap_ready(grp_cleanBorders_fu_587_ap_ready);
    grp_cleanBorders_fu_587->input_r_address0(grp_cleanBorders_fu_587_input_r_address0);
    grp_cleanBorders_fu_587->input_r_ce0(grp_cleanBorders_fu_587_input_r_ce0);
    grp_cleanBorders_fu_587->input_r_we0(grp_cleanBorders_fu_587_input_r_we0);
    grp_cleanBorders_fu_587->input_r_d0(grp_cleanBorders_fu_587_input_r_d0);
    grp_copy_fu_593 = new copy("grp_copy_fu_593");
    grp_copy_fu_593->ap_clk(ap_clk);
    grp_copy_fu_593->ap_rst(ap_rst_n_inv);
    grp_copy_fu_593->ap_start(grp_copy_fu_593_ap_start);
    grp_copy_fu_593->ap_done(grp_copy_fu_593_ap_done);
    grp_copy_fu_593->ap_idle(grp_copy_fu_593_ap_idle);
    grp_copy_fu_593->ap_ready(grp_copy_fu_593_ap_ready);
    grp_copy_fu_593->input_r_address0(grp_copy_fu_593_input_r_address0);
    grp_copy_fu_593->input_r_ce0(grp_copy_fu_593_input_r_ce0);
    grp_copy_fu_593->input_r_q0(foreground_clean_q0);
    grp_copy_fu_593->output_r_address0(grp_copy_fu_593_output_r_address0);
    grp_copy_fu_593->output_r_ce0(grp_copy_fu_593_output_r_ce0);
    grp_copy_fu_593->output_r_we0(grp_copy_fu_593_output_r_we0);
    grp_copy_fu_593->output_r_d0(grp_copy_fu_593_output_r_d0);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16 = new fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1<1,3,8,5,15,15>("fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16");
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16->clk(ap_clk);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16->reset(ap_rst_n_inv);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16->din0(grp_fu_1246_p0);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16->din1(grp_fu_1246_p1);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16->din2(tmp_7_i1_reg_1398);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16->ce(ap_var_for_const0);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16->dout(grp_fu_1246_p3);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17 = new fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1<1,3,17,19,36>("fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17");
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17->clk(ap_clk);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17->reset(ap_rst_n_inv);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17->din0(grp_fu_1253_p0);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17->din1(grp_fu_1253_p1);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17->ce(ap_var_for_const0);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17->dout(grp_fu_1253_p2);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_1_1_U18 = new fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_1_1<1,1,8,5,15,15>("fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_1_1_U18");
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_1_1_U18->din0(grp_fu_1259_p0);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_1_1_U18->din1(grp_fu_1259_p1);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_1_1_U18->din2(tmp_7_i_reg_1580);
    fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_1_1_U18->dout(grp_fu_1259_p3);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_1_1_U19 = new fromFrameToBlobCount_mul_mul_17ns_19ns_36_1_1<1,1,17,19,36>("fromFrameToBlobCount_mul_mul_17ns_19ns_36_1_1_U19");
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_1_1_U19->din0(mul_fu_1267_p0);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_1_1_U19->din1(mul_fu_1267_p1);
    fromFrameToBlobCount_mul_mul_17ns_19ns_36_1_1_U19->dout(mul_fu_1267_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_abs_i_cast_fu_964_p1);
    sensitive << ( abs_i_fu_957_p3 );

    SC_METHOD(thread_abs_i_fu_957_p3);
    sensitive << ( tmp_22_i_reg_1457 );
    sensitive << ( abscond_i_fu_952_p2 );
    sensitive << ( neg_i_fu_947_p2 );

    SC_METHOD(thread_abscond_i_fu_952_p2);
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( exitcond_i2_reg_1428_pp2_iter2_reg );
    sensitive << ( tmp_22_i_reg_1457 );
    sensitive << ( ap_enable_reg_pp2_iter3 );

    SC_METHOD(thread_action_0_ack_out);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_addrCmp1_fu_708_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_reg_1312 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( mem_index_gep1_reg_1321 );

    SC_METHOD(thread_addrCmp_fu_1045_p2);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_1_reg_1498 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( mem_index_gep_reg_1512 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp4_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp4_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp4_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp4_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( streamIn_V_data_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_reg_1312 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( streamIn_V_data_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_reg_1312 );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);

    SC_METHOD(thread_ap_block_pp3_stage0);

    SC_METHOD(thread_ap_block_pp3_stage0_11001);

    SC_METHOD(thread_ap_block_pp3_stage0_subdone);

    SC_METHOD(thread_ap_block_pp3_stage1);

    SC_METHOD(thread_ap_block_pp3_stage1_11001);
    sensitive << ( streamIn_V_data_0_vld_out );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_1_reg_1498 );

    SC_METHOD(thread_ap_block_pp3_stage1_subdone);
    sensitive << ( streamIn_V_data_0_vld_out );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_1_reg_1498 );

    SC_METHOD(thread_ap_block_pp4_stage0);

    SC_METHOD(thread_ap_block_pp4_stage0_11001);

    SC_METHOD(thread_ap_block_pp4_stage0_subdone);

    SC_METHOD(thread_ap_block_pp4_stage1);

    SC_METHOD(thread_ap_block_pp4_stage1_11001);

    SC_METHOD(thread_ap_block_pp4_stage1_subdone);

    SC_METHOD(thread_ap_block_pp4_stage2);

    SC_METHOD(thread_ap_block_pp4_stage2_11001);

    SC_METHOD(thread_ap_block_pp4_stage2_subdone);

    SC_METHOD(thread_ap_block_pp4_stage3);

    SC_METHOD(thread_ap_block_pp4_stage3_11001);

    SC_METHOD(thread_ap_block_pp4_stage3_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state11_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state12_pp1_stage1_iter1);

    SC_METHOD(thread_ap_block_state13_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state14_pp1_stage1_iter2);

    SC_METHOD(thread_ap_block_state15_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state16_pp1_stage1_iter3);

    SC_METHOD(thread_ap_block_state17_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state18_pp1_stage1_iter4);

    SC_METHOD(thread_ap_block_state19_pp1_stage0_iter5);

    SC_METHOD(thread_ap_block_state21_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state22_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state23_pp2_stage0_iter2);

    SC_METHOD(thread_ap_block_state24_pp2_stage0_iter3);

    SC_METHOD(thread_ap_block_state25_pp2_stage0_iter4);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state42_io);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( ap_predicate_op264_write_state42 );

    SC_METHOD(thread_ap_block_state43_pp3_stage0_iter0);

    SC_METHOD(thread_ap_block_state44_pp3_stage1_iter0);
    sensitive << ( streamIn_V_data_0_vld_out );
    sensitive << ( tmp_1_reg_1498 );

    SC_METHOD(thread_ap_block_state45_pp3_stage0_iter1);

    SC_METHOD(thread_ap_block_state46_pp3_stage1_iter1);

    SC_METHOD(thread_ap_block_state47_pp3_stage0_iter2);

    SC_METHOD(thread_ap_block_state49_pp4_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);
    sensitive << ( streamIn_V_data_0_vld_out );
    sensitive << ( tmp_4_reg_1312 );

    SC_METHOD(thread_ap_block_state50_pp4_stage1_iter0);

    SC_METHOD(thread_ap_block_state51_pp4_stage2_iter0);

    SC_METHOD(thread_ap_block_state52_pp4_stage3_iter0);

    SC_METHOD(thread_ap_block_state53_pp4_stage0_iter1);

    SC_METHOD(thread_ap_block_state55);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( tmp_4_fu_674_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state9);
    sensitive << ( exitcond_i1_fu_761_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state21);
    sensitive << ( exitcond_i2_fu_916_p2 );

    SC_METHOD(thread_ap_condition_pp3_exit_iter0_state43);
    sensitive << ( tmp_1_fu_1019_p2 );

    SC_METHOD(thread_ap_condition_pp4_exit_iter0_state49);
    sensitive << ( exitcond_i_fu_1092_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_data_1_state );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_state );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_state );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_state );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_state );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_state );
    sensitive << ( streamOut_V_dest_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_enable_pp3);
    sensitive << ( ap_idle_pp3 );

    SC_METHOD(thread_ap_enable_pp4);
    sensitive << ( ap_idle_pp4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter5 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_enable_reg_pp2_iter4 );

    SC_METHOD(thread_ap_idle_pp3);
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_ap_idle_pp4);
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_1_phi_fu_479_p4);
    sensitive << ( tmp_4_reg_1312 );
    sensitive << ( i_1_reg_475 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_6_reg_1316 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_i1_phi_fu_490_p4);
    sensitive << ( i_i1_reg_486 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_i1_reg_1359 );
    sensitive << ( i_11_reg_1363 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_i_phi_fu_557_p4);
    sensitive << ( i_i_reg_553 );
    sensitive << ( exitcond_i_reg_1545 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( i_10_reg_1549 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp4_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_546_p4);
    sensitive << ( tmp_1_reg_1498 );
    sensitive << ( i_reg_542 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( i_5_reg_1502 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage0 );

    SC_METHOD(thread_ap_predicate_op264_write_state42);
    sensitive << ( tmp_reg_1304 );
    sensitive << ( tmp_s_reg_1308 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_data_1_state );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_state );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_state );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_state );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_state );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_state );
    sensitive << ( streamOut_V_dest_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_background_address0);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_CS_fsm_pp4_stage2 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( tmp_i2_fu_928_p1 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp4_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( new_index160_cast_fu_1075_p1 );
    sensitive << ( new_index164_cast_fu_1088_p1 );
    sensitive << ( tmp_1_i_fu_1135_p1 );
    sensitive << ( ap_block_pp4_stage1 );
    sensitive << ( tmp_9_i_fu_1166_p1 );
    sensitive << ( ap_block_pp4_stage2 );

    SC_METHOD(thread_background_address1);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_CS_fsm_pp4_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( new_index156_cast_fu_1071_p1 );
    sensitive << ( gepindex2_cast_fu_1084_p1 );
    sensitive << ( ap_block_pp4_stage1 );
    sensitive << ( tmp_5_i_fu_1143_p1 );
    sensitive << ( tmp_16_i_fu_1241_p1 );

    SC_METHOD(thread_background_ce0);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp4_stage2 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_block_pp4_stage2_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp4_stage1 );
    sensitive << ( ap_block_pp4_stage1_11001 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_background_ce1);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp4_stage1 );
    sensitive << ( ap_block_pp4_stage1_11001 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_enable_reg_pp4_iter1 );

    SC_METHOD(thread_background_d0);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1 );
    sensitive << ( reg_641 );
    sensitive << ( reg_647_pp3_iter1_reg );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_block_pp3_stage0 );

    SC_METHOD(thread_background_d1);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1 );
    sensitive << ( reg_635 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( tmp_3_reg_1525_pp3_iter1_reg );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( tmp_15_i_fu_1234_p2 );

    SC_METHOD(thread_background_we0);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( tmp_1_reg_1498_pp3_iter1_reg );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );

    SC_METHOD(thread_background_we1);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( exitcond_i_reg_1545 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( tmp_1_reg_1498_pp3_iter1_reg );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_enable_reg_pp4_iter1 );

    SC_METHOD(thread_cast_gep_index1_fu_686_p3);
    sensitive << ( ap_phi_mux_i_1_phi_fu_479_p4 );

    SC_METHOD(thread_cast_gep_index33_cas_fu_694_p1);
    sensitive << ( cast_gep_index1_fu_686_p3 );

    SC_METHOD(thread_cast_gep_index_fu_1031_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_546_p4 );

    SC_METHOD(thread_dilate_iteration_0_ack_out);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_erosion_iteration_0_ack_out);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_exitcond1_fu_992_p2);
    sensitive << ( dilate_iteration_rea_reg_1289 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( i_3_reg_520 );

    SC_METHOD(thread_exitcond2_fu_981_p2);
    sensitive << ( erosion_iteration_re_reg_1294 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( i_2_reg_509 );

    SC_METHOD(thread_exitcond_fu_1003_p2);
    sensitive << ( second_erosion_itera_reg_1284 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( i_4_reg_531 );

    SC_METHOD(thread_exitcond_i1_fu_761_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_i_i1_phi_fu_490_p4 );

    SC_METHOD(thread_exitcond_i2_fu_916_p2);
    sensitive << ( i_i2_reg_498 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond_i_fu_1092_p2);
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_phi_mux_i_i_phi_fu_557_p4 );

    SC_METHOD(thread_foreground_address0);
    sensitive << ( tmp_i2_reg_1437_pp2_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter4 );
    sensitive << ( grp_erode_filter_fu_565_input_r_address0 );
    sensitive << ( grp_dilate_fu_579_foreground_address0 );
    sensitive << ( grp_copy_fu_593_output_r_address0 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_foreground_ce0);
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter4 );
    sensitive << ( grp_erode_filter_fu_565_input_r_ce0 );
    sensitive << ( grp_dilate_fu_579_foreground_ce0 );
    sensitive << ( grp_copy_fu_593_output_r_ce0 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_foreground_clean_address0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_erode_filter_fu_565_output_r_address0 );
    sensitive << ( grp_blobsCount_fu_573_foreground_clean_address0 );
    sensitive << ( grp_dilate_fu_579_output_r_address0 );
    sensitive << ( grp_cleanBorders_fu_587_input_r_address0 );
    sensitive << ( grp_copy_fu_593_input_r_address0 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_foreground_clean_address1);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_foreground_clean_address1 );
    sensitive << ( grp_dilate_fu_579_output_r_address1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_foreground_clean_ce0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_erode_filter_fu_565_output_r_ce0 );
    sensitive << ( grp_blobsCount_fu_573_foreground_clean_ce0 );
    sensitive << ( grp_dilate_fu_579_output_r_ce0 );
    sensitive << ( grp_cleanBorders_fu_587_input_r_ce0 );
    sensitive << ( grp_copy_fu_593_input_r_ce0 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_foreground_clean_ce1);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_foreground_clean_ce1 );
    sensitive << ( grp_dilate_fu_579_output_r_ce1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_foreground_clean_d0);
    sensitive << ( grp_erode_filter_fu_565_output_r_d0 );
    sensitive << ( grp_dilate_fu_579_output_r_d0 );
    sensitive << ( grp_cleanBorders_fu_587_input_r_d0 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_foreground_clean_we0);
    sensitive << ( grp_erode_filter_fu_565_output_r_we0 );
    sensitive << ( grp_dilate_fu_579_output_r_we0 );
    sensitive << ( grp_cleanBorders_fu_587_input_r_we0 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_foreground_clean_we1);
    sensitive << ( grp_dilate_fu_579_output_r_we1 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_foreground_d0);
    sensitive << ( ap_enable_reg_pp2_iter4 );
    sensitive << ( grp_copy_fu_593_output_r_d0 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( tmp_24_i_fu_973_p3 );

    SC_METHOD(thread_foreground_we0);
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( exitcond_i2_reg_1428_pp2_iter3_reg );
    sensitive << ( ap_enable_reg_pp2_iter4 );
    sensitive << ( grp_copy_fu_593_output_r_we0 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_gepindex1_fu_718_p3);
    sensitive << ( addrCmp1_fu_708_p2 );
    sensitive << ( gepindex_fu_713_p2 );

    SC_METHOD(thread_gepindex2176_cast_fu_753_p1);
    sensitive << ( gepindex1_reg_1331_pp0_iter1_reg );

    SC_METHOD(thread_gepindex2_cast_fu_1084_p1);
    sensitive << ( gepindex2_reg_1517_pp3_iter1_reg );

    SC_METHOD(thread_gepindex2_fu_1050_p3);
    sensitive << ( cast_gep_index_reg_1507 );
    sensitive << ( addrCmp_fu_1045_p2 );

    SC_METHOD(thread_gepindex_fu_713_p2);
    sensitive << ( tmp_6_reg_1326 );

    SC_METHOD(thread_grp_blobsCount_fu_573_ap_start);
    sensitive << ( grp_blobsCount_fu_573_ap_start_reg );

    SC_METHOD(thread_grp_cleanBorders_fu_587_ap_start);
    sensitive << ( grp_cleanBorders_fu_587_ap_start_reg );

    SC_METHOD(thread_grp_copy_fu_593_ap_start);
    sensitive << ( grp_copy_fu_593_ap_start_reg );

    SC_METHOD(thread_grp_dilate_fu_579_ap_start);
    sensitive << ( grp_dilate_fu_579_ap_start_reg );

    SC_METHOD(thread_grp_erode_filter_fu_565_ap_start);
    sensitive << ( grp_erode_filter_fu_565_ap_start_reg );

    SC_METHOD(thread_grp_fu_1246_p0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( grp_fu_1246_p00 );

    SC_METHOD(thread_grp_fu_1246_p00);
    sensitive << ( input_r_q0 );

    SC_METHOD(thread_grp_fu_1246_p1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_grp_fu_1253_p0);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( grp_fu_1253_p00 );

    SC_METHOD(thread_grp_fu_1253_p00);
    sensitive << ( tmp_12_i1_cast_fu_888_p1 );

    SC_METHOD(thread_grp_fu_1253_p1);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_grp_fu_1259_p0);
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( exitcond_i_reg_1545 );
    sensitive << ( ap_CS_fsm_pp4_stage3 );
    sensitive << ( ap_block_pp4_stage3 );
    sensitive << ( grp_fu_1259_p00 );

    SC_METHOD(thread_grp_fu_1259_p00);
    sensitive << ( background_q0 );

    SC_METHOD(thread_grp_fu_1259_p1);
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( exitcond_i_reg_1545 );
    sensitive << ( ap_CS_fsm_pp4_stage3 );
    sensitive << ( ap_block_pp4_stage3 );

    SC_METHOD(thread_i_10_fu_1098_p2);
    sensitive << ( ap_phi_mux_i_i_phi_fu_557_p4 );

    SC_METHOD(thread_i_11_fu_767_p2);
    sensitive << ( ap_phi_mux_i_i1_phi_fu_490_p4 );

    SC_METHOD(thread_i_12_fu_922_p2);
    sensitive << ( i_i2_reg_498 );

    SC_METHOD(thread_i_5_fu_1025_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_546_p4 );

    SC_METHOD(thread_i_6_fu_680_p2);
    sensitive << ( ap_phi_mux_i_1_phi_fu_479_p4 );

    SC_METHOD(thread_i_7_fu_986_p2);
    sensitive << ( i_2_reg_509 );

    SC_METHOD(thread_i_8_fu_997_p2);
    sensitive << ( i_3_reg_520 );

    SC_METHOD(thread_i_9_fu_1008_p2);
    sensitive << ( i_4_reg_531 );

    SC_METHOD(thread_i_i1_cast6_fu_773_p1);
    sensitive << ( ap_phi_mux_i_i1_phi_fu_490_p4 );

    SC_METHOD(thread_i_i_cast_fu_1104_p1);
    sensitive << ( ap_phi_mux_i_i_phi_fu_557_p4 );

    SC_METHOD(thread_input_grey_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( tmp_i2_fu_928_p1 );
    sensitive << ( ap_enable_reg_pp1_iter5 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_16_i1_fu_911_p1 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_input_grey_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter5 );

    SC_METHOD(thread_input_grey_d0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter5 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_14_i1_fu_895_p4 );

    SC_METHOD(thread_input_grey_we0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_i1_reg_1359_pp1_iter4_reg );
    sensitive << ( ap_enable_reg_pp1_iter5 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( new_index190_cast_fu_740_p1 );
    sensitive << ( new_index198_cast_fu_757_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( tmp_9_i1_fu_818_p1 );
    sensitive << ( tmp_1_i1_fu_840_p1 );

    SC_METHOD(thread_input_r_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( new_index194_cast_fu_744_p1 );
    sensitive << ( gepindex2176_cast_fu_753_p1 );
    sensitive << ( tmp_5_i1_fu_810_p1 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_input_r_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_input_r_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( reg_635 );
    sensitive << ( reg_647_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_input_r_d1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( reg_641 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_7_reg_1339_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_input_r_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_reg_1312_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_input_r_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_reg_1312_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_md_threshold_0_ack_out);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_mem_index_gep1_fu_698_p2);
    sensitive << ( cast_gep_index33_cas_fu_694_p1 );

    SC_METHOD(thread_mem_index_gep_fu_1039_p2);
    sensitive << ( cast_gep_index_fu_1031_p3 );

    SC_METHOD(thread_mul_fu_1267_p0);
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( mul_fu_1267_p00 );

    SC_METHOD(thread_mul_fu_1267_p00);
    sensitive << ( tmp_12_i_cast_fu_1218_p1 );

    SC_METHOD(thread_mul_fu_1267_p1);
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp4_stage0 );

    SC_METHOD(thread_neg_i_fu_947_p2);
    sensitive << ( tmp_22_i_reg_1457 );

    SC_METHOD(thread_new_index156_cast_fu_1071_p1);
    sensitive << ( new_index_reg_1530 );

    SC_METHOD(thread_new_index160_cast_fu_1075_p1);
    sensitive << ( new_index1_reg_1535 );

    SC_METHOD(thread_new_index164_cast_fu_1088_p1);
    sensitive << ( new_index2_reg_1540 );

    SC_METHOD(thread_new_index190_cast_fu_740_p1);
    sensitive << ( new_index3_reg_1344 );

    SC_METHOD(thread_new_index194_cast_fu_744_p1);
    sensitive << ( new_index4_reg_1349 );

    SC_METHOD(thread_new_index198_cast_fu_757_p1);
    sensitive << ( new_index5_reg_1354 );

    SC_METHOD(thread_new_index1_fu_1066_p2);
    sensitive << ( gepindex2_reg_1517 );

    SC_METHOD(thread_new_index2_fu_1079_p2);
    sensitive << ( gepindex2_reg_1517 );

    SC_METHOD(thread_new_index3_fu_730_p2);
    sensitive << ( gepindex1_reg_1331 );

    SC_METHOD(thread_new_index4_fu_735_p2);
    sensitive << ( gepindex1_reg_1331 );

    SC_METHOD(thread_new_index5_fu_748_p2);
    sensitive << ( gepindex1_reg_1331 );

    SC_METHOD(thread_new_index_fu_1061_p2);
    sensitive << ( gepindex2_reg_1517 );

    SC_METHOD(thread_p_shl1_i1_cast_fu_785_p1);
    sensitive << ( p_shl1_i1_fu_777_p3 );

    SC_METHOD(thread_p_shl1_i1_fu_777_p3);
    sensitive << ( ap_phi_mux_i_i1_phi_fu_490_p4 );

    SC_METHOD(thread_p_shl1_i_cast_fu_1191_p1);
    sensitive << ( p_shl1_i_fu_1183_p3 );

    SC_METHOD(thread_p_shl1_i_fu_1183_p3);
    sensitive << ( reg_658 );

    SC_METHOD(thread_p_shl2_i_cast_fu_1116_p1);
    sensitive << ( p_shl2_i_fu_1108_p3 );

    SC_METHOD(thread_p_shl2_i_fu_1108_p3);
    sensitive << ( ap_phi_mux_i_i_phi_fu_557_p4 );

    SC_METHOD(thread_p_shl9_i_cast_fu_865_p1);
    sensitive << ( p_shl9_i_fu_857_p3 );

    SC_METHOD(thread_p_shl9_i_fu_857_p3);
    sensitive << ( reg_653 );

    SC_METHOD(thread_p_shl_i1_cast_fu_853_p1);
    sensitive << ( p_shl_i1_fu_845_p3 );

    SC_METHOD(thread_p_shl_i1_fu_845_p3);
    sensitive << ( reg_653 );

    SC_METHOD(thread_p_shl_i_cast_fu_1179_p1);
    sensitive << ( p_shl_i_fu_1171_p3 );

    SC_METHOD(thread_p_shl_i_fu_1171_p3);
    sensitive << ( reg_658 );

    SC_METHOD(thread_second_erosion_iteration_0_ack_out);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state55 );

    SC_METHOD(thread_streamIn_TDATA_blk_n);
    sensitive << ( streamIn_V_data_0_state );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_block_pp3_stage1 );
    sensitive << ( tmp_1_reg_1498 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_4_reg_1312 );

    SC_METHOD(thread_streamIn_TREADY);
    sensitive << ( streamIn_V_dest_V_0_state );

    SC_METHOD(thread_streamIn_V_data_0_ack_in);
    sensitive << ( streamIn_V_data_0_state );

    SC_METHOD(thread_streamIn_V_data_0_ack_out);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_1_reg_1498 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_reg_1312 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp3_stage1_11001 );

    SC_METHOD(thread_streamIn_V_data_0_data_out);
    sensitive << ( streamIn_V_data_0_payload_A );
    sensitive << ( streamIn_V_data_0_payload_B );
    sensitive << ( streamIn_V_data_0_sel );

    SC_METHOD(thread_streamIn_V_data_0_load_A);
    sensitive << ( streamIn_V_data_0_sel_wr );
    sensitive << ( streamIn_V_data_0_state_cmp_full );

    SC_METHOD(thread_streamIn_V_data_0_load_B);
    sensitive << ( streamIn_V_data_0_sel_wr );
    sensitive << ( streamIn_V_data_0_state_cmp_full );

    SC_METHOD(thread_streamIn_V_data_0_sel);
    sensitive << ( streamIn_V_data_0_sel_rd );

    SC_METHOD(thread_streamIn_V_data_0_state_cmp_full);
    sensitive << ( streamIn_V_data_0_state );

    SC_METHOD(thread_streamIn_V_data_0_vld_in);
    sensitive << ( streamIn_TVALID );

    SC_METHOD(thread_streamIn_V_data_0_vld_out);
    sensitive << ( streamIn_V_data_0_state );

    SC_METHOD(thread_streamIn_V_dest_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_1_reg_1498 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_reg_1312 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp3_stage1_11001 );

    SC_METHOD(thread_streamIn_V_dest_V_0_vld_in);
    sensitive << ( streamIn_TVALID );

    SC_METHOD(thread_streamOut_TDATA);
    sensitive << ( streamOut_V_data_1_data_out );

    SC_METHOD(thread_streamOut_TDATA_blk_n);
    sensitive << ( streamOut_V_data_1_state );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( tmp_reg_1304 );
    sensitive << ( tmp_s_reg_1308 );

    SC_METHOD(thread_streamOut_TDEST);
    sensitive << ( streamOut_V_dest_V_1_data_out );

    SC_METHOD(thread_streamOut_TID);
    sensitive << ( streamOut_V_id_V_1_data_out );

    SC_METHOD(thread_streamOut_TKEEP);
    sensitive << ( streamOut_V_keep_V_1_data_out );

    SC_METHOD(thread_streamOut_TLAST);
    sensitive << ( streamOut_V_last_V_1_data_out );

    SC_METHOD(thread_streamOut_TSTRB);
    sensitive << ( streamOut_V_strb_V_1_data_out );

    SC_METHOD(thread_streamOut_TUSER);
    sensitive << ( streamOut_V_user_V_1_data_out );

    SC_METHOD(thread_streamOut_TVALID);
    sensitive << ( streamOut_V_dest_V_1_state );

    SC_METHOD(thread_streamOut_V_data_1_ack_in);
    sensitive << ( streamOut_V_data_1_state );

    SC_METHOD(thread_streamOut_V_data_1_ack_out);
    sensitive << ( streamOut_TREADY );

    SC_METHOD(thread_streamOut_V_data_1_data_out);
    sensitive << ( streamOut_V_data_1_payload_A );
    sensitive << ( streamOut_V_data_1_payload_B );
    sensitive << ( streamOut_V_data_1_sel );

    SC_METHOD(thread_streamOut_V_data_1_load_A);
    sensitive << ( streamOut_V_data_1_sel_wr );
    sensitive << ( streamOut_V_data_1_state_cmp_full );

    SC_METHOD(thread_streamOut_V_data_1_load_B);
    sensitive << ( streamOut_V_data_1_sel_wr );
    sensitive << ( streamOut_V_data_1_state_cmp_full );

    SC_METHOD(thread_streamOut_V_data_1_sel);
    sensitive << ( streamOut_V_data_1_sel_rd );

    SC_METHOD(thread_streamOut_V_data_1_state_cmp_full);
    sensitive << ( streamOut_V_data_1_state );

    SC_METHOD(thread_streamOut_V_data_1_vld_in);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_ap_done );

    SC_METHOD(thread_streamOut_V_data_1_vld_out);
    sensitive << ( streamOut_V_data_1_state );

    SC_METHOD(thread_streamOut_V_dest_V_1_ack_in);
    sensitive << ( streamOut_V_dest_V_1_state );

    SC_METHOD(thread_streamOut_V_dest_V_1_ack_out);
    sensitive << ( streamOut_TREADY );

    SC_METHOD(thread_streamOut_V_dest_V_1_data_out);
    sensitive << ( streamOut_V_dest_V_1_sel );

    SC_METHOD(thread_streamOut_V_dest_V_1_sel);
    sensitive << ( streamOut_V_dest_V_1_sel_rd );

    SC_METHOD(thread_streamOut_V_dest_V_1_vld_in);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_ap_done );

    SC_METHOD(thread_streamOut_V_dest_V_1_vld_out);
    sensitive << ( streamOut_V_dest_V_1_state );

    SC_METHOD(thread_streamOut_V_id_V_1_ack_in);
    sensitive << ( streamOut_V_id_V_1_state );

    SC_METHOD(thread_streamOut_V_id_V_1_ack_out);
    sensitive << ( streamOut_TREADY );

    SC_METHOD(thread_streamOut_V_id_V_1_data_out);
    sensitive << ( streamOut_V_id_V_1_sel );

    SC_METHOD(thread_streamOut_V_id_V_1_sel);
    sensitive << ( streamOut_V_id_V_1_sel_rd );

    SC_METHOD(thread_streamOut_V_id_V_1_vld_in);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_ap_done );

    SC_METHOD(thread_streamOut_V_id_V_1_vld_out);
    sensitive << ( streamOut_V_id_V_1_state );

    SC_METHOD(thread_streamOut_V_keep_V_1_ack_in);
    sensitive << ( streamOut_V_keep_V_1_state );

    SC_METHOD(thread_streamOut_V_keep_V_1_ack_out);
    sensitive << ( streamOut_TREADY );

    SC_METHOD(thread_streamOut_V_keep_V_1_data_out);
    sensitive << ( streamOut_V_keep_V_1_sel );

    SC_METHOD(thread_streamOut_V_keep_V_1_sel);
    sensitive << ( streamOut_V_keep_V_1_sel_rd );

    SC_METHOD(thread_streamOut_V_keep_V_1_vld_in);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_ap_done );

    SC_METHOD(thread_streamOut_V_keep_V_1_vld_out);
    sensitive << ( streamOut_V_keep_V_1_state );

    SC_METHOD(thread_streamOut_V_last_V_1_ack_in);
    sensitive << ( streamOut_V_last_V_1_state );

    SC_METHOD(thread_streamOut_V_last_V_1_ack_out);
    sensitive << ( streamOut_TREADY );

    SC_METHOD(thread_streamOut_V_last_V_1_data_out);
    sensitive << ( streamOut_V_last_V_1_sel );

    SC_METHOD(thread_streamOut_V_last_V_1_sel);
    sensitive << ( streamOut_V_last_V_1_sel_rd );

    SC_METHOD(thread_streamOut_V_last_V_1_vld_in);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_ap_done );

    SC_METHOD(thread_streamOut_V_last_V_1_vld_out);
    sensitive << ( streamOut_V_last_V_1_state );

    SC_METHOD(thread_streamOut_V_strb_V_1_ack_in);
    sensitive << ( streamOut_V_strb_V_1_state );

    SC_METHOD(thread_streamOut_V_strb_V_1_ack_out);
    sensitive << ( streamOut_TREADY );

    SC_METHOD(thread_streamOut_V_strb_V_1_data_out);
    sensitive << ( streamOut_V_strb_V_1_sel );

    SC_METHOD(thread_streamOut_V_strb_V_1_sel);
    sensitive << ( streamOut_V_strb_V_1_sel_rd );

    SC_METHOD(thread_streamOut_V_strb_V_1_vld_in);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_ap_done );

    SC_METHOD(thread_streamOut_V_strb_V_1_vld_out);
    sensitive << ( streamOut_V_strb_V_1_state );

    SC_METHOD(thread_streamOut_V_user_V_1_ack_in);
    sensitive << ( streamOut_V_user_V_1_state );

    SC_METHOD(thread_streamOut_V_user_V_1_ack_out);
    sensitive << ( streamOut_TREADY );

    SC_METHOD(thread_streamOut_V_user_V_1_data_out);
    sensitive << ( streamOut_V_user_V_1_sel );

    SC_METHOD(thread_streamOut_V_user_V_1_sel);
    sensitive << ( streamOut_V_user_V_1_sel_rd );

    SC_METHOD(thread_streamOut_V_user_V_1_vld_in);
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_blobsCount_fu_573_ap_done );

    SC_METHOD(thread_streamOut_V_user_V_1_vld_out);
    sensitive << ( streamOut_V_user_V_1_state );

    SC_METHOD(thread_tmp1_cast_cast_fu_1209_p1);
    sensitive << ( grp_fu_1259_p3 );

    SC_METHOD(thread_tmp2_cast_cast_fu_879_p1);
    sensitive << ( tmp2_reg_1408 );

    SC_METHOD(thread_tmp_12_i1_cast_fu_888_p1);
    sensitive << ( tmp_12_i1_reg_1413 );

    SC_METHOD(thread_tmp_12_i1_fu_882_p2);
    sensitive << ( tmp2_cast_cast_fu_879_p1 );
    sensitive << ( tmp_3_i1_cast_cast_fu_875_p1 );

    SC_METHOD(thread_tmp_12_i_cast_fu_1218_p1);
    sensitive << ( tmp_12_i_reg_1590 );

    SC_METHOD(thread_tmp_12_i_fu_1212_p2);
    sensitive << ( tmp1_cast_cast_fu_1209_p1 );
    sensitive << ( tmp_3_i_cast_cast_fu_1201_p1 );

    SC_METHOD(thread_tmp_14_i1_fu_895_p4);
    sensitive << ( mul2_reg_1423 );

    SC_METHOD(thread_tmp_14_i_fu_1225_p4);
    sensitive << ( mul_fu_1267_p2 );

    SC_METHOD(thread_tmp_15_i_fu_1234_p2);
    sensitive << ( tmp_14_i_fu_1225_p4 );

    SC_METHOD(thread_tmp_16_i1_fu_911_p1);
    sensitive << ( i_i1_reg_486_pp1_iter4_reg );

    SC_METHOD(thread_tmp_16_i_fu_1241_p1);
    sensitive << ( i_i_reg_553 );

    SC_METHOD(thread_tmp_1_fu_1019_p2);
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_phi_mux_i_phi_fu_546_p4 );

    SC_METHOD(thread_tmp_1_i1_fu_840_p1);
    sensitive << ( tmp_i1_cast_fu_837_p1 );

    SC_METHOD(thread_tmp_1_i_fu_1135_p1);
    sensitive << ( tmp_i_cast_fu_1132_p1 );

    SC_METHOD(thread_tmp_21_i_cast_fu_937_p1);
    sensitive << ( reg_658 );

    SC_METHOD(thread_tmp_22_i_fu_941_p2);
    sensitive << ( tmp_i2_cast_fu_934_p1 );
    sensitive << ( tmp_21_i_cast_fu_937_p1 );

    SC_METHOD(thread_tmp_23_i_fu_968_p2);
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( md_threshold_read_reg_1299 );
    sensitive << ( exitcond_i2_reg_1428_pp2_iter2_reg );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( abs_i_cast_fu_964_p1 );

    SC_METHOD(thread_tmp_24_i_fu_973_p3);
    sensitive << ( tmp_23_i_reg_1464 );

    SC_METHOD(thread_tmp_3_fu_1057_p1);
    sensitive << ( streamIn_V_data_0_data_out );

    SC_METHOD(thread_tmp_3_i1_cast_cast_fu_875_p1);
    sensitive << ( tmp_3_i1_fu_869_p2 );

    SC_METHOD(thread_tmp_3_i1_fu_869_p2);
    sensitive << ( p_shl_i1_cast_fu_853_p1 );
    sensitive << ( p_shl9_i_cast_fu_865_p1 );

    SC_METHOD(thread_tmp_3_i_cast_cast_fu_1201_p1);
    sensitive << ( tmp_3_i_fu_1195_p2 );

    SC_METHOD(thread_tmp_3_i_fu_1195_p2);
    sensitive << ( p_shl_i_cast_fu_1179_p1 );
    sensitive << ( p_shl1_i_cast_fu_1191_p1 );

    SC_METHOD(thread_tmp_4_fu_674_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_1_phi_fu_479_p4 );

    SC_METHOD(thread_tmp_4_i1_cast_fu_807_p1);
    sensitive << ( tmp_4_i1_reg_1373 );

    SC_METHOD(thread_tmp_4_i1_fu_795_p2);
    sensitive << ( tmp_i1_fu_789_p2 );

    SC_METHOD(thread_tmp_4_i_cast_fu_1140_p1);
    sensitive << ( tmp_4_i_reg_1560 );

    SC_METHOD(thread_tmp_4_i_fu_1126_p2);
    sensitive << ( tmp_i_fu_1120_p2 );

    SC_METHOD(thread_tmp_5_i1_fu_810_p1);
    sensitive << ( tmp_4_i1_cast_fu_807_p1 );

    SC_METHOD(thread_tmp_5_i_fu_1143_p1);
    sensitive << ( tmp_4_i_cast_fu_1140_p1 );

    SC_METHOD(thread_tmp_6_fu_704_p1);
    sensitive << ( mem_index_gep1_fu_698_p2 );

    SC_METHOD(thread_tmp_7_fu_726_p1);
    sensitive << ( streamIn_V_data_0_data_out );

    SC_METHOD(thread_tmp_7_i1_fu_831_p0);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( tmp_7_i1_fu_831_p00 );

    SC_METHOD(thread_tmp_7_i1_fu_831_p00);
    sensitive << ( reg_653 );

    SC_METHOD(thread_tmp_7_i1_fu_831_p2);
    sensitive << ( tmp_7_i1_fu_831_p0 );

    SC_METHOD(thread_tmp_7_i_fu_1157_p0);
    sensitive << ( ap_CS_fsm_pp4_stage2 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_block_pp4_stage2 );
    sensitive << ( tmp_7_i_fu_1157_p00 );

    SC_METHOD(thread_tmp_7_i_fu_1157_p00);
    sensitive << ( background_q1 );

    SC_METHOD(thread_tmp_7_i_fu_1157_p2);
    sensitive << ( tmp_7_i_fu_1157_p0 );

    SC_METHOD(thread_tmp_8_i1_cast_fu_815_p1);
    sensitive << ( tmp_8_i1_reg_1378 );

    SC_METHOD(thread_tmp_8_i1_fu_801_p2);
    sensitive << ( tmp_i1_fu_789_p2 );

    SC_METHOD(thread_tmp_8_i_cast_fu_1163_p1);
    sensitive << ( tmp_8_i_reg_1575 );

    SC_METHOD(thread_tmp_8_i_fu_1148_p2);
    sensitive << ( tmp_i_reg_1554 );

    SC_METHOD(thread_tmp_9_i1_fu_818_p1);
    sensitive << ( tmp_8_i1_cast_fu_815_p1 );

    SC_METHOD(thread_tmp_9_i_fu_1166_p1);
    sensitive << ( tmp_8_i_cast_fu_1163_p1 );

    SC_METHOD(thread_tmp_data_fu_1014_p1);
    sensitive << ( grp_blobsCount_fu_573_ap_return );

    SC_METHOD(thread_tmp_fu_662_p2);
    sensitive << ( action_0_data_reg );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_i1_cast_fu_837_p1);
    sensitive << ( tmp_i1_reg_1368_pp1_iter1_reg );

    SC_METHOD(thread_tmp_i1_fu_789_p2);
    sensitive << ( p_shl1_i1_cast_fu_785_p1 );
    sensitive << ( i_i1_cast6_fu_773_p1 );

    SC_METHOD(thread_tmp_i2_cast_fu_934_p1);
    sensitive << ( input_grey_load_reg_1452 );

    SC_METHOD(thread_tmp_i2_fu_928_p1);
    sensitive << ( i_i2_reg_498 );

    SC_METHOD(thread_tmp_i_cast_fu_1132_p1);
    sensitive << ( tmp_i_reg_1554 );

    SC_METHOD(thread_tmp_i_fu_1120_p2);
    sensitive << ( p_shl2_i_cast_fu_1116_p1 );
    sensitive << ( i_i_cast_fu_1104_p1 );

    SC_METHOD(thread_tmp_s_fu_668_p2);
    sensitive << ( action_0_data_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_662_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( streamOut_V_data_1_ack_in );
    sensitive << ( streamOut_V_data_1_state );
    sensitive << ( streamOut_V_keep_V_1_ack_in );
    sensitive << ( streamOut_V_keep_V_1_state );
    sensitive << ( streamOut_V_strb_V_1_ack_in );
    sensitive << ( streamOut_V_strb_V_1_state );
    sensitive << ( streamOut_V_user_V_1_ack_in );
    sensitive << ( streamOut_V_user_V_1_state );
    sensitive << ( streamOut_V_last_V_1_ack_in );
    sensitive << ( streamOut_V_last_V_1_state );
    sensitive << ( streamOut_V_id_V_1_ack_in );
    sensitive << ( streamOut_V_id_V_1_state );
    sensitive << ( streamOut_V_dest_V_1_ack_in );
    sensitive << ( streamOut_V_dest_V_1_state );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_662_p2 );
    sensitive << ( tmp_s_fu_668_p2 );
    sensitive << ( tmp_4_fu_674_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_i1_fu_761_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond_i2_fu_916_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( grp_blobsCount_fu_573_ap_done );
    sensitive << ( tmp_1_fu_1019_p2 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( exitcond_i_fu_1092_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter5 );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( ap_enable_reg_pp2_iter3 );
    sensitive << ( ap_enable_reg_pp2_iter4 );
    sensitive << ( ap_block_pp3_stage0_subdone );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage1_subdone );
    sensitive << ( ap_enable_reg_pp3_iter2 );
    sensitive << ( ap_block_pp4_stage0_subdone );
    sensitive << ( ap_block_pp4_stage3_subdone );
    sensitive << ( grp_erode_filter_fu_565_ap_done );
    sensitive << ( grp_dilate_fu_579_ap_done );
    sensitive << ( grp_cleanBorders_fu_587_ap_done );
    sensitive << ( grp_copy_fu_593_ap_done );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( exitcond2_fu_981_p2 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( exitcond1_fu_992_p2 );
    sensitive << ( exitcond_fu_1003_p2 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_block_state42_io );
    sensitive << ( ap_block_pp4_stage1_subdone );
    sensitive << ( ap_block_pp4_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000001";
    streamIn_V_data_0_sel_rd = SC_LOGIC_0;
    streamIn_V_data_0_sel_wr = SC_LOGIC_0;
    streamIn_V_data_0_state = "00";
    streamIn_V_dest_V_0_state = "00";
    streamOut_V_data_1_sel_rd = SC_LOGIC_0;
    streamOut_V_data_1_sel_wr = SC_LOGIC_0;
    streamOut_V_data_1_state = "00";
    streamOut_V_keep_V_1_sel_rd = SC_LOGIC_0;
    streamOut_V_keep_V_1_state = "00";
    streamOut_V_strb_V_1_sel_rd = SC_LOGIC_0;
    streamOut_V_strb_V_1_state = "00";
    streamOut_V_user_V_1_sel_rd = SC_LOGIC_0;
    streamOut_V_user_V_1_state = "00";
    streamOut_V_last_V_1_sel_rd = SC_LOGIC_0;
    streamOut_V_last_V_1_state = "00";
    streamOut_V_id_V_1_sel_rd = SC_LOGIC_0;
    streamOut_V_id_V_1_state = "00";
    streamOut_V_dest_V_1_sel_rd = SC_LOGIC_0;
    streamOut_V_dest_V_1_state = "00";
    action_0_data_reg = "00000000000000000000000000000000";
    action_0_vld_reg = SC_LOGIC_0;
    md_threshold_0_data_reg = "00000000000000000000000000000000";
    md_threshold_0_vld_reg = SC_LOGIC_0;
    erosion_iteration_0_data_reg = "00000000000000000000000000000000";
    erosion_iteration_0_vld_reg = SC_LOGIC_0;
    dilate_iteration_0_data_reg = "00000000000000000000000000000000";
    dilate_iteration_0_vld_reg = SC_LOGIC_0;
    second_erosion_iteration_0_data_reg = "00000000000000000000000000000000";
    second_erosion_iteration_0_vld_reg = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter1 = SC_LOGIC_0;
    grp_erode_filter_fu_565_ap_start_reg = SC_LOGIC_0;
    grp_blobsCount_fu_573_ap_start_reg = SC_LOGIC_0;
    grp_dilate_fu_579_ap_start_reg = SC_LOGIC_0;
    grp_cleanBorders_fu_587_ap_start_reg = SC_LOGIC_0;
    grp_copy_fu_593_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fromFrameToBlobCount_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, streamIn_TDATA, "(port)streamIn_TDATA");
    sc_trace(mVcdFile, streamIn_TVALID, "(port)streamIn_TVALID");
    sc_trace(mVcdFile, streamIn_TREADY, "(port)streamIn_TREADY");
    sc_trace(mVcdFile, streamIn_TKEEP, "(port)streamIn_TKEEP");
    sc_trace(mVcdFile, streamIn_TSTRB, "(port)streamIn_TSTRB");
    sc_trace(mVcdFile, streamIn_TUSER, "(port)streamIn_TUSER");
    sc_trace(mVcdFile, streamIn_TLAST, "(port)streamIn_TLAST");
    sc_trace(mVcdFile, streamIn_TID, "(port)streamIn_TID");
    sc_trace(mVcdFile, streamIn_TDEST, "(port)streamIn_TDEST");
    sc_trace(mVcdFile, streamOut_TDATA, "(port)streamOut_TDATA");
    sc_trace(mVcdFile, streamOut_TVALID, "(port)streamOut_TVALID");
    sc_trace(mVcdFile, streamOut_TREADY, "(port)streamOut_TREADY");
    sc_trace(mVcdFile, streamOut_TKEEP, "(port)streamOut_TKEEP");
    sc_trace(mVcdFile, streamOut_TSTRB, "(port)streamOut_TSTRB");
    sc_trace(mVcdFile, streamOut_TUSER, "(port)streamOut_TUSER");
    sc_trace(mVcdFile, streamOut_TLAST, "(port)streamOut_TLAST");
    sc_trace(mVcdFile, streamOut_TID, "(port)streamOut_TID");
    sc_trace(mVcdFile, streamOut_TDEST, "(port)streamOut_TDEST");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, streamIn_V_data_0_data_out, "streamIn_V_data_0_data_out");
    sc_trace(mVcdFile, streamIn_V_data_0_vld_in, "streamIn_V_data_0_vld_in");
    sc_trace(mVcdFile, streamIn_V_data_0_vld_out, "streamIn_V_data_0_vld_out");
    sc_trace(mVcdFile, streamIn_V_data_0_ack_in, "streamIn_V_data_0_ack_in");
    sc_trace(mVcdFile, streamIn_V_data_0_ack_out, "streamIn_V_data_0_ack_out");
    sc_trace(mVcdFile, streamIn_V_data_0_payload_A, "streamIn_V_data_0_payload_A");
    sc_trace(mVcdFile, streamIn_V_data_0_payload_B, "streamIn_V_data_0_payload_B");
    sc_trace(mVcdFile, streamIn_V_data_0_sel_rd, "streamIn_V_data_0_sel_rd");
    sc_trace(mVcdFile, streamIn_V_data_0_sel_wr, "streamIn_V_data_0_sel_wr");
    sc_trace(mVcdFile, streamIn_V_data_0_sel, "streamIn_V_data_0_sel");
    sc_trace(mVcdFile, streamIn_V_data_0_load_A, "streamIn_V_data_0_load_A");
    sc_trace(mVcdFile, streamIn_V_data_0_load_B, "streamIn_V_data_0_load_B");
    sc_trace(mVcdFile, streamIn_V_data_0_state, "streamIn_V_data_0_state");
    sc_trace(mVcdFile, streamIn_V_data_0_state_cmp_full, "streamIn_V_data_0_state_cmp_full");
    sc_trace(mVcdFile, streamIn_V_dest_V_0_vld_in, "streamIn_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, streamIn_V_dest_V_0_ack_out, "streamIn_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, streamIn_V_dest_V_0_state, "streamIn_V_dest_V_0_state");
    sc_trace(mVcdFile, streamOut_V_data_1_data_out, "streamOut_V_data_1_data_out");
    sc_trace(mVcdFile, streamOut_V_data_1_vld_in, "streamOut_V_data_1_vld_in");
    sc_trace(mVcdFile, streamOut_V_data_1_vld_out, "streamOut_V_data_1_vld_out");
    sc_trace(mVcdFile, streamOut_V_data_1_ack_in, "streamOut_V_data_1_ack_in");
    sc_trace(mVcdFile, streamOut_V_data_1_ack_out, "streamOut_V_data_1_ack_out");
    sc_trace(mVcdFile, streamOut_V_data_1_payload_A, "streamOut_V_data_1_payload_A");
    sc_trace(mVcdFile, streamOut_V_data_1_payload_B, "streamOut_V_data_1_payload_B");
    sc_trace(mVcdFile, streamOut_V_data_1_sel_rd, "streamOut_V_data_1_sel_rd");
    sc_trace(mVcdFile, streamOut_V_data_1_sel_wr, "streamOut_V_data_1_sel_wr");
    sc_trace(mVcdFile, streamOut_V_data_1_sel, "streamOut_V_data_1_sel");
    sc_trace(mVcdFile, streamOut_V_data_1_load_A, "streamOut_V_data_1_load_A");
    sc_trace(mVcdFile, streamOut_V_data_1_load_B, "streamOut_V_data_1_load_B");
    sc_trace(mVcdFile, streamOut_V_data_1_state, "streamOut_V_data_1_state");
    sc_trace(mVcdFile, streamOut_V_data_1_state_cmp_full, "streamOut_V_data_1_state_cmp_full");
    sc_trace(mVcdFile, streamOut_V_keep_V_1_data_out, "streamOut_V_keep_V_1_data_out");
    sc_trace(mVcdFile, streamOut_V_keep_V_1_vld_in, "streamOut_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, streamOut_V_keep_V_1_vld_out, "streamOut_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, streamOut_V_keep_V_1_ack_in, "streamOut_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, streamOut_V_keep_V_1_ack_out, "streamOut_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, streamOut_V_keep_V_1_sel_rd, "streamOut_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, streamOut_V_keep_V_1_sel, "streamOut_V_keep_V_1_sel");
    sc_trace(mVcdFile, streamOut_V_keep_V_1_state, "streamOut_V_keep_V_1_state");
    sc_trace(mVcdFile, streamOut_V_strb_V_1_data_out, "streamOut_V_strb_V_1_data_out");
    sc_trace(mVcdFile, streamOut_V_strb_V_1_vld_in, "streamOut_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, streamOut_V_strb_V_1_vld_out, "streamOut_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, streamOut_V_strb_V_1_ack_in, "streamOut_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, streamOut_V_strb_V_1_ack_out, "streamOut_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, streamOut_V_strb_V_1_sel_rd, "streamOut_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, streamOut_V_strb_V_1_sel, "streamOut_V_strb_V_1_sel");
    sc_trace(mVcdFile, streamOut_V_strb_V_1_state, "streamOut_V_strb_V_1_state");
    sc_trace(mVcdFile, streamOut_V_user_V_1_data_out, "streamOut_V_user_V_1_data_out");
    sc_trace(mVcdFile, streamOut_V_user_V_1_vld_in, "streamOut_V_user_V_1_vld_in");
    sc_trace(mVcdFile, streamOut_V_user_V_1_vld_out, "streamOut_V_user_V_1_vld_out");
    sc_trace(mVcdFile, streamOut_V_user_V_1_ack_in, "streamOut_V_user_V_1_ack_in");
    sc_trace(mVcdFile, streamOut_V_user_V_1_ack_out, "streamOut_V_user_V_1_ack_out");
    sc_trace(mVcdFile, streamOut_V_user_V_1_sel_rd, "streamOut_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, streamOut_V_user_V_1_sel, "streamOut_V_user_V_1_sel");
    sc_trace(mVcdFile, streamOut_V_user_V_1_state, "streamOut_V_user_V_1_state");
    sc_trace(mVcdFile, streamOut_V_last_V_1_data_out, "streamOut_V_last_V_1_data_out");
    sc_trace(mVcdFile, streamOut_V_last_V_1_vld_in, "streamOut_V_last_V_1_vld_in");
    sc_trace(mVcdFile, streamOut_V_last_V_1_vld_out, "streamOut_V_last_V_1_vld_out");
    sc_trace(mVcdFile, streamOut_V_last_V_1_ack_in, "streamOut_V_last_V_1_ack_in");
    sc_trace(mVcdFile, streamOut_V_last_V_1_ack_out, "streamOut_V_last_V_1_ack_out");
    sc_trace(mVcdFile, streamOut_V_last_V_1_sel_rd, "streamOut_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, streamOut_V_last_V_1_sel, "streamOut_V_last_V_1_sel");
    sc_trace(mVcdFile, streamOut_V_last_V_1_state, "streamOut_V_last_V_1_state");
    sc_trace(mVcdFile, streamOut_V_id_V_1_data_out, "streamOut_V_id_V_1_data_out");
    sc_trace(mVcdFile, streamOut_V_id_V_1_vld_in, "streamOut_V_id_V_1_vld_in");
    sc_trace(mVcdFile, streamOut_V_id_V_1_vld_out, "streamOut_V_id_V_1_vld_out");
    sc_trace(mVcdFile, streamOut_V_id_V_1_ack_in, "streamOut_V_id_V_1_ack_in");
    sc_trace(mVcdFile, streamOut_V_id_V_1_ack_out, "streamOut_V_id_V_1_ack_out");
    sc_trace(mVcdFile, streamOut_V_id_V_1_sel_rd, "streamOut_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, streamOut_V_id_V_1_sel, "streamOut_V_id_V_1_sel");
    sc_trace(mVcdFile, streamOut_V_id_V_1_state, "streamOut_V_id_V_1_state");
    sc_trace(mVcdFile, streamOut_V_dest_V_1_data_out, "streamOut_V_dest_V_1_data_out");
    sc_trace(mVcdFile, streamOut_V_dest_V_1_vld_in, "streamOut_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, streamOut_V_dest_V_1_vld_out, "streamOut_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, streamOut_V_dest_V_1_ack_in, "streamOut_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, streamOut_V_dest_V_1_ack_out, "streamOut_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, streamOut_V_dest_V_1_sel_rd, "streamOut_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, streamOut_V_dest_V_1_sel, "streamOut_V_dest_V_1_sel");
    sc_trace(mVcdFile, streamOut_V_dest_V_1_state, "streamOut_V_dest_V_1_state");
    sc_trace(mVcdFile, action, "action");
    sc_trace(mVcdFile, action_0_data_reg, "action_0_data_reg");
    sc_trace(mVcdFile, action_0_vld_reg, "action_0_vld_reg");
    sc_trace(mVcdFile, action_0_ack_out, "action_0_ack_out");
    sc_trace(mVcdFile, md_threshold, "md_threshold");
    sc_trace(mVcdFile, md_threshold_0_data_reg, "md_threshold_0_data_reg");
    sc_trace(mVcdFile, md_threshold_0_vld_reg, "md_threshold_0_vld_reg");
    sc_trace(mVcdFile, md_threshold_0_ack_out, "md_threshold_0_ack_out");
    sc_trace(mVcdFile, erosion_iteration, "erosion_iteration");
    sc_trace(mVcdFile, erosion_iteration_0_data_reg, "erosion_iteration_0_data_reg");
    sc_trace(mVcdFile, erosion_iteration_0_vld_reg, "erosion_iteration_0_vld_reg");
    sc_trace(mVcdFile, erosion_iteration_0_ack_out, "erosion_iteration_0_ack_out");
    sc_trace(mVcdFile, dilate_iteration, "dilate_iteration");
    sc_trace(mVcdFile, dilate_iteration_0_data_reg, "dilate_iteration_0_data_reg");
    sc_trace(mVcdFile, dilate_iteration_0_vld_reg, "dilate_iteration_0_vld_reg");
    sc_trace(mVcdFile, dilate_iteration_0_ack_out, "dilate_iteration_0_ack_out");
    sc_trace(mVcdFile, second_erosion_iteration, "second_erosion_iteration");
    sc_trace(mVcdFile, second_erosion_iteration_0_data_reg, "second_erosion_iteration_0_data_reg");
    sc_trace(mVcdFile, second_erosion_iteration_0_vld_reg, "second_erosion_iteration_0_vld_reg");
    sc_trace(mVcdFile, second_erosion_iteration_0_ack_out, "second_erosion_iteration_0_ack_out");
    sc_trace(mVcdFile, background_address0, "background_address0");
    sc_trace(mVcdFile, background_ce0, "background_ce0");
    sc_trace(mVcdFile, background_we0, "background_we0");
    sc_trace(mVcdFile, background_d0, "background_d0");
    sc_trace(mVcdFile, background_q0, "background_q0");
    sc_trace(mVcdFile, background_address1, "background_address1");
    sc_trace(mVcdFile, background_ce1, "background_ce1");
    sc_trace(mVcdFile, background_we1, "background_we1");
    sc_trace(mVcdFile, background_d1, "background_d1");
    sc_trace(mVcdFile, background_q1, "background_q1");
    sc_trace(mVcdFile, input_r_address0, "input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "input_r_ce0");
    sc_trace(mVcdFile, input_r_we0, "input_r_we0");
    sc_trace(mVcdFile, input_r_d0, "input_r_d0");
    sc_trace(mVcdFile, input_r_q0, "input_r_q0");
    sc_trace(mVcdFile, input_r_address1, "input_r_address1");
    sc_trace(mVcdFile, input_r_ce1, "input_r_ce1");
    sc_trace(mVcdFile, input_r_we1, "input_r_we1");
    sc_trace(mVcdFile, input_r_d1, "input_r_d1");
    sc_trace(mVcdFile, input_r_q1, "input_r_q1");
    sc_trace(mVcdFile, input_grey_address0, "input_grey_address0");
    sc_trace(mVcdFile, input_grey_ce0, "input_grey_ce0");
    sc_trace(mVcdFile, input_grey_we0, "input_grey_we0");
    sc_trace(mVcdFile, input_grey_d0, "input_grey_d0");
    sc_trace(mVcdFile, input_grey_q0, "input_grey_q0");
    sc_trace(mVcdFile, foreground_address0, "foreground_address0");
    sc_trace(mVcdFile, foreground_ce0, "foreground_ce0");
    sc_trace(mVcdFile, foreground_we0, "foreground_we0");
    sc_trace(mVcdFile, foreground_d0, "foreground_d0");
    sc_trace(mVcdFile, foreground_q0, "foreground_q0");
    sc_trace(mVcdFile, foreground_clean_address0, "foreground_clean_address0");
    sc_trace(mVcdFile, foreground_clean_ce0, "foreground_clean_ce0");
    sc_trace(mVcdFile, foreground_clean_we0, "foreground_clean_we0");
    sc_trace(mVcdFile, foreground_clean_d0, "foreground_clean_d0");
    sc_trace(mVcdFile, foreground_clean_q0, "foreground_clean_q0");
    sc_trace(mVcdFile, foreground_clean_address1, "foreground_clean_address1");
    sc_trace(mVcdFile, foreground_clean_ce1, "foreground_clean_ce1");
    sc_trace(mVcdFile, foreground_clean_we1, "foreground_clean_we1");
    sc_trace(mVcdFile, foreground_clean_q1, "foreground_clean_q1");
    sc_trace(mVcdFile, streamIn_TDATA_blk_n, "streamIn_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage1, "ap_CS_fsm_pp3_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, ap_block_pp3_stage1, "ap_block_pp3_stage1");
    sc_trace(mVcdFile, tmp_1_reg_1498, "tmp_1_reg_1498");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_4_reg_1312, "tmp_4_reg_1312");
    sc_trace(mVcdFile, streamOut_TDATA_blk_n, "streamOut_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, tmp_reg_1304, "tmp_reg_1304");
    sc_trace(mVcdFile, tmp_s_reg_1308, "tmp_s_reg_1308");
    sc_trace(mVcdFile, i_1_reg_475, "i_1_reg_475");
    sc_trace(mVcdFile, i_i1_reg_486, "i_i1_reg_486");
    sc_trace(mVcdFile, i_i1_reg_486_pp1_iter1_reg, "i_i1_reg_486_pp1_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter0, "ap_block_state9_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage0_iter1, "ap_block_state11_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage0_iter2, "ap_block_state13_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage0_iter3, "ap_block_state15_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage0_iter4, "ap_block_state17_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage0_iter5, "ap_block_state19_pp1_stage0_iter5");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_i1_reg_486_pp1_iter2_reg, "i_i1_reg_486_pp1_iter2_reg");
    sc_trace(mVcdFile, i_i1_reg_486_pp1_iter3_reg, "i_i1_reg_486_pp1_iter3_reg");
    sc_trace(mVcdFile, i_i1_reg_486_pp1_iter4_reg, "i_i1_reg_486_pp1_iter4_reg");
    sc_trace(mVcdFile, i_i2_reg_498, "i_i2_reg_498");
    sc_trace(mVcdFile, i_reg_542, "i_reg_542");
    sc_trace(mVcdFile, i_i_reg_553, "i_i_reg_553");
    sc_trace(mVcdFile, reg_635, "reg_635");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, ap_block_state44_pp3_stage1_iter0, "ap_block_state44_pp3_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state46_pp3_stage1_iter1, "ap_block_state46_pp3_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage1_11001, "ap_block_pp3_stage1_11001");
    sc_trace(mVcdFile, reg_641, "reg_641");
    sc_trace(mVcdFile, reg_647, "reg_647");
    sc_trace(mVcdFile, reg_647_pp0_iter1_reg, "reg_647_pp0_iter1_reg");
    sc_trace(mVcdFile, reg_647_pp3_iter1_reg, "reg_647_pp3_iter1_reg");
    sc_trace(mVcdFile, reg_653, "reg_653");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, exitcond_i1_reg_1359, "exitcond_i1_reg_1359");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage1_iter0, "ap_block_state10_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage1_iter1, "ap_block_state12_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage1_iter2, "ap_block_state14_pp1_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state16_pp1_stage1_iter3, "ap_block_state16_pp1_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage1_iter4, "ap_block_state18_pp1_stage1_iter4");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, exitcond_i1_reg_1359_pp1_iter2_reg, "exitcond_i1_reg_1359_pp1_iter2_reg");
    sc_trace(mVcdFile, reg_658, "reg_658");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_state21_pp2_stage0_iter0, "ap_block_state21_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state22_pp2_stage0_iter1, "ap_block_state22_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state23_pp2_stage0_iter2, "ap_block_state23_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state24_pp2_stage0_iter3, "ap_block_state24_pp2_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state25_pp2_stage0_iter4, "ap_block_state25_pp2_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, exitcond_i2_reg_1428, "exitcond_i2_reg_1428");
    sc_trace(mVcdFile, ap_CS_fsm_pp4_stage2, "ap_CS_fsm_pp4_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter0, "ap_enable_reg_pp4_iter0");
    sc_trace(mVcdFile, ap_block_state51_pp4_stage2_iter0, "ap_block_state51_pp4_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp4_stage2_11001, "ap_block_pp4_stage2_11001");
    sc_trace(mVcdFile, exitcond_i_reg_1545, "exitcond_i_reg_1545");
    sc_trace(mVcdFile, second_erosion_itera_reg_1284, "second_erosion_itera_reg_1284");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, dilate_iteration_rea_reg_1289, "dilate_iteration_rea_reg_1289");
    sc_trace(mVcdFile, erosion_iteration_re_reg_1294, "erosion_iteration_re_reg_1294");
    sc_trace(mVcdFile, md_threshold_read_reg_1299, "md_threshold_read_reg_1299");
    sc_trace(mVcdFile, tmp_fu_662_p2, "tmp_fu_662_p2");
    sc_trace(mVcdFile, tmp_s_fu_668_p2, "tmp_s_fu_668_p2");
    sc_trace(mVcdFile, tmp_4_fu_674_p2, "tmp_4_fu_674_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter2, "ap_block_state7_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_4_reg_1312_pp0_iter1_reg, "tmp_4_reg_1312_pp0_iter1_reg");
    sc_trace(mVcdFile, i_6_fu_680_p2, "i_6_fu_680_p2");
    sc_trace(mVcdFile, i_6_reg_1316, "i_6_reg_1316");
    sc_trace(mVcdFile, mem_index_gep1_fu_698_p2, "mem_index_gep1_fu_698_p2");
    sc_trace(mVcdFile, mem_index_gep1_reg_1321, "mem_index_gep1_reg_1321");
    sc_trace(mVcdFile, tmp_6_fu_704_p1, "tmp_6_fu_704_p1");
    sc_trace(mVcdFile, tmp_6_reg_1326, "tmp_6_reg_1326");
    sc_trace(mVcdFile, gepindex1_fu_718_p3, "gepindex1_fu_718_p3");
    sc_trace(mVcdFile, gepindex1_reg_1331, "gepindex1_reg_1331");
    sc_trace(mVcdFile, gepindex1_reg_1331_pp0_iter1_reg, "gepindex1_reg_1331_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_7_fu_726_p1, "tmp_7_fu_726_p1");
    sc_trace(mVcdFile, tmp_7_reg_1339, "tmp_7_reg_1339");
    sc_trace(mVcdFile, tmp_7_reg_1339_pp0_iter1_reg, "tmp_7_reg_1339_pp0_iter1_reg");
    sc_trace(mVcdFile, new_index3_fu_730_p2, "new_index3_fu_730_p2");
    sc_trace(mVcdFile, new_index3_reg_1344, "new_index3_reg_1344");
    sc_trace(mVcdFile, new_index4_fu_735_p2, "new_index4_fu_735_p2");
    sc_trace(mVcdFile, new_index4_reg_1349, "new_index4_reg_1349");
    sc_trace(mVcdFile, new_index5_fu_748_p2, "new_index5_fu_748_p2");
    sc_trace(mVcdFile, new_index5_reg_1354, "new_index5_reg_1354");
    sc_trace(mVcdFile, exitcond_i1_fu_761_p2, "exitcond_i1_fu_761_p2");
    sc_trace(mVcdFile, exitcond_i1_reg_1359_pp1_iter1_reg, "exitcond_i1_reg_1359_pp1_iter1_reg");
    sc_trace(mVcdFile, exitcond_i1_reg_1359_pp1_iter3_reg, "exitcond_i1_reg_1359_pp1_iter3_reg");
    sc_trace(mVcdFile, exitcond_i1_reg_1359_pp1_iter4_reg, "exitcond_i1_reg_1359_pp1_iter4_reg");
    sc_trace(mVcdFile, i_11_fu_767_p2, "i_11_fu_767_p2");
    sc_trace(mVcdFile, i_11_reg_1363, "i_11_reg_1363");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_i1_fu_789_p2, "tmp_i1_fu_789_p2");
    sc_trace(mVcdFile, tmp_i1_reg_1368, "tmp_i1_reg_1368");
    sc_trace(mVcdFile, tmp_i1_reg_1368_pp1_iter1_reg, "tmp_i1_reg_1368_pp1_iter1_reg");
    sc_trace(mVcdFile, tmp_4_i1_fu_795_p2, "tmp_4_i1_fu_795_p2");
    sc_trace(mVcdFile, tmp_4_i1_reg_1373, "tmp_4_i1_reg_1373");
    sc_trace(mVcdFile, tmp_8_i1_fu_801_p2, "tmp_8_i1_fu_801_p2");
    sc_trace(mVcdFile, tmp_8_i1_reg_1378, "tmp_8_i1_reg_1378");
    sc_trace(mVcdFile, tmp_7_i1_fu_831_p2, "tmp_7_i1_fu_831_p2");
    sc_trace(mVcdFile, tmp_7_i1_reg_1398, "tmp_7_i1_reg_1398");
    sc_trace(mVcdFile, grp_fu_1246_p3, "grp_fu_1246_p3");
    sc_trace(mVcdFile, tmp2_reg_1408, "tmp2_reg_1408");
    sc_trace(mVcdFile, tmp_12_i1_fu_882_p2, "tmp_12_i1_fu_882_p2");
    sc_trace(mVcdFile, tmp_12_i1_reg_1413, "tmp_12_i1_reg_1413");
    sc_trace(mVcdFile, grp_fu_1253_p2, "grp_fu_1253_p2");
    sc_trace(mVcdFile, mul2_reg_1423, "mul2_reg_1423");
    sc_trace(mVcdFile, exitcond_i2_fu_916_p2, "exitcond_i2_fu_916_p2");
    sc_trace(mVcdFile, exitcond_i2_reg_1428_pp2_iter1_reg, "exitcond_i2_reg_1428_pp2_iter1_reg");
    sc_trace(mVcdFile, exitcond_i2_reg_1428_pp2_iter2_reg, "exitcond_i2_reg_1428_pp2_iter2_reg");
    sc_trace(mVcdFile, exitcond_i2_reg_1428_pp2_iter3_reg, "exitcond_i2_reg_1428_pp2_iter3_reg");
    sc_trace(mVcdFile, i_12_fu_922_p2, "i_12_fu_922_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_i2_fu_928_p1, "tmp_i2_fu_928_p1");
    sc_trace(mVcdFile, tmp_i2_reg_1437, "tmp_i2_reg_1437");
    sc_trace(mVcdFile, tmp_i2_reg_1437_pp2_iter1_reg, "tmp_i2_reg_1437_pp2_iter1_reg");
    sc_trace(mVcdFile, tmp_i2_reg_1437_pp2_iter2_reg, "tmp_i2_reg_1437_pp2_iter2_reg");
    sc_trace(mVcdFile, tmp_i2_reg_1437_pp2_iter3_reg, "tmp_i2_reg_1437_pp2_iter3_reg");
    sc_trace(mVcdFile, input_grey_load_reg_1452, "input_grey_load_reg_1452");
    sc_trace(mVcdFile, tmp_22_i_fu_941_p2, "tmp_22_i_fu_941_p2");
    sc_trace(mVcdFile, tmp_22_i_reg_1457, "tmp_22_i_reg_1457");
    sc_trace(mVcdFile, tmp_23_i_fu_968_p2, "tmp_23_i_fu_968_p2");
    sc_trace(mVcdFile, tmp_23_i_reg_1464, "tmp_23_i_reg_1464");
    sc_trace(mVcdFile, i_7_fu_986_p2, "i_7_fu_986_p2");
    sc_trace(mVcdFile, i_7_reg_1472, "i_7_reg_1472");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, i_8_fu_997_p2, "i_8_fu_997_p2");
    sc_trace(mVcdFile, i_8_reg_1480, "i_8_reg_1480");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, i_9_fu_1008_p2, "i_9_fu_1008_p2");
    sc_trace(mVcdFile, i_9_reg_1488, "i_9_reg_1488");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, tmp_data_fu_1014_p1, "tmp_data_fu_1014_p1");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_ap_ready, "grp_blobsCount_fu_573_ap_ready");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_ap_done, "grp_blobsCount_fu_573_ap_done");
    sc_trace(mVcdFile, tmp_1_fu_1019_p2, "tmp_1_fu_1019_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_block_state43_pp3_stage0_iter0, "ap_block_state43_pp3_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state45_pp3_stage0_iter1, "ap_block_state45_pp3_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state47_pp3_stage0_iter2, "ap_block_state47_pp3_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp3_stage0_11001, "ap_block_pp3_stage0_11001");
    sc_trace(mVcdFile, tmp_1_reg_1498_pp3_iter1_reg, "tmp_1_reg_1498_pp3_iter1_reg");
    sc_trace(mVcdFile, i_5_fu_1025_p2, "i_5_fu_1025_p2");
    sc_trace(mVcdFile, i_5_reg_1502, "i_5_reg_1502");
    sc_trace(mVcdFile, cast_gep_index_fu_1031_p3, "cast_gep_index_fu_1031_p3");
    sc_trace(mVcdFile, cast_gep_index_reg_1507, "cast_gep_index_reg_1507");
    sc_trace(mVcdFile, mem_index_gep_fu_1039_p2, "mem_index_gep_fu_1039_p2");
    sc_trace(mVcdFile, mem_index_gep_reg_1512, "mem_index_gep_reg_1512");
    sc_trace(mVcdFile, gepindex2_fu_1050_p3, "gepindex2_fu_1050_p3");
    sc_trace(mVcdFile, gepindex2_reg_1517, "gepindex2_reg_1517");
    sc_trace(mVcdFile, gepindex2_reg_1517_pp3_iter1_reg, "gepindex2_reg_1517_pp3_iter1_reg");
    sc_trace(mVcdFile, tmp_3_fu_1057_p1, "tmp_3_fu_1057_p1");
    sc_trace(mVcdFile, tmp_3_reg_1525, "tmp_3_reg_1525");
    sc_trace(mVcdFile, tmp_3_reg_1525_pp3_iter1_reg, "tmp_3_reg_1525_pp3_iter1_reg");
    sc_trace(mVcdFile, new_index_fu_1061_p2, "new_index_fu_1061_p2");
    sc_trace(mVcdFile, new_index_reg_1530, "new_index_reg_1530");
    sc_trace(mVcdFile, new_index1_fu_1066_p2, "new_index1_fu_1066_p2");
    sc_trace(mVcdFile, new_index1_reg_1535, "new_index1_reg_1535");
    sc_trace(mVcdFile, new_index2_fu_1079_p2, "new_index2_fu_1079_p2");
    sc_trace(mVcdFile, new_index2_reg_1540, "new_index2_reg_1540");
    sc_trace(mVcdFile, exitcond_i_fu_1092_p2, "exitcond_i_fu_1092_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp4_stage0, "ap_CS_fsm_pp4_stage0");
    sc_trace(mVcdFile, ap_block_state49_pp4_stage0_iter0, "ap_block_state49_pp4_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state53_pp4_stage0_iter1, "ap_block_state53_pp4_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp4_stage0_11001, "ap_block_pp4_stage0_11001");
    sc_trace(mVcdFile, i_10_fu_1098_p2, "i_10_fu_1098_p2");
    sc_trace(mVcdFile, i_10_reg_1549, "i_10_reg_1549");
    sc_trace(mVcdFile, tmp_i_fu_1120_p2, "tmp_i_fu_1120_p2");
    sc_trace(mVcdFile, tmp_i_reg_1554, "tmp_i_reg_1554");
    sc_trace(mVcdFile, tmp_4_i_fu_1126_p2, "tmp_4_i_fu_1126_p2");
    sc_trace(mVcdFile, tmp_4_i_reg_1560, "tmp_4_i_reg_1560");
    sc_trace(mVcdFile, ap_CS_fsm_pp4_stage1, "ap_CS_fsm_pp4_stage1");
    sc_trace(mVcdFile, ap_block_state50_pp4_stage1_iter0, "ap_block_state50_pp4_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp4_stage1_11001, "ap_block_pp4_stage1_11001");
    sc_trace(mVcdFile, tmp_8_i_fu_1148_p2, "tmp_8_i_fu_1148_p2");
    sc_trace(mVcdFile, tmp_8_i_reg_1575, "tmp_8_i_reg_1575");
    sc_trace(mVcdFile, tmp_7_i_fu_1157_p2, "tmp_7_i_fu_1157_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_1580, "tmp_7_i_reg_1580");
    sc_trace(mVcdFile, tmp_12_i_fu_1212_p2, "tmp_12_i_fu_1212_p2");
    sc_trace(mVcdFile, tmp_12_i_reg_1590, "tmp_12_i_reg_1590");
    sc_trace(mVcdFile, ap_CS_fsm_pp4_stage3, "ap_CS_fsm_pp4_stage3");
    sc_trace(mVcdFile, ap_block_state52_pp4_stage3_iter0, "ap_block_state52_pp4_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp4_stage3_11001, "ap_block_pp4_stage3_11001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state9, "ap_condition_pp1_exit_iter0_state9");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter5, "ap_enable_reg_pp1_iter5");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state21, "ap_condition_pp2_exit_iter0_state21");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter3, "ap_enable_reg_pp2_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter4, "ap_enable_reg_pp2_iter4");
    sc_trace(mVcdFile, ap_block_pp3_stage0_subdone, "ap_block_pp3_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp3_exit_iter0_state43, "ap_condition_pp3_exit_iter0_state43");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage1_subdone, "ap_block_pp3_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter2, "ap_enable_reg_pp3_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_block_pp4_stage0_subdone, "ap_block_pp4_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp4_exit_iter0_state49, "ap_condition_pp4_exit_iter0_state49");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter1, "ap_enable_reg_pp4_iter1");
    sc_trace(mVcdFile, ap_block_pp4_stage3_subdone, "ap_block_pp4_stage3_subdone");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_ap_start, "grp_erode_filter_fu_565_ap_start");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_ap_done, "grp_erode_filter_fu_565_ap_done");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_ap_idle, "grp_erode_filter_fu_565_ap_idle");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_ap_ready, "grp_erode_filter_fu_565_ap_ready");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_input_r_address0, "grp_erode_filter_fu_565_input_r_address0");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_input_r_ce0, "grp_erode_filter_fu_565_input_r_ce0");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_output_r_address0, "grp_erode_filter_fu_565_output_r_address0");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_output_r_ce0, "grp_erode_filter_fu_565_output_r_ce0");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_output_r_we0, "grp_erode_filter_fu_565_output_r_we0");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_output_r_d0, "grp_erode_filter_fu_565_output_r_d0");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_ap_start, "grp_blobsCount_fu_573_ap_start");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_ap_idle, "grp_blobsCount_fu_573_ap_idle");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_foreground_clean_address0, "grp_blobsCount_fu_573_foreground_clean_address0");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_foreground_clean_ce0, "grp_blobsCount_fu_573_foreground_clean_ce0");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_foreground_clean_address1, "grp_blobsCount_fu_573_foreground_clean_address1");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_foreground_clean_ce1, "grp_blobsCount_fu_573_foreground_clean_ce1");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_ap_return, "grp_blobsCount_fu_573_ap_return");
    sc_trace(mVcdFile, grp_dilate_fu_579_ap_start, "grp_dilate_fu_579_ap_start");
    sc_trace(mVcdFile, grp_dilate_fu_579_ap_done, "grp_dilate_fu_579_ap_done");
    sc_trace(mVcdFile, grp_dilate_fu_579_ap_idle, "grp_dilate_fu_579_ap_idle");
    sc_trace(mVcdFile, grp_dilate_fu_579_ap_ready, "grp_dilate_fu_579_ap_ready");
    sc_trace(mVcdFile, grp_dilate_fu_579_output_r_address0, "grp_dilate_fu_579_output_r_address0");
    sc_trace(mVcdFile, grp_dilate_fu_579_output_r_ce0, "grp_dilate_fu_579_output_r_ce0");
    sc_trace(mVcdFile, grp_dilate_fu_579_output_r_we0, "grp_dilate_fu_579_output_r_we0");
    sc_trace(mVcdFile, grp_dilate_fu_579_output_r_d0, "grp_dilate_fu_579_output_r_d0");
    sc_trace(mVcdFile, grp_dilate_fu_579_output_r_address1, "grp_dilate_fu_579_output_r_address1");
    sc_trace(mVcdFile, grp_dilate_fu_579_output_r_ce1, "grp_dilate_fu_579_output_r_ce1");
    sc_trace(mVcdFile, grp_dilate_fu_579_output_r_we1, "grp_dilate_fu_579_output_r_we1");
    sc_trace(mVcdFile, grp_dilate_fu_579_output_r_d1, "grp_dilate_fu_579_output_r_d1");
    sc_trace(mVcdFile, grp_dilate_fu_579_foreground_address0, "grp_dilate_fu_579_foreground_address0");
    sc_trace(mVcdFile, grp_dilate_fu_579_foreground_ce0, "grp_dilate_fu_579_foreground_ce0");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_ap_start, "grp_cleanBorders_fu_587_ap_start");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_ap_done, "grp_cleanBorders_fu_587_ap_done");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_ap_idle, "grp_cleanBorders_fu_587_ap_idle");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_ap_ready, "grp_cleanBorders_fu_587_ap_ready");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_input_r_address0, "grp_cleanBorders_fu_587_input_r_address0");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_input_r_ce0, "grp_cleanBorders_fu_587_input_r_ce0");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_input_r_we0, "grp_cleanBorders_fu_587_input_r_we0");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_input_r_d0, "grp_cleanBorders_fu_587_input_r_d0");
    sc_trace(mVcdFile, grp_copy_fu_593_ap_start, "grp_copy_fu_593_ap_start");
    sc_trace(mVcdFile, grp_copy_fu_593_ap_done, "grp_copy_fu_593_ap_done");
    sc_trace(mVcdFile, grp_copy_fu_593_ap_idle, "grp_copy_fu_593_ap_idle");
    sc_trace(mVcdFile, grp_copy_fu_593_ap_ready, "grp_copy_fu_593_ap_ready");
    sc_trace(mVcdFile, grp_copy_fu_593_input_r_address0, "grp_copy_fu_593_input_r_address0");
    sc_trace(mVcdFile, grp_copy_fu_593_input_r_ce0, "grp_copy_fu_593_input_r_ce0");
    sc_trace(mVcdFile, grp_copy_fu_593_output_r_address0, "grp_copy_fu_593_output_r_address0");
    sc_trace(mVcdFile, grp_copy_fu_593_output_r_ce0, "grp_copy_fu_593_output_r_ce0");
    sc_trace(mVcdFile, grp_copy_fu_593_output_r_we0, "grp_copy_fu_593_output_r_we0");
    sc_trace(mVcdFile, grp_copy_fu_593_output_r_d0, "grp_copy_fu_593_output_r_d0");
    sc_trace(mVcdFile, ap_phi_mux_i_1_phi_fu_479_p4, "ap_phi_mux_i_1_phi_fu_479_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_i1_phi_fu_490_p4, "ap_phi_mux_i_i1_phi_fu_490_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, i_2_reg_509, "i_2_reg_509");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, i_3_reg_520, "i_3_reg_520");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, exitcond2_fu_981_p2, "exitcond2_fu_981_p2");
    sc_trace(mVcdFile, i_4_reg_531, "i_4_reg_531");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, exitcond1_fu_992_p2, "exitcond1_fu_992_p2");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_546_p4, "ap_phi_mux_i_phi_fu_546_p4");
    sc_trace(mVcdFile, ap_block_pp3_stage0, "ap_block_pp3_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_i_phi_fu_557_p4, "ap_phi_mux_i_i_phi_fu_557_p4");
    sc_trace(mVcdFile, ap_block_pp4_stage0, "ap_block_pp4_stage0");
    sc_trace(mVcdFile, grp_erode_filter_fu_565_ap_start_reg, "grp_erode_filter_fu_565_ap_start_reg");
    sc_trace(mVcdFile, exitcond_fu_1003_p2, "exitcond_fu_1003_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_blobsCount_fu_573_ap_start_reg, "grp_blobsCount_fu_573_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, grp_dilate_fu_579_ap_start_reg, "grp_dilate_fu_579_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_cleanBorders_fu_587_ap_start_reg, "grp_cleanBorders_fu_587_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_copy_fu_593_ap_start_reg, "grp_copy_fu_593_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, new_index190_cast_fu_740_p1, "new_index190_cast_fu_740_p1");
    sc_trace(mVcdFile, new_index194_cast_fu_744_p1, "new_index194_cast_fu_744_p1");
    sc_trace(mVcdFile, new_index198_cast_fu_757_p1, "new_index198_cast_fu_757_p1");
    sc_trace(mVcdFile, gepindex2176_cast_fu_753_p1, "gepindex2176_cast_fu_753_p1");
    sc_trace(mVcdFile, tmp_5_i1_fu_810_p1, "tmp_5_i1_fu_810_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, tmp_9_i1_fu_818_p1, "tmp_9_i1_fu_818_p1");
    sc_trace(mVcdFile, tmp_1_i1_fu_840_p1, "tmp_1_i1_fu_840_p1");
    sc_trace(mVcdFile, tmp_16_i1_fu_911_p1, "tmp_16_i1_fu_911_p1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, new_index156_cast_fu_1071_p1, "new_index156_cast_fu_1071_p1");
    sc_trace(mVcdFile, new_index160_cast_fu_1075_p1, "new_index160_cast_fu_1075_p1");
    sc_trace(mVcdFile, new_index164_cast_fu_1088_p1, "new_index164_cast_fu_1088_p1");
    sc_trace(mVcdFile, gepindex2_cast_fu_1084_p1, "gepindex2_cast_fu_1084_p1");
    sc_trace(mVcdFile, tmp_1_i_fu_1135_p1, "tmp_1_i_fu_1135_p1");
    sc_trace(mVcdFile, ap_block_pp4_stage1, "ap_block_pp4_stage1");
    sc_trace(mVcdFile, tmp_5_i_fu_1143_p1, "tmp_5_i_fu_1143_p1");
    sc_trace(mVcdFile, tmp_9_i_fu_1166_p1, "tmp_9_i_fu_1166_p1");
    sc_trace(mVcdFile, ap_block_pp4_stage2, "ap_block_pp4_stage2");
    sc_trace(mVcdFile, tmp_16_i_fu_1241_p1, "tmp_16_i_fu_1241_p1");
    sc_trace(mVcdFile, tmp_15_i_fu_1234_p2, "tmp_15_i_fu_1234_p2");
    sc_trace(mVcdFile, tmp_24_i_fu_973_p3, "tmp_24_i_fu_973_p3");
    sc_trace(mVcdFile, cast_gep_index1_fu_686_p3, "cast_gep_index1_fu_686_p3");
    sc_trace(mVcdFile, cast_gep_index33_cas_fu_694_p1, "cast_gep_index33_cas_fu_694_p1");
    sc_trace(mVcdFile, addrCmp1_fu_708_p2, "addrCmp1_fu_708_p2");
    sc_trace(mVcdFile, gepindex_fu_713_p2, "gepindex_fu_713_p2");
    sc_trace(mVcdFile, p_shl1_i1_fu_777_p3, "p_shl1_i1_fu_777_p3");
    sc_trace(mVcdFile, p_shl1_i1_cast_fu_785_p1, "p_shl1_i1_cast_fu_785_p1");
    sc_trace(mVcdFile, i_i1_cast6_fu_773_p1, "i_i1_cast6_fu_773_p1");
    sc_trace(mVcdFile, tmp_4_i1_cast_fu_807_p1, "tmp_4_i1_cast_fu_807_p1");
    sc_trace(mVcdFile, tmp_8_i1_cast_fu_815_p1, "tmp_8_i1_cast_fu_815_p1");
    sc_trace(mVcdFile, tmp_7_i1_fu_831_p0, "tmp_7_i1_fu_831_p0");
    sc_trace(mVcdFile, tmp_i1_cast_fu_837_p1, "tmp_i1_cast_fu_837_p1");
    sc_trace(mVcdFile, p_shl_i1_fu_845_p3, "p_shl_i1_fu_845_p3");
    sc_trace(mVcdFile, p_shl9_i_fu_857_p3, "p_shl9_i_fu_857_p3");
    sc_trace(mVcdFile, p_shl_i1_cast_fu_853_p1, "p_shl_i1_cast_fu_853_p1");
    sc_trace(mVcdFile, p_shl9_i_cast_fu_865_p1, "p_shl9_i_cast_fu_865_p1");
    sc_trace(mVcdFile, tmp_3_i1_fu_869_p2, "tmp_3_i1_fu_869_p2");
    sc_trace(mVcdFile, tmp2_cast_cast_fu_879_p1, "tmp2_cast_cast_fu_879_p1");
    sc_trace(mVcdFile, tmp_3_i1_cast_cast_fu_875_p1, "tmp_3_i1_cast_cast_fu_875_p1");
    sc_trace(mVcdFile, tmp_12_i1_cast_fu_888_p1, "tmp_12_i1_cast_fu_888_p1");
    sc_trace(mVcdFile, tmp_14_i1_fu_895_p4, "tmp_14_i1_fu_895_p4");
    sc_trace(mVcdFile, tmp_i2_cast_fu_934_p1, "tmp_i2_cast_fu_934_p1");
    sc_trace(mVcdFile, tmp_21_i_cast_fu_937_p1, "tmp_21_i_cast_fu_937_p1");
    sc_trace(mVcdFile, abscond_i_fu_952_p2, "abscond_i_fu_952_p2");
    sc_trace(mVcdFile, neg_i_fu_947_p2, "neg_i_fu_947_p2");
    sc_trace(mVcdFile, abs_i_fu_957_p3, "abs_i_fu_957_p3");
    sc_trace(mVcdFile, abs_i_cast_fu_964_p1, "abs_i_cast_fu_964_p1");
    sc_trace(mVcdFile, addrCmp_fu_1045_p2, "addrCmp_fu_1045_p2");
    sc_trace(mVcdFile, p_shl2_i_fu_1108_p3, "p_shl2_i_fu_1108_p3");
    sc_trace(mVcdFile, p_shl2_i_cast_fu_1116_p1, "p_shl2_i_cast_fu_1116_p1");
    sc_trace(mVcdFile, i_i_cast_fu_1104_p1, "i_i_cast_fu_1104_p1");
    sc_trace(mVcdFile, tmp_i_cast_fu_1132_p1, "tmp_i_cast_fu_1132_p1");
    sc_trace(mVcdFile, tmp_4_i_cast_fu_1140_p1, "tmp_4_i_cast_fu_1140_p1");
    sc_trace(mVcdFile, tmp_7_i_fu_1157_p0, "tmp_7_i_fu_1157_p0");
    sc_trace(mVcdFile, tmp_8_i_cast_fu_1163_p1, "tmp_8_i_cast_fu_1163_p1");
    sc_trace(mVcdFile, ap_block_pp4_stage3, "ap_block_pp4_stage3");
    sc_trace(mVcdFile, p_shl_i_fu_1171_p3, "p_shl_i_fu_1171_p3");
    sc_trace(mVcdFile, p_shl1_i_fu_1183_p3, "p_shl1_i_fu_1183_p3");
    sc_trace(mVcdFile, p_shl_i_cast_fu_1179_p1, "p_shl_i_cast_fu_1179_p1");
    sc_trace(mVcdFile, p_shl1_i_cast_fu_1191_p1, "p_shl1_i_cast_fu_1191_p1");
    sc_trace(mVcdFile, tmp_3_i_fu_1195_p2, "tmp_3_i_fu_1195_p2");
    sc_trace(mVcdFile, grp_fu_1259_p3, "grp_fu_1259_p3");
    sc_trace(mVcdFile, tmp1_cast_cast_fu_1209_p1, "tmp1_cast_cast_fu_1209_p1");
    sc_trace(mVcdFile, tmp_3_i_cast_cast_fu_1201_p1, "tmp_3_i_cast_cast_fu_1201_p1");
    sc_trace(mVcdFile, tmp_12_i_cast_fu_1218_p1, "tmp_12_i_cast_fu_1218_p1");
    sc_trace(mVcdFile, mul_fu_1267_p2, "mul_fu_1267_p2");
    sc_trace(mVcdFile, tmp_14_i_fu_1225_p4, "tmp_14_i_fu_1225_p4");
    sc_trace(mVcdFile, grp_fu_1246_p0, "grp_fu_1246_p0");
    sc_trace(mVcdFile, grp_fu_1246_p1, "grp_fu_1246_p1");
    sc_trace(mVcdFile, grp_fu_1253_p0, "grp_fu_1253_p0");
    sc_trace(mVcdFile, grp_fu_1253_p1, "grp_fu_1253_p1");
    sc_trace(mVcdFile, grp_fu_1259_p0, "grp_fu_1259_p0");
    sc_trace(mVcdFile, grp_fu_1259_p1, "grp_fu_1259_p1");
    sc_trace(mVcdFile, mul_fu_1267_p0, "mul_fu_1267_p0");
    sc_trace(mVcdFile, mul_fu_1267_p1, "mul_fu_1267_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_block_state55, "ap_block_state55");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_predicate_op264_write_state42, "ap_predicate_op264_write_state42");
    sc_trace(mVcdFile, ap_block_state42_io, "ap_block_state42_io");
    sc_trace(mVcdFile, ap_block_pp4_stage1_subdone, "ap_block_pp4_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp4_stage2_subdone, "ap_block_pp4_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_idle_pp3, "ap_idle_pp3");
    sc_trace(mVcdFile, ap_enable_pp3, "ap_enable_pp3");
    sc_trace(mVcdFile, ap_idle_pp4, "ap_idle_pp4");
    sc_trace(mVcdFile, ap_enable_pp4, "ap_enable_pp4");
    sc_trace(mVcdFile, grp_fu_1246_p00, "grp_fu_1246_p00");
    sc_trace(mVcdFile, grp_fu_1253_p00, "grp_fu_1253_p00");
    sc_trace(mVcdFile, grp_fu_1259_p00, "grp_fu_1259_p00");
    sc_trace(mVcdFile, mul_fu_1267_p00, "mul_fu_1267_p00");
    sc_trace(mVcdFile, tmp_7_i1_fu_831_p00, "tmp_7_i1_fu_831_p00");
    sc_trace(mVcdFile, tmp_7_i_fu_1157_p00, "tmp_7_i_fu_1157_p00");
#endif

    }
    mHdltvinHandle.open("fromFrameToBlobCount.hdltvin.dat");
    mHdltvoutHandle.open("fromFrameToBlobCount.hdltvout.dat");
}

fromFrameToBlobCount::~fromFrameToBlobCount() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete background_U;
    delete input_r_U;
    delete input_grey_U;
    delete foreground_U;
    delete foreground_clean_U;
    delete fromFrameToBlobCount_control_s_axi_U;
    delete grp_erode_filter_fu_565;
    delete grp_blobsCount_fu_573;
    delete grp_dilate_fu_579;
    delete grp_cleanBorders_fu_587;
    delete grp_copy_fu_593;
    delete fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_3_1_U16;
    delete fromFrameToBlobCount_mul_mul_17ns_19ns_36_3_1_U17;
    delete fromFrameToBlobCount_mac_muladd_8ns_5ns_15ns_15_1_1_U18;
    delete fromFrameToBlobCount_mul_mul_17ns_19ns_36_1_1_U19;
}

void fromFrameToBlobCount::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void fromFrameToBlobCount::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_662_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_668_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_662_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_668_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state9.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter5 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter5 = ap_enable_reg_pp1_iter4.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter5 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state21.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state21.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state21.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter3 = ap_enable_reg_pp2_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter4 = ap_enable_reg_pp2_iter3.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            ap_enable_reg_pp2_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state43.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_662_p2.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp3_iter2 = ap_enable_reg_pp3_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_662_p2.read()))) {
            ap_enable_reg_pp3_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp4_exit_iter0_state49.read()))) {
            ap_enable_reg_pp4_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
            ap_enable_reg_pp4_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp4_stage3_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp4_iter1 = ap_enable_reg_pp4_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
            ap_enable_reg_pp4_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_blobsCount_fu_573_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
            grp_blobsCount_fu_573_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_blobsCount_fu_573_ap_ready.read())) {
            grp_blobsCount_fu_573_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_cleanBorders_fu_587_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1003_p2.read()))) {
            grp_cleanBorders_fu_587_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_cleanBorders_fu_587_ap_ready.read())) {
            grp_cleanBorders_fu_587_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_copy_fu_593_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
            grp_copy_fu_593_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_copy_fu_593_ap_ready.read())) {
            grp_copy_fu_593_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_dilate_fu_579_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_992_p2.read()))) {
            grp_dilate_fu_579_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dilate_fu_579_ap_ready.read())) {
            grp_dilate_fu_579_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_erode_filter_fu_565_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_981_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1003_p2.read())))) {
            grp_erode_filter_fu_565_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_erode_filter_fu_565_ap_ready.read())) {
            grp_erode_filter_fu_565_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_662_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_668_p2.read()))) {
        i_1_reg_475 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_1_reg_475 = i_6_reg_1316.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        i_2_reg_509 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                esl_seteq<1,1,1>(grp_copy_fu_593_ap_done.read(), ap_const_logic_1))) {
        i_2_reg_509 = i_7_reg_1472.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_981_p2.read()))) {
        i_3_reg_520 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(grp_copy_fu_593_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        i_3_reg_520 = i_8_reg_1480.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_992_p2.read()))) {
        i_4_reg_531 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(grp_copy_fu_593_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        i_4_reg_531 = i_9_reg_1488.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_i1_reg_486 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359.read()))) {
        i_i1_reg_486 = i_11_reg_1363.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_i2_reg_498 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_fu_916_p2.read()))) {
        i_i2_reg_498 = i_12_fu_922_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        i_i_reg_553 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_1545.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()))) {
        i_i_reg_553 = i_10_reg_1549.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_662_p2.read()))) {
        i_reg_542 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()))) {
        i_reg_542 = i_5_reg_1502.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359_pp1_iter2_reg.read()))) {
        reg_653 = input_r_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359.read()))) {
        reg_653 = input_r_q1.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamIn_V_data_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_vld_out.read()))) {
            streamIn_V_data_0_sel_rd =  (sc_logic) (~streamIn_V_data_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamIn_V_data_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_ack_in.read()))) {
            streamIn_V_data_0_sel_wr =  (sc_logic) (~streamIn_V_data_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamIn_V_data_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_ack_out.read()) && 
              esl_seteq<1,2,2>(streamIn_V_data_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_in.read()) && 
              esl_seteq<1,2,2>(streamIn_V_data_0_state.read(), ap_const_lv2_2)))) {
            streamIn_V_data_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(streamIn_V_data_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(streamIn_V_data_0_state.read(), ap_const_lv2_1)))) {
            streamIn_V_data_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(streamIn_V_data_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(streamIn_V_data_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(streamIn_V_data_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_ack_out.read()))))) {
            streamIn_V_data_0_state = ap_const_lv2_3;
        } else {
            streamIn_V_data_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamIn_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, streamIn_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, streamIn_V_dest_V_0_state.read())))) {
            streamIn_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, streamIn_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamIn_V_dest_V_0_state.read())))) {
            streamIn_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, streamIn_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamIn_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, streamIn_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_dest_V_0_ack_out.read()))))) {
            streamIn_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            streamIn_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_data_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_vld_out.read()))) {
            streamOut_V_data_1_sel_rd =  (sc_logic) (~streamOut_V_data_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_data_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_ack_in.read()))) {
            streamOut_V_data_1_sel_wr =  (sc_logic) (~streamOut_V_data_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_data_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_data_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_data_1_state.read())))) {
            streamOut_V_data_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_data_1_state.read())))) {
            streamOut_V_data_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_data_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_data_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_ack_out.read()))))) {
            streamOut_V_data_1_state = ap_const_lv2_3;
        } else {
            streamOut_V_data_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_dest_V_1_vld_out.read()))) {
            streamOut_V_dest_V_1_sel_rd =  (sc_logic) (~streamOut_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_dest_V_1_state.read())))) {
            streamOut_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_dest_V_1_state.read())))) {
            streamOut_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_dest_V_1_ack_out.read()))))) {
            streamOut_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            streamOut_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_id_V_1_vld_out.read()))) {
            streamOut_V_id_V_1_sel_rd =  (sc_logic) (~streamOut_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_id_V_1_state.read())))) {
            streamOut_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_id_V_1_state.read())))) {
            streamOut_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_id_V_1_ack_out.read()))))) {
            streamOut_V_id_V_1_state = ap_const_lv2_3;
        } else {
            streamOut_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_keep_V_1_vld_out.read()))) {
            streamOut_V_keep_V_1_sel_rd =  (sc_logic) (~streamOut_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_keep_V_1_state.read())))) {
            streamOut_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_keep_V_1_state.read())))) {
            streamOut_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_keep_V_1_ack_out.read()))))) {
            streamOut_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            streamOut_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_last_V_1_vld_out.read()))) {
            streamOut_V_last_V_1_sel_rd =  (sc_logic) (~streamOut_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_last_V_1_state.read())))) {
            streamOut_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_last_V_1_state.read())))) {
            streamOut_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_last_V_1_ack_out.read()))))) {
            streamOut_V_last_V_1_state = ap_const_lv2_3;
        } else {
            streamOut_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_strb_V_1_vld_out.read()))) {
            streamOut_V_strb_V_1_sel_rd =  (sc_logic) (~streamOut_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_strb_V_1_state.read())))) {
            streamOut_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_strb_V_1_state.read())))) {
            streamOut_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_strb_V_1_ack_out.read()))))) {
            streamOut_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            streamOut_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_user_V_1_vld_out.read()))) {
            streamOut_V_user_V_1_sel_rd =  (sc_logic) (~streamOut_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        streamOut_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_user_V_1_state.read())))) {
            streamOut_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_user_V_1_state.read())))) {
            streamOut_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, streamOut_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, streamOut_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, streamOut_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_user_V_1_ack_out.read()))))) {
            streamOut_V_user_V_1_state = ap_const_lv2_3;
        } else {
            streamOut_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, action_0_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, action_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, action_0_ack_out.read())))) {
        action_0_data_reg = action.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_1019_p2.read()))) {
        cast_gep_index_reg_1507 = cast_gep_index_fu_1031_p3.read();
        mem_index_gep_reg_1512 = mem_index_gep_fu_1039_p2.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dilate_iteration_0_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, dilate_iteration_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, dilate_iteration_0_ack_out.read())))) {
        dilate_iteration_0_data_reg = dilate_iteration.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        dilate_iteration_rea_reg_1289 = dilate_iteration_0_data_reg.read();
        erosion_iteration_re_reg_1294 = erosion_iteration_0_data_reg.read();
        md_threshold_read_reg_1299 = md_threshold_0_data_reg.read();
        second_erosion_itera_reg_1284 = second_erosion_iteration_0_data_reg.read();
        tmp_reg_1304 = tmp_fu_662_p2.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, erosion_iteration_0_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, erosion_iteration_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, erosion_iteration_0_ack_out.read())))) {
        erosion_iteration_0_data_reg = erosion_iteration.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_i1_reg_1359 = exitcond_i1_fu_761_p2.read();
        exitcond_i1_reg_1359_pp1_iter1_reg = exitcond_i1_reg_1359.read();
        exitcond_i1_reg_1359_pp1_iter2_reg = exitcond_i1_reg_1359_pp1_iter1_reg.read();
        exitcond_i1_reg_1359_pp1_iter3_reg = exitcond_i1_reg_1359_pp1_iter2_reg.read();
        exitcond_i1_reg_1359_pp1_iter4_reg = exitcond_i1_reg_1359_pp1_iter3_reg.read();
        i_i1_reg_486_pp1_iter1_reg = i_i1_reg_486.read();
        i_i1_reg_486_pp1_iter2_reg = i_i1_reg_486_pp1_iter1_reg.read();
        i_i1_reg_486_pp1_iter3_reg = i_i1_reg_486_pp1_iter2_reg.read();
        i_i1_reg_486_pp1_iter4_reg = i_i1_reg_486_pp1_iter3_reg.read();
        tmp_i1_reg_1368_pp1_iter1_reg = tmp_i1_reg_1368.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_i2_reg_1428 = exitcond_i2_fu_916_p2.read();
        exitcond_i2_reg_1428_pp2_iter1_reg = exitcond_i2_reg_1428.read();
        tmp_i2_reg_1437_pp2_iter1_reg = tmp_i2_reg_1437.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_i2_reg_1428_pp2_iter2_reg = exitcond_i2_reg_1428_pp2_iter1_reg.read();
        exitcond_i2_reg_1428_pp2_iter3_reg = exitcond_i2_reg_1428_pp2_iter2_reg.read();
        tmp_i2_reg_1437_pp2_iter2_reg = tmp_i2_reg_1437_pp2_iter1_reg.read();
        tmp_i2_reg_1437_pp2_iter3_reg = tmp_i2_reg_1437_pp2_iter2_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_i_reg_1545 = exitcond_i_fu_1092_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        gepindex1_reg_1331 = gepindex1_fu_718_p3.read();
        tmp_7_reg_1339 = tmp_7_fu_726_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        gepindex1_reg_1331_pp0_iter1_reg = gepindex1_reg_1331.read();
        reg_647_pp0_iter1_reg = reg_647.read();
        tmp_7_reg_1339_pp0_iter1_reg = tmp_7_reg_1339.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0))) {
        gepindex2_reg_1517 = gepindex2_fu_1050_p3.read();
        tmp_3_reg_1525 = tmp_3_fu_1057_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0))) {
        gepindex2_reg_1517_pp3_iter1_reg = gepindex2_reg_1517.read();
        reg_647_pp3_iter1_reg = reg_647.read();
        tmp_3_reg_1525_pp3_iter1_reg = tmp_3_reg_1525.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0))) {
        i_10_reg_1549 = i_10_fu_1098_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        i_11_reg_1363 = i_11_fu_767_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        i_5_reg_1502 = i_5_fu_1025_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_6_reg_1316 = i_6_fu_680_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        i_7_reg_1472 = i_7_fu_986_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        i_8_reg_1480 = i_8_fu_997_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        i_9_reg_1488 = i_9_fu_1008_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_reg_1428.read()))) {
        input_grey_load_reg_1452 = input_grey_q0.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, md_threshold_0_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, md_threshold_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, md_threshold_0_ack_out.read())))) {
        md_threshold_0_data_reg = md_threshold.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_674_p2.read()))) {
        mem_index_gep1_reg_1321 = mem_index_gep1_fu_698_p2.read();
        tmp_6_reg_1326 = tmp_6_fu_704_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359_pp1_iter4_reg.read()))) {
        mul2_reg_1423 = grp_fu_1253_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        new_index1_reg_1535 = new_index1_fu_1066_p2.read();
        new_index_reg_1530 = new_index_fu_1061_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498_pp3_iter1_reg.read()))) {
        new_index2_reg_1540 = new_index2_fu_1079_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        new_index3_reg_1344 = new_index3_fu_730_p2.read();
        new_index4_reg_1349 = new_index4_fu_735_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312_pp0_iter1_reg.read()))) {
        new_index5_reg_1354 = new_index5_fu_748_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && 
  esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0)))) {
        reg_635 = streamIn_V_data_0_data_out.read().range(31, 24);
        reg_641 = streamIn_V_data_0_data_out.read().range(23, 16);
        reg_647 = streamIn_V_data_0_data_out.read().range(15, 8);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_reg_1428.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp4_stage2_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_1545.read())))) {
        reg_658 = background_q0.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, second_erosion_iteration_0_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, second_erosion_iteration_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, second_erosion_iteration_0_ack_out.read())))) {
        second_erosion_iteration_0_data_reg = second_erosion_iteration.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_load_A.read())) {
        streamIn_V_data_0_payload_A = streamIn_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_load_B.read())) {
        streamIn_V_data_0_payload_B = streamIn_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_load_A.read())) {
        streamOut_V_data_1_payload_A = tmp_data_fu_1014_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_load_B.read())) {
        streamOut_V_data_1_payload_B = tmp_data_fu_1014_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359_pp1_iter1_reg.read()))) {
        tmp2_reg_1408 = grp_fu_1246_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359_pp1_iter2_reg.read()))) {
        tmp_12_i1_reg_1413 = tmp_12_i1_fu_882_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_1545.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_12_i_reg_1590 = tmp_12_i_fu_1212_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_1498 = tmp_1_fu_1019_p2.read();
        tmp_1_reg_1498_pp3_iter1_reg = tmp_1_reg_1498.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_reg_1428_pp2_iter1_reg.read()))) {
        tmp_22_i_reg_1457 = tmp_22_i_fu_941_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_reg_1428_pp2_iter2_reg.read()))) {
        tmp_23_i_reg_1464 = tmp_23_i_fu_968_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_fu_761_p2.read()))) {
        tmp_4_i1_reg_1373 = tmp_4_i1_fu_795_p2.read();
        tmp_8_i1_reg_1378 = tmp_8_i1_fu_801_p2.read();
        tmp_i1_reg_1368 = tmp_i1_fu_789_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_1092_p2.read()))) {
        tmp_4_i_reg_1560 = tmp_4_i_fu_1126_p2.read();
        tmp_i_reg_1554 = tmp_i_fu_1120_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_4_reg_1312 = tmp_4_fu_674_p2.read();
        tmp_4_reg_1312_pp0_iter1_reg = tmp_4_reg_1312.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359_pp1_iter1_reg.read()))) {
        tmp_7_i1_reg_1398 = tmp_7_i1_fu_831_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_1545.read()))) {
        tmp_7_i_reg_1580 = tmp_7_i_fu_1157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_1545.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_8_i_reg_1575 = tmp_8_i_fu_1148_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_fu_916_p2.read()))) {
        tmp_i2_reg_1437 = tmp_i2_fu_928_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_662_p2.read()))) {
        tmp_s_reg_1308 = tmp_s_fu_668_p2.read();
    }
}

void fromFrameToBlobCount::thread_abs_i_cast_fu_964_p1() {
    abs_i_cast_fu_964_p1 = esl_sext<32,9>(abs_i_fu_957_p3.read());
}

void fromFrameToBlobCount::thread_abs_i_fu_957_p3() {
    abs_i_fu_957_p3 = (!abscond_i_fu_952_p2.read()[0].is_01())? sc_lv<9>(): ((abscond_i_fu_952_p2.read()[0].to_bool())? tmp_22_i_reg_1457.read(): neg_i_fu_947_p2.read());
}

void fromFrameToBlobCount::thread_abscond_i_fu_952_p2() {
    abscond_i_fu_952_p2 = (!tmp_22_i_reg_1457.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(tmp_22_i_reg_1457.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void fromFrameToBlobCount::thread_action_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read())))) {
        action_0_ack_out = ap_const_logic_1;
    } else {
        action_0_ack_out = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_addrCmp1_fu_708_p2() {
    addrCmp1_fu_708_p2 = (!mem_index_gep1_reg_1321.read().is_01() || !ap_const_lv19_5EEE2.is_01())? sc_lv<1>(): (sc_biguint<19>(mem_index_gep1_reg_1321.read()) < sc_biguint<19>(ap_const_lv19_5EEE2));
}

void fromFrameToBlobCount::thread_addrCmp_fu_1045_p2() {
    addrCmp_fu_1045_p2 = (!mem_index_gep_reg_1512.read().is_01() || !ap_const_lv17_17BD2.is_01())? sc_lv<1>(): (sc_biguint<17>(mem_index_gep_reg_1512.read()) < sc_biguint<17>(ap_const_lv17_17BD2));
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[5];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[6];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[8];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read()[26];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp3_stage1() {
    ap_CS_fsm_pp3_stage1 = ap_CS_fsm.read()[27];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp4_stage0() {
    ap_CS_fsm_pp4_stage0 = ap_CS_fsm.read()[29];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp4_stage1() {
    ap_CS_fsm_pp4_stage1 = ap_CS_fsm.read()[30];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp4_stage2() {
    ap_CS_fsm_pp4_stage2 = ap_CS_fsm.read()[31];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_pp4_stage3() {
    ap_CS_fsm_pp4_stage3 = ap_CS_fsm.read()[32];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[7];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[9];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[10];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[11];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[12];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[13];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[14];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[15];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[16];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[17];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[18];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[19];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[20];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[21];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[22];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[23];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[24];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[25];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[28];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[34];
}

void fromFrameToBlobCount::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[4];
}

void fromFrameToBlobCount::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_out.read()));
}

void fromFrameToBlobCount::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_out.read()));
}

void fromFrameToBlobCount::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp3_stage0() {
    ap_block_pp3_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp3_stage0_11001() {
    ap_block_pp3_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp3_stage0_subdone() {
    ap_block_pp3_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp3_stage1() {
    ap_block_pp3_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp3_stage1_11001() {
    ap_block_pp3_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_out.read()));
}

void fromFrameToBlobCount::thread_ap_block_pp3_stage1_subdone() {
    ap_block_pp3_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_out.read()));
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage0() {
    ap_block_pp4_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage0_11001() {
    ap_block_pp4_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage0_subdone() {
    ap_block_pp4_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage1() {
    ap_block_pp4_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage1_11001() {
    ap_block_pp4_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage1_subdone() {
    ap_block_pp4_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage2() {
    ap_block_pp4_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage2_11001() {
    ap_block_pp4_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage2_subdone() {
    ap_block_pp4_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage3() {
    ap_block_pp4_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage3_11001() {
    ap_block_pp4_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_pp4_stage3_subdone() {
    ap_block_pp4_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state10_pp1_stage1_iter0() {
    ap_block_state10_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state11_pp1_stage0_iter1() {
    ap_block_state11_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state12_pp1_stage1_iter1() {
    ap_block_state12_pp1_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state13_pp1_stage0_iter2() {
    ap_block_state13_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state14_pp1_stage1_iter2() {
    ap_block_state14_pp1_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state15_pp1_stage0_iter3() {
    ap_block_state15_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state16_pp1_stage1_iter3() {
    ap_block_state16_pp1_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state17_pp1_stage0_iter4() {
    ap_block_state17_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state18_pp1_stage1_iter4() {
    ap_block_state18_pp1_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state19_pp1_stage0_iter5() {
    ap_block_state19_pp1_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state21_pp2_stage0_iter0() {
    ap_block_state21_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state22_pp2_stage0_iter1() {
    ap_block_state22_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state23_pp2_stage0_iter2() {
    ap_block_state23_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state24_pp2_stage0_iter3() {
    ap_block_state24_pp2_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state25_pp2_stage0_iter4() {
    ap_block_state25_pp2_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state42_io() {
    ap_block_state42_io = (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op264_write_state42.read()));
}

void fromFrameToBlobCount::thread_ap_block_state43_pp3_stage0_iter0() {
    ap_block_state43_pp3_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state44_pp3_stage1_iter0() {
    ap_block_state44_pp3_stage1_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_out.read()));
}

void fromFrameToBlobCount::thread_ap_block_state45_pp3_stage0_iter1() {
    ap_block_state45_pp3_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state46_pp3_stage1_iter1() {
    ap_block_state46_pp3_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state47_pp3_stage0_iter2() {
    ap_block_state47_pp3_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state49_pp4_stage0_iter0() {
    ap_block_state49_pp4_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && esl_seteq<1,1,1>(ap_const_logic_0, streamIn_V_data_0_vld_out.read()));
}

void fromFrameToBlobCount::thread_ap_block_state50_pp4_stage1_iter0() {
    ap_block_state50_pp4_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state51_pp4_stage2_iter0() {
    ap_block_state51_pp4_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state52_pp4_stage3_iter0() {
    ap_block_state52_pp4_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state53_pp4_stage0_iter1() {
    ap_block_state53_pp4_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state55() {
    ap_block_state55 = (esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read()));
}

void fromFrameToBlobCount::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state7_pp0_stage0_iter2() {
    ap_block_state7_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_block_state9_pp1_stage0_iter0() {
    ap_block_state9_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void fromFrameToBlobCount::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_674_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_condition_pp1_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i1_fu_761_p2.read())) {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_condition_pp2_exit_iter0_state21() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i2_fu_916_p2.read())) {
        ap_condition_pp2_exit_iter0_state21 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state21 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_condition_pp3_exit_iter0_state43() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_1019_p2.read())) {
        ap_condition_pp3_exit_iter0_state43 = ap_const_logic_1;
    } else {
        ap_condition_pp3_exit_iter0_state43 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_condition_pp4_exit_iter0_state49() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_1092_p2.read())) {
        ap_condition_pp4_exit_iter0_state49 = ap_const_logic_1;
    } else {
        ap_condition_pp4_exit_iter0_state49 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void fromFrameToBlobCount::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void fromFrameToBlobCount::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void fromFrameToBlobCount::thread_ap_enable_pp3() {
    ap_enable_pp3 = (ap_idle_pp3.read() ^ ap_const_logic_1);
}

void fromFrameToBlobCount::thread_ap_enable_pp4() {
    ap_enable_pp4 = (ap_idle_pp4.read() ^ ap_const_logic_1);
}

void fromFrameToBlobCount::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter5.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter4.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_idle_pp3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter2.read()))) {
        ap_idle_pp3 = ap_const_logic_1;
    } else {
        ap_idle_pp3 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_idle_pp4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter1.read()))) {
        ap_idle_pp4 = ap_const_logic_1;
    } else {
        ap_idle_pp4 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_phi_mux_i_1_phi_fu_479_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_1_phi_fu_479_p4 = i_6_reg_1316.read();
    } else {
        ap_phi_mux_i_1_phi_fu_479_p4 = i_1_reg_475.read();
    }
}

void fromFrameToBlobCount::thread_ap_phi_mux_i_i1_phi_fu_490_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_i1_phi_fu_490_p4 = i_11_reg_1363.read();
    } else {
        ap_phi_mux_i_i1_phi_fu_490_p4 = i_i1_reg_486.read();
    }
}

void fromFrameToBlobCount::thread_ap_phi_mux_i_i_phi_fu_557_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_1545.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_i_phi_fu_557_p4 = i_10_reg_1549.read();
    } else {
        ap_phi_mux_i_i_phi_fu_557_p4 = i_i_reg_553.read();
    }
}

void fromFrameToBlobCount::thread_ap_phi_mux_i_phi_fu_546_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_546_p4 = i_5_reg_1502.read();
    } else {
        ap_phi_mux_i_phi_fu_546_p4 = i_reg_542.read();
    }
}

void fromFrameToBlobCount::thread_ap_predicate_op264_write_state42() {
    ap_predicate_op264_write_state42 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1304.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_1308.read()));
}

void fromFrameToBlobCount::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void fromFrameToBlobCount::thread_background_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage2.read(), ap_const_boolean_0))) {
        background_address0 =  (sc_lv<17>) (tmp_9_i_fu_1166_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp4_stage1.read(), ap_const_boolean_0))) {
        background_address0 =  (sc_lv<17>) (tmp_1_i_fu_1135_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        background_address0 =  (sc_lv<17>) (new_index164_cast_fu_1088_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()))) {
        background_address0 =  (sc_lv<17>) (new_index160_cast_fu_1075_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        background_address0 =  (sc_lv<17>) (tmp_i2_fu_928_p1.read());
    } else {
        background_address0 = "XXXXXXXXXXXXXXXXX";
    }
}

void fromFrameToBlobCount::thread_background_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0))) {
        background_address1 =  (sc_lv<17>) (tmp_16_i_fu_1241_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp4_stage1.read(), ap_const_boolean_0))) {
        background_address1 =  (sc_lv<17>) (tmp_5_i_fu_1143_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        background_address1 =  (sc_lv<17>) (gepindex2_cast_fu_1084_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()))) {
        background_address1 =  (sc_lv<17>) (new_index156_cast_fu_1071_p1.read());
    } else {
        background_address1 = "XXXXXXXXXXXXXXXXX";
    }
}

void fromFrameToBlobCount::thread_background_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage1_11001.read(), ap_const_boolean_0)))) {
        background_ce0 = ap_const_logic_1;
    } else {
        background_ce0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_background_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage1_11001.read(), ap_const_boolean_0)))) {
        background_ce1 = ap_const_logic_1;
    } else {
        background_ce1 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_background_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        background_d0 = reg_647_pp3_iter1_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()))) {
        background_d0 = reg_641.read();
    } else {
        background_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_background_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0))) {
        background_d1 = tmp_15_i_fu_1234_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()))) {
        background_d1 = tmp_3_reg_1525_pp3_iter1_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()))) {
        background_d1 = reg_635.read();
    } else {
        background_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_background_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498_pp3_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498_pp3_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read())))) {
        background_we0 = ap_const_logic_1;
    } else {
        background_we0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_background_we1() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_reg_1545.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498_pp3_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498_pp3_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read())))) {
        background_we1 = ap_const_logic_1;
    } else {
        background_we1 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_cast_gep_index1_fu_686_p3() {
    cast_gep_index1_fu_686_p3 = esl_concat<15,2>(ap_phi_mux_i_1_phi_fu_479_p4.read(), ap_const_lv2_0);
}

void fromFrameToBlobCount::thread_cast_gep_index33_cas_fu_694_p1() {
    cast_gep_index33_cas_fu_694_p1 = esl_zext<19,17>(cast_gep_index1_fu_686_p3.read());
}

void fromFrameToBlobCount::thread_cast_gep_index_fu_1031_p3() {
    cast_gep_index_fu_1031_p3 = esl_concat<15,2>(ap_phi_mux_i_phi_fu_546_p4.read(), ap_const_lv2_0);
}

void fromFrameToBlobCount::thread_dilate_iteration_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read())))) {
        dilate_iteration_0_ack_out = ap_const_logic_1;
    } else {
        dilate_iteration_0_ack_out = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_erosion_iteration_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read())))) {
        erosion_iteration_0_ack_out = ap_const_logic_1;
    } else {
        erosion_iteration_0_ack_out = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_exitcond1_fu_992_p2() {
    exitcond1_fu_992_p2 = (!i_3_reg_520.read().is_01() || !dilate_iteration_rea_reg_1289.read().is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_520.read() == dilate_iteration_rea_reg_1289.read());
}

void fromFrameToBlobCount::thread_exitcond2_fu_981_p2() {
    exitcond2_fu_981_p2 = (!i_2_reg_509.read().is_01() || !erosion_iteration_re_reg_1294.read().is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_509.read() == erosion_iteration_re_reg_1294.read());
}

void fromFrameToBlobCount::thread_exitcond_fu_1003_p2() {
    exitcond_fu_1003_p2 = (!i_4_reg_531.read().is_01() || !second_erosion_itera_reg_1284.read().is_01())? sc_lv<1>(): sc_lv<1>(i_4_reg_531.read() == second_erosion_itera_reg_1284.read());
}

void fromFrameToBlobCount::thread_exitcond_i1_fu_761_p2() {
    exitcond_i1_fu_761_p2 = (!ap_phi_mux_i_i1_phi_fu_490_p4.read().is_01() || !ap_const_lv15_7E90.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_i1_phi_fu_490_p4.read() == ap_const_lv15_7E90);
}

void fromFrameToBlobCount::thread_exitcond_i2_fu_916_p2() {
    exitcond_i2_fu_916_p2 = (!i_i2_reg_498.read().is_01() || !ap_const_lv15_7E90.is_01())? sc_lv<1>(): sc_lv<1>(i_i2_reg_498.read() == ap_const_lv15_7E90);
}

void fromFrameToBlobCount::thread_exitcond_i_fu_1092_p2() {
    exitcond_i_fu_1092_p2 = (!ap_phi_mux_i_i_phi_fu_557_p4.read().is_01() || !ap_const_lv15_7E90.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_i_phi_fu_557_p4.read() == ap_const_lv15_7E90);
}

void fromFrameToBlobCount::thread_foreground_address0() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter4.read()))) {
        foreground_address0 =  (sc_lv<15>) (tmp_i2_reg_1437_pp2_iter3_reg.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        foreground_address0 = grp_copy_fu_593_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_address0 = grp_dilate_fu_579_foreground_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        foreground_address0 = grp_erode_filter_fu_565_input_r_address0.read();
    } else {
        foreground_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_foreground_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter4.read()))) {
        foreground_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        foreground_ce0 = grp_copy_fu_593_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_ce0 = grp_dilate_fu_579_foreground_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        foreground_ce0 = grp_erode_filter_fu_565_input_r_ce0.read();
    } else {
        foreground_ce0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_foreground_clean_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        foreground_clean_address0 = grp_copy_fu_593_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        foreground_clean_address0 = grp_cleanBorders_fu_587_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_clean_address0 = grp_dilate_fu_579_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        foreground_clean_address0 = grp_blobsCount_fu_573_foreground_clean_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        foreground_clean_address0 = grp_erode_filter_fu_565_output_r_address0.read();
    } else {
        foreground_clean_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_foreground_clean_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_clean_address1 = grp_dilate_fu_579_output_r_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        foreground_clean_address1 = grp_blobsCount_fu_573_foreground_clean_address1.read();
    } else {
        foreground_clean_address1 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_foreground_clean_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        foreground_clean_ce0 = grp_copy_fu_593_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        foreground_clean_ce0 = grp_cleanBorders_fu_587_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_clean_ce0 = grp_dilate_fu_579_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        foreground_clean_ce0 = grp_blobsCount_fu_573_foreground_clean_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        foreground_clean_ce0 = grp_erode_filter_fu_565_output_r_ce0.read();
    } else {
        foreground_clean_ce0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_foreground_clean_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_clean_ce1 = grp_dilate_fu_579_output_r_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        foreground_clean_ce1 = grp_blobsCount_fu_573_foreground_clean_ce1.read();
    } else {
        foreground_clean_ce1 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_foreground_clean_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        foreground_clean_d0 = grp_cleanBorders_fu_587_input_r_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_clean_d0 = grp_dilate_fu_579_output_r_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        foreground_clean_d0 = grp_erode_filter_fu_565_output_r_d0.read();
    } else {
        foreground_clean_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_foreground_clean_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        foreground_clean_we0 = grp_cleanBorders_fu_587_input_r_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_clean_we0 = grp_dilate_fu_579_output_r_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        foreground_clean_we0 = grp_erode_filter_fu_565_output_r_we0.read();
    } else {
        foreground_clean_we0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_foreground_clean_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        foreground_clean_we1 = grp_dilate_fu_579_output_r_we1.read();
    } else {
        foreground_clean_we1 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_foreground_d0() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter4.read()))) {
        foreground_d0 = tmp_24_i_fu_973_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        foreground_d0 = grp_copy_fu_593_output_r_d0.read();
    } else {
        foreground_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_foreground_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i2_reg_1428_pp2_iter3_reg.read()))) {
        foreground_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        foreground_we0 = grp_copy_fu_593_output_r_we0.read();
    } else {
        foreground_we0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_gepindex1_fu_718_p3() {
    gepindex1_fu_718_p3 = (!addrCmp1_fu_708_p2.read()[0].is_01())? sc_lv<17>(): ((addrCmp1_fu_708_p2.read()[0].to_bool())? gepindex_fu_713_p2.read(): ap_const_lv17_17BAF);
}

void fromFrameToBlobCount::thread_gepindex2176_cast_fu_753_p1() {
    gepindex2176_cast_fu_753_p1 = esl_zext<64,17>(gepindex1_reg_1331_pp0_iter1_reg.read());
}

void fromFrameToBlobCount::thread_gepindex2_cast_fu_1084_p1() {
    gepindex2_cast_fu_1084_p1 = esl_zext<64,17>(gepindex2_reg_1517_pp3_iter1_reg.read());
}

void fromFrameToBlobCount::thread_gepindex2_fu_1050_p3() {
    gepindex2_fu_1050_p3 = (!addrCmp_fu_1045_p2.read()[0].is_01())? sc_lv<17>(): ((addrCmp_fu_1045_p2.read()[0].to_bool())? cast_gep_index_reg_1507.read(): ap_const_lv17_17BAF);
}

void fromFrameToBlobCount::thread_gepindex_fu_713_p2() {
    gepindex_fu_713_p2 = (!ap_const_lv17_18CCE.is_01() || !tmp_6_reg_1326.read().is_01())? sc_lv<17>(): (sc_bigint<17>(ap_const_lv17_18CCE) + sc_biguint<17>(tmp_6_reg_1326.read()));
}

void fromFrameToBlobCount::thread_grp_blobsCount_fu_573_ap_start() {
    grp_blobsCount_fu_573_ap_start = grp_blobsCount_fu_573_ap_start_reg.read();
}

void fromFrameToBlobCount::thread_grp_cleanBorders_fu_587_ap_start() {
    grp_cleanBorders_fu_587_ap_start = grp_cleanBorders_fu_587_ap_start_reg.read();
}

void fromFrameToBlobCount::thread_grp_copy_fu_593_ap_start() {
    grp_copy_fu_593_ap_start = grp_copy_fu_593_ap_start_reg.read();
}

void fromFrameToBlobCount::thread_grp_dilate_fu_579_ap_start() {
    grp_dilate_fu_579_ap_start = grp_dilate_fu_579_ap_start_reg.read();
}

void fromFrameToBlobCount::thread_grp_erode_filter_fu_565_ap_start() {
    grp_erode_filter_fu_565_ap_start = grp_erode_filter_fu_565_ap_start_reg.read();
}

void fromFrameToBlobCount::thread_grp_fu_1246_p0() {
    grp_fu_1246_p0 =  (sc_lv<8>) (grp_fu_1246_p00.read());
}

void fromFrameToBlobCount::thread_grp_fu_1246_p00() {
    grp_fu_1246_p00 = esl_zext<13,8>(input_r_q0.read());
}

void fromFrameToBlobCount::thread_grp_fu_1246_p1() {
    grp_fu_1246_p1 =  (sc_lv<5>) (ap_const_lv13_B);
}

void fromFrameToBlobCount::thread_grp_fu_1253_p0() {
    grp_fu_1253_p0 =  (sc_lv<17>) (grp_fu_1253_p00.read());
}

void fromFrameToBlobCount::thread_grp_fu_1253_p00() {
    grp_fu_1253_p00 = esl_zext<36,17>(tmp_12_i1_cast_fu_888_p1.read());
}

void fromFrameToBlobCount::thread_grp_fu_1253_p1() {
    grp_fu_1253_p1 =  (sc_lv<19>) (ap_const_lv36_28F5D);
}

void fromFrameToBlobCount::thread_grp_fu_1259_p0() {
    grp_fu_1259_p0 =  (sc_lv<8>) (grp_fu_1259_p00.read());
}

void fromFrameToBlobCount::thread_grp_fu_1259_p00() {
    grp_fu_1259_p00 = esl_zext<13,8>(background_q0.read());
}

void fromFrameToBlobCount::thread_grp_fu_1259_p1() {
    grp_fu_1259_p1 =  (sc_lv<5>) (ap_const_lv13_B);
}

void fromFrameToBlobCount::thread_i_10_fu_1098_p2() {
    i_10_fu_1098_p2 = (!ap_phi_mux_i_i_phi_fu_557_p4.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(ap_phi_mux_i_i_phi_fu_557_p4.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void fromFrameToBlobCount::thread_i_11_fu_767_p2() {
    i_11_fu_767_p2 = (!ap_phi_mux_i_i1_phi_fu_490_p4.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(ap_phi_mux_i_i1_phi_fu_490_p4.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void fromFrameToBlobCount::thread_i_12_fu_922_p2() {
    i_12_fu_922_p2 = (!i_i2_reg_498.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i_i2_reg_498.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void fromFrameToBlobCount::thread_i_5_fu_1025_p2() {
    i_5_fu_1025_p2 = (!ap_phi_mux_i_phi_fu_546_p4.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(ap_phi_mux_i_phi_fu_546_p4.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void fromFrameToBlobCount::thread_i_6_fu_680_p2() {
    i_6_fu_680_p2 = (!ap_phi_mux_i_1_phi_fu_479_p4.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(ap_phi_mux_i_1_phi_fu_479_p4.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void fromFrameToBlobCount::thread_i_7_fu_986_p2() {
    i_7_fu_986_p2 = (!i_2_reg_509.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_2_reg_509.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void fromFrameToBlobCount::thread_i_8_fu_997_p2() {
    i_8_fu_997_p2 = (!i_3_reg_520.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_3_reg_520.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void fromFrameToBlobCount::thread_i_9_fu_1008_p2() {
    i_9_fu_1008_p2 = (!i_4_reg_531.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_4_reg_531.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void fromFrameToBlobCount::thread_i_i1_cast6_fu_773_p1() {
    i_i1_cast6_fu_773_p1 = esl_zext<18,15>(ap_phi_mux_i_i1_phi_fu_490_p4.read());
}

void fromFrameToBlobCount::thread_i_i_cast_fu_1104_p1() {
    i_i_cast_fu_1104_p1 = esl_zext<18,15>(ap_phi_mux_i_i_phi_fu_557_p4.read());
}

void fromFrameToBlobCount::thread_input_grey_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        input_grey_address0 =  (sc_lv<15>) (tmp_i2_fu_928_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter5.read()))) {
        input_grey_address0 =  (sc_lv<15>) (tmp_16_i1_fu_911_p1.read());
    } else {
        input_grey_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_input_grey_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter5.read())))) {
        input_grey_ce0 = ap_const_logic_1;
    } else {
        input_grey_ce0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_input_grey_d0() {
    input_grey_d0 = (tmp_14_i1_fu_895_p4.read() ^ ap_const_lv8_FF);
}

void fromFrameToBlobCount::thread_input_grey_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i1_reg_1359_pp1_iter4_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter5.read()))) {
        input_grey_we0 = ap_const_logic_1;
    } else {
        input_grey_we0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_input_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        input_r_address0 =  (sc_lv<17>) (tmp_1_i1_fu_840_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        input_r_address0 =  (sc_lv<17>) (tmp_9_i1_fu_818_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        input_r_address0 =  (sc_lv<17>) (new_index198_cast_fu_757_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        input_r_address0 =  (sc_lv<17>) (new_index190_cast_fu_740_p1.read());
    } else {
        input_r_address0 = "XXXXXXXXXXXXXXXXX";
    }
}

void fromFrameToBlobCount::thread_input_r_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        input_r_address1 =  (sc_lv<17>) (tmp_5_i1_fu_810_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        input_r_address1 =  (sc_lv<17>) (gepindex2176_cast_fu_753_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        input_r_address1 =  (sc_lv<17>) (new_index194_cast_fu_744_p1.read());
    } else {
        input_r_address1 = "XXXXXXXXXXXXXXXXX";
    }
}

void fromFrameToBlobCount::thread_input_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_input_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        input_r_ce1 = ap_const_logic_1;
    } else {
        input_r_ce1 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_input_r_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        input_r_d0 = reg_647_pp0_iter1_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        input_r_d0 = reg_635.read();
    } else {
        input_r_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_input_r_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        input_r_d1 = tmp_7_reg_1339_pp0_iter1_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        input_r_d1 = reg_641.read();
    } else {
        input_r_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void fromFrameToBlobCount::thread_input_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        input_r_we0 = ap_const_logic_1;
    } else {
        input_r_we0 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_input_r_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        input_r_we1 = ap_const_logic_1;
    } else {
        input_r_we1 = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_md_threshold_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read())))) {
        md_threshold_0_ack_out = ap_const_logic_1;
    } else {
        md_threshold_0_ack_out = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_mem_index_gep1_fu_698_p2() {
    mem_index_gep1_fu_698_p2 = (!ap_const_lv19_47332.is_01() || !cast_gep_index33_cas_fu_694_p1.read().is_01())? sc_lv<19>(): (sc_bigint<19>(ap_const_lv19_47332) + sc_biguint<19>(cast_gep_index33_cas_fu_694_p1.read()));
}

void fromFrameToBlobCount::thread_mem_index_gep_fu_1039_p2() {
    mem_index_gep_fu_1039_p2 = (!ap_const_lv17_22.is_01() || !cast_gep_index_fu_1031_p3.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_22) + sc_biguint<17>(cast_gep_index_fu_1031_p3.read()));
}

void fromFrameToBlobCount::thread_mul_fu_1267_p0() {
    mul_fu_1267_p0 =  (sc_lv<17>) (mul_fu_1267_p00.read());
}

void fromFrameToBlobCount::thread_mul_fu_1267_p00() {
    mul_fu_1267_p00 = esl_zext<36,17>(tmp_12_i_cast_fu_1218_p1.read());
}

void fromFrameToBlobCount::thread_mul_fu_1267_p1() {
    mul_fu_1267_p1 =  (sc_lv<19>) (ap_const_lv36_28F5D);
}

void fromFrameToBlobCount::thread_neg_i_fu_947_p2() {
    neg_i_fu_947_p2 = (!ap_const_lv9_0.is_01() || !tmp_22_i_reg_1457.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_biguint<9>(tmp_22_i_reg_1457.read()));
}

void fromFrameToBlobCount::thread_new_index156_cast_fu_1071_p1() {
    new_index156_cast_fu_1071_p1 = esl_zext<64,17>(new_index_reg_1530.read());
}

void fromFrameToBlobCount::thread_new_index160_cast_fu_1075_p1() {
    new_index160_cast_fu_1075_p1 = esl_zext<64,17>(new_index1_reg_1535.read());
}

void fromFrameToBlobCount::thread_new_index164_cast_fu_1088_p1() {
    new_index164_cast_fu_1088_p1 = esl_zext<64,17>(new_index2_reg_1540.read());
}

void fromFrameToBlobCount::thread_new_index190_cast_fu_740_p1() {
    new_index190_cast_fu_740_p1 = esl_zext<64,17>(new_index3_reg_1344.read());
}

void fromFrameToBlobCount::thread_new_index194_cast_fu_744_p1() {
    new_index194_cast_fu_744_p1 = esl_zext<64,17>(new_index4_reg_1349.read());
}

void fromFrameToBlobCount::thread_new_index198_cast_fu_757_p1() {
    new_index198_cast_fu_757_p1 = esl_zext<64,17>(new_index5_reg_1354.read());
}

void fromFrameToBlobCount::thread_new_index1_fu_1066_p2() {
    new_index1_fu_1066_p2 = (!ap_const_lv17_2.is_01() || !gepindex2_reg_1517.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_2) + sc_biguint<17>(gepindex2_reg_1517.read()));
}

void fromFrameToBlobCount::thread_new_index2_fu_1079_p2() {
    new_index2_fu_1079_p2 = (!ap_const_lv17_1.is_01() || !gepindex2_reg_1517.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_1) + sc_biguint<17>(gepindex2_reg_1517.read()));
}

void fromFrameToBlobCount::thread_new_index3_fu_730_p2() {
    new_index3_fu_730_p2 = (!ap_const_lv17_3.is_01() || !gepindex1_reg_1331.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_3) + sc_biguint<17>(gepindex1_reg_1331.read()));
}

void fromFrameToBlobCount::thread_new_index4_fu_735_p2() {
    new_index4_fu_735_p2 = (!ap_const_lv17_2.is_01() || !gepindex1_reg_1331.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_2) + sc_biguint<17>(gepindex1_reg_1331.read()));
}

void fromFrameToBlobCount::thread_new_index5_fu_748_p2() {
    new_index5_fu_748_p2 = (!ap_const_lv17_1.is_01() || !gepindex1_reg_1331.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_1) + sc_biguint<17>(gepindex1_reg_1331.read()));
}

void fromFrameToBlobCount::thread_new_index_fu_1061_p2() {
    new_index_fu_1061_p2 = (!ap_const_lv17_3.is_01() || !gepindex2_reg_1517.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_3) + sc_biguint<17>(gepindex2_reg_1517.read()));
}

void fromFrameToBlobCount::thread_p_shl1_i1_cast_fu_785_p1() {
    p_shl1_i1_cast_fu_785_p1 = esl_zext<18,17>(p_shl1_i1_fu_777_p3.read());
}

void fromFrameToBlobCount::thread_p_shl1_i1_fu_777_p3() {
    p_shl1_i1_fu_777_p3 = esl_concat<15,2>(ap_phi_mux_i_i1_phi_fu_490_p4.read(), ap_const_lv2_0);
}

void fromFrameToBlobCount::thread_p_shl1_i_cast_fu_1191_p1() {
    p_shl1_i_cast_fu_1191_p1 = esl_zext<14,9>(p_shl1_i_fu_1183_p3.read());
}

void fromFrameToBlobCount::thread_p_shl1_i_fu_1183_p3() {
    p_shl1_i_fu_1183_p3 = esl_concat<8,1>(reg_658.read(), ap_const_lv1_0);
}

void fromFrameToBlobCount::thread_p_shl2_i_cast_fu_1116_p1() {
    p_shl2_i_cast_fu_1116_p1 = esl_zext<18,17>(p_shl2_i_fu_1108_p3.read());
}

void fromFrameToBlobCount::thread_p_shl2_i_fu_1108_p3() {
    p_shl2_i_fu_1108_p3 = esl_concat<15,2>(ap_phi_mux_i_i_phi_fu_557_p4.read(), ap_const_lv2_0);
}

void fromFrameToBlobCount::thread_p_shl9_i_cast_fu_865_p1() {
    p_shl9_i_cast_fu_865_p1 = esl_zext<14,9>(p_shl9_i_fu_857_p3.read());
}

void fromFrameToBlobCount::thread_p_shl9_i_fu_857_p3() {
    p_shl9_i_fu_857_p3 = esl_concat<8,1>(reg_653.read(), ap_const_lv1_0);
}

void fromFrameToBlobCount::thread_p_shl_i1_cast_fu_853_p1() {
    p_shl_i1_cast_fu_853_p1 = esl_zext<14,13>(p_shl_i1_fu_845_p3.read());
}

void fromFrameToBlobCount::thread_p_shl_i1_fu_845_p3() {
    p_shl_i1_fu_845_p3 = esl_concat<8,5>(reg_653.read(), ap_const_lv5_0);
}

void fromFrameToBlobCount::thread_p_shl_i_cast_fu_1179_p1() {
    p_shl_i_cast_fu_1179_p1 = esl_zext<14,13>(p_shl_i_fu_1171_p3.read());
}

void fromFrameToBlobCount::thread_p_shl_i_fu_1171_p3() {
    p_shl_i_fu_1171_p3 = esl_concat<8,5>(reg_658.read(), ap_const_lv5_0);
}

void fromFrameToBlobCount::thread_second_erosion_iteration_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read())))) {
        second_erosion_iteration_0_ack_out = ap_const_logic_1;
    } else {
        second_erosion_iteration_0_ack_out = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamIn_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read())))) {
        streamIn_TDATA_blk_n = streamIn_V_data_0_state.read()[0];
    } else {
        streamIn_TDATA_blk_n = ap_const_logic_1;
    }
}

void fromFrameToBlobCount::thread_streamIn_TREADY() {
    streamIn_TREADY = streamIn_V_dest_V_0_state.read()[1];
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_ack_in() {
    streamIn_V_data_0_ack_in = streamIn_V_data_0_state.read()[1];
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0)))) {
        streamIn_V_data_0_ack_out = ap_const_logic_1;
    } else {
        streamIn_V_data_0_ack_out = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, streamIn_V_data_0_sel.read())) {
        streamIn_V_data_0_data_out = streamIn_V_data_0_payload_B.read();
    } else {
        streamIn_V_data_0_data_out = streamIn_V_data_0_payload_A.read();
    }
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_load_A() {
    streamIn_V_data_0_load_A = (streamIn_V_data_0_state_cmp_full.read() & ~streamIn_V_data_0_sel_wr.read());
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_load_B() {
    streamIn_V_data_0_load_B = (streamIn_V_data_0_sel_wr.read() & streamIn_V_data_0_state_cmp_full.read());
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_sel() {
    streamIn_V_data_0_sel = streamIn_V_data_0_sel_rd.read();
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_state_cmp_full() {
    streamIn_V_data_0_state_cmp_full =  (sc_logic) ((!streamIn_V_data_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(streamIn_V_data_0_state.read() != ap_const_lv2_1))[0];
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_vld_in() {
    streamIn_V_data_0_vld_in = streamIn_TVALID.read();
}

void fromFrameToBlobCount::thread_streamIn_V_data_0_vld_out() {
    streamIn_V_data_0_vld_out = streamIn_V_data_0_state.read()[0];
}

void fromFrameToBlobCount::thread_streamIn_V_dest_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_1312.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_1498.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0)))) {
        streamIn_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        streamIn_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamIn_V_dest_V_0_vld_in() {
    streamIn_V_dest_V_0_vld_in = streamIn_TVALID.read();
}

void fromFrameToBlobCount::thread_streamOut_TDATA() {
    streamOut_TDATA = streamOut_V_data_1_data_out.read();
}

void fromFrameToBlobCount::thread_streamOut_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_1304.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_reg_1308.read())))) {
        streamOut_TDATA_blk_n = streamOut_V_data_1_state.read()[1];
    } else {
        streamOut_TDATA_blk_n = ap_const_logic_1;
    }
}

void fromFrameToBlobCount::thread_streamOut_TDEST() {
    streamOut_TDEST = streamOut_V_dest_V_1_data_out.read();
}

void fromFrameToBlobCount::thread_streamOut_TID() {
    streamOut_TID = streamOut_V_id_V_1_data_out.read();
}

void fromFrameToBlobCount::thread_streamOut_TKEEP() {
    streamOut_TKEEP = streamOut_V_keep_V_1_data_out.read();
}

void fromFrameToBlobCount::thread_streamOut_TLAST() {
    streamOut_TLAST = streamOut_V_last_V_1_data_out.read();
}

void fromFrameToBlobCount::thread_streamOut_TSTRB() {
    streamOut_TSTRB = streamOut_V_strb_V_1_data_out.read();
}

void fromFrameToBlobCount::thread_streamOut_TUSER() {
    streamOut_TUSER = streamOut_V_user_V_1_data_out.read();
}

void fromFrameToBlobCount::thread_streamOut_TVALID() {
    streamOut_TVALID = streamOut_V_dest_V_1_state.read()[0];
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_ack_in() {
    streamOut_V_data_1_ack_in = streamOut_V_data_1_state.read()[1];
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_ack_out() {
    streamOut_V_data_1_ack_out = streamOut_TREADY.read();
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, streamOut_V_data_1_sel.read())) {
        streamOut_V_data_1_data_out = streamOut_V_data_1_payload_B.read();
    } else {
        streamOut_V_data_1_data_out = streamOut_V_data_1_payload_A.read();
    }
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_load_A() {
    streamOut_V_data_1_load_A = (streamOut_V_data_1_state_cmp_full.read() & ~streamOut_V_data_1_sel_wr.read());
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_load_B() {
    streamOut_V_data_1_load_B = (streamOut_V_data_1_sel_wr.read() & streamOut_V_data_1_state_cmp_full.read());
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_sel() {
    streamOut_V_data_1_sel = streamOut_V_data_1_sel_rd.read();
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_state_cmp_full() {
    streamOut_V_data_1_state_cmp_full =  (sc_logic) ((!streamOut_V_data_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(streamOut_V_data_1_state.read() != ap_const_lv2_1))[0];
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_blobsCount_fu_573_ap_done.read())))) {
        streamOut_V_data_1_vld_in = ap_const_logic_1;
    } else {
        streamOut_V_data_1_vld_in = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamOut_V_data_1_vld_out() {
    streamOut_V_data_1_vld_out = streamOut_V_data_1_state.read()[0];
}

void fromFrameToBlobCount::thread_streamOut_V_dest_V_1_ack_in() {
    streamOut_V_dest_V_1_ack_in = streamOut_V_dest_V_1_state.read()[1];
}

void fromFrameToBlobCount::thread_streamOut_V_dest_V_1_ack_out() {
    streamOut_V_dest_V_1_ack_out = streamOut_TREADY.read();
}

void fromFrameToBlobCount::thread_streamOut_V_dest_V_1_data_out() {
    streamOut_V_dest_V_1_data_out = ap_const_lv1_0;
}

void fromFrameToBlobCount::thread_streamOut_V_dest_V_1_sel() {
    streamOut_V_dest_V_1_sel = streamOut_V_dest_V_1_sel_rd.read();
}

void fromFrameToBlobCount::thread_streamOut_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_blobsCount_fu_573_ap_done.read())))) {
        streamOut_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        streamOut_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamOut_V_dest_V_1_vld_out() {
    streamOut_V_dest_V_1_vld_out = streamOut_V_dest_V_1_state.read()[0];
}

void fromFrameToBlobCount::thread_streamOut_V_id_V_1_ack_in() {
    streamOut_V_id_V_1_ack_in = streamOut_V_id_V_1_state.read()[1];
}

void fromFrameToBlobCount::thread_streamOut_V_id_V_1_ack_out() {
    streamOut_V_id_V_1_ack_out = streamOut_TREADY.read();
}

void fromFrameToBlobCount::thread_streamOut_V_id_V_1_data_out() {
    streamOut_V_id_V_1_data_out = ap_const_lv1_0;
}

void fromFrameToBlobCount::thread_streamOut_V_id_V_1_sel() {
    streamOut_V_id_V_1_sel = streamOut_V_id_V_1_sel_rd.read();
}

void fromFrameToBlobCount::thread_streamOut_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_blobsCount_fu_573_ap_done.read())))) {
        streamOut_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        streamOut_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamOut_V_id_V_1_vld_out() {
    streamOut_V_id_V_1_vld_out = streamOut_V_id_V_1_state.read()[0];
}

void fromFrameToBlobCount::thread_streamOut_V_keep_V_1_ack_in() {
    streamOut_V_keep_V_1_ack_in = streamOut_V_keep_V_1_state.read()[1];
}

void fromFrameToBlobCount::thread_streamOut_V_keep_V_1_ack_out() {
    streamOut_V_keep_V_1_ack_out = streamOut_TREADY.read();
}

void fromFrameToBlobCount::thread_streamOut_V_keep_V_1_data_out() {
    streamOut_V_keep_V_1_data_out = ap_const_lv4_F;
}

void fromFrameToBlobCount::thread_streamOut_V_keep_V_1_sel() {
    streamOut_V_keep_V_1_sel = streamOut_V_keep_V_1_sel_rd.read();
}

void fromFrameToBlobCount::thread_streamOut_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_blobsCount_fu_573_ap_done.read())))) {
        streamOut_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        streamOut_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamOut_V_keep_V_1_vld_out() {
    streamOut_V_keep_V_1_vld_out = streamOut_V_keep_V_1_state.read()[0];
}

void fromFrameToBlobCount::thread_streamOut_V_last_V_1_ack_in() {
    streamOut_V_last_V_1_ack_in = streamOut_V_last_V_1_state.read()[1];
}

void fromFrameToBlobCount::thread_streamOut_V_last_V_1_ack_out() {
    streamOut_V_last_V_1_ack_out = streamOut_TREADY.read();
}

void fromFrameToBlobCount::thread_streamOut_V_last_V_1_data_out() {
    streamOut_V_last_V_1_data_out = ap_const_lv1_1;
}

void fromFrameToBlobCount::thread_streamOut_V_last_V_1_sel() {
    streamOut_V_last_V_1_sel = streamOut_V_last_V_1_sel_rd.read();
}

void fromFrameToBlobCount::thread_streamOut_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_blobsCount_fu_573_ap_done.read())))) {
        streamOut_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        streamOut_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamOut_V_last_V_1_vld_out() {
    streamOut_V_last_V_1_vld_out = streamOut_V_last_V_1_state.read()[0];
}

void fromFrameToBlobCount::thread_streamOut_V_strb_V_1_ack_in() {
    streamOut_V_strb_V_1_ack_in = streamOut_V_strb_V_1_state.read()[1];
}

void fromFrameToBlobCount::thread_streamOut_V_strb_V_1_ack_out() {
    streamOut_V_strb_V_1_ack_out = streamOut_TREADY.read();
}

void fromFrameToBlobCount::thread_streamOut_V_strb_V_1_data_out() {
    streamOut_V_strb_V_1_data_out = ap_const_lv4_F;
}

void fromFrameToBlobCount::thread_streamOut_V_strb_V_1_sel() {
    streamOut_V_strb_V_1_sel = streamOut_V_strb_V_1_sel_rd.read();
}

void fromFrameToBlobCount::thread_streamOut_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_blobsCount_fu_573_ap_done.read())))) {
        streamOut_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        streamOut_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamOut_V_strb_V_1_vld_out() {
    streamOut_V_strb_V_1_vld_out = streamOut_V_strb_V_1_state.read()[0];
}

void fromFrameToBlobCount::thread_streamOut_V_user_V_1_ack_in() {
    streamOut_V_user_V_1_ack_in = streamOut_V_user_V_1_state.read()[1];
}

void fromFrameToBlobCount::thread_streamOut_V_user_V_1_ack_out() {
    streamOut_V_user_V_1_ack_out = streamOut_TREADY.read();
}

void fromFrameToBlobCount::thread_streamOut_V_user_V_1_data_out() {
    streamOut_V_user_V_1_data_out = ap_const_lv1_0;
}

void fromFrameToBlobCount::thread_streamOut_V_user_V_1_sel() {
    streamOut_V_user_V_1_sel = streamOut_V_user_V_1_sel_rd.read();
}

void fromFrameToBlobCount::thread_streamOut_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_blobsCount_fu_573_ap_done.read())))) {
        streamOut_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        streamOut_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void fromFrameToBlobCount::thread_streamOut_V_user_V_1_vld_out() {
    streamOut_V_user_V_1_vld_out = streamOut_V_user_V_1_state.read()[0];
}

void fromFrameToBlobCount::thread_tmp1_cast_cast_fu_1209_p1() {
    tmp1_cast_cast_fu_1209_p1 = esl_zext<16,15>(grp_fu_1259_p3.read());
}

void fromFrameToBlobCount::thread_tmp2_cast_cast_fu_879_p1() {
    tmp2_cast_cast_fu_879_p1 = esl_zext<16,15>(tmp2_reg_1408.read());
}

void fromFrameToBlobCount::thread_tmp_12_i1_cast_fu_888_p1() {
    tmp_12_i1_cast_fu_888_p1 = esl_sext<17,16>(tmp_12_i1_reg_1413.read());
}

void fromFrameToBlobCount::thread_tmp_12_i1_fu_882_p2() {
    tmp_12_i1_fu_882_p2 = (!tmp2_cast_cast_fu_879_p1.read().is_01() || !tmp_3_i1_cast_cast_fu_875_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp2_cast_cast_fu_879_p1.read()) + sc_bigint<16>(tmp_3_i1_cast_cast_fu_875_p1.read()));
}

void fromFrameToBlobCount::thread_tmp_12_i_cast_fu_1218_p1() {
    tmp_12_i_cast_fu_1218_p1 = esl_sext<17,16>(tmp_12_i_reg_1590.read());
}

void fromFrameToBlobCount::thread_tmp_12_i_fu_1212_p2() {
    tmp_12_i_fu_1212_p2 = (!tmp1_cast_cast_fu_1209_p1.read().is_01() || !tmp_3_i_cast_cast_fu_1201_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp1_cast_cast_fu_1209_p1.read()) + sc_bigint<16>(tmp_3_i_cast_cast_fu_1201_p1.read()));
}

void fromFrameToBlobCount::thread_tmp_14_i1_fu_895_p4() {
    tmp_14_i1_fu_895_p4 = mul2_reg_1423.read().range(31, 24);
}

void fromFrameToBlobCount::thread_tmp_14_i_fu_1225_p4() {
    tmp_14_i_fu_1225_p4 = mul_fu_1267_p2.read().range(31, 24);
}

void fromFrameToBlobCount::thread_tmp_15_i_fu_1234_p2() {
    tmp_15_i_fu_1234_p2 = (tmp_14_i_fu_1225_p4.read() ^ ap_const_lv8_FF);
}

void fromFrameToBlobCount::thread_tmp_16_i1_fu_911_p1() {
    tmp_16_i1_fu_911_p1 = esl_zext<64,15>(i_i1_reg_486_pp1_iter4_reg.read());
}

void fromFrameToBlobCount::thread_tmp_16_i_fu_1241_p1() {
    tmp_16_i_fu_1241_p1 = esl_zext<64,15>(i_i_reg_553.read());
}

void fromFrameToBlobCount::thread_tmp_1_fu_1019_p2() {
    tmp_1_fu_1019_p2 = (!ap_phi_mux_i_phi_fu_546_p4.read().is_01() || !ap_const_lv15_5EEC.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_546_p4.read() == ap_const_lv15_5EEC);
}

void fromFrameToBlobCount::thread_tmp_1_i1_fu_840_p1() {
    tmp_1_i1_fu_840_p1 = esl_zext<64,32>(tmp_i1_cast_fu_837_p1.read());
}

void fromFrameToBlobCount::thread_tmp_1_i_fu_1135_p1() {
    tmp_1_i_fu_1135_p1 = esl_zext<64,32>(tmp_i_cast_fu_1132_p1.read());
}

void fromFrameToBlobCount::thread_tmp_21_i_cast_fu_937_p1() {
    tmp_21_i_cast_fu_937_p1 = esl_zext<9,8>(reg_658.read());
}

void fromFrameToBlobCount::thread_tmp_22_i_fu_941_p2() {
    tmp_22_i_fu_941_p2 = (!tmp_i2_cast_fu_934_p1.read().is_01() || !tmp_21_i_cast_fu_937_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_i2_cast_fu_934_p1.read()) - sc_biguint<9>(tmp_21_i_cast_fu_937_p1.read()));
}

void fromFrameToBlobCount::thread_tmp_23_i_fu_968_p2() {
    tmp_23_i_fu_968_p2 = (!abs_i_cast_fu_964_p1.read().is_01() || !md_threshold_read_reg_1299.read().is_01())? sc_lv<1>(): (sc_bigint<32>(abs_i_cast_fu_964_p1.read()) > sc_bigint<32>(md_threshold_read_reg_1299.read()));
}

void fromFrameToBlobCount::thread_tmp_24_i_fu_973_p3() {
    tmp_24_i_fu_973_p3 = (!tmp_23_i_reg_1464.read()[0].is_01())? sc_lv<8>(): ((tmp_23_i_reg_1464.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void fromFrameToBlobCount::thread_tmp_3_fu_1057_p1() {
    tmp_3_fu_1057_p1 = streamIn_V_data_0_data_out.read().range(8-1, 0);
}

void fromFrameToBlobCount::thread_tmp_3_i1_cast_cast_fu_875_p1() {
    tmp_3_i1_cast_cast_fu_875_p1 = esl_sext<16,14>(tmp_3_i1_fu_869_p2.read());
}

void fromFrameToBlobCount::thread_tmp_3_i1_fu_869_p2() {
    tmp_3_i1_fu_869_p2 = (!p_shl_i1_cast_fu_853_p1.read().is_01() || !p_shl9_i_cast_fu_865_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl_i1_cast_fu_853_p1.read()) - sc_biguint<14>(p_shl9_i_cast_fu_865_p1.read()));
}

void fromFrameToBlobCount::thread_tmp_3_i_cast_cast_fu_1201_p1() {
    tmp_3_i_cast_cast_fu_1201_p1 = esl_sext<16,14>(tmp_3_i_fu_1195_p2.read());
}

void fromFrameToBlobCount::thread_tmp_3_i_fu_1195_p2() {
    tmp_3_i_fu_1195_p2 = (!p_shl_i_cast_fu_1179_p1.read().is_01() || !p_shl1_i_cast_fu_1191_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_shl_i_cast_fu_1179_p1.read()) - sc_biguint<14>(p_shl1_i_cast_fu_1191_p1.read()));
}

void fromFrameToBlobCount::thread_tmp_4_fu_674_p2() {
    tmp_4_fu_674_p2 = (!ap_phi_mux_i_1_phi_fu_479_p4.read().is_01() || !ap_const_lv15_5EEC.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_1_phi_fu_479_p4.read() == ap_const_lv15_5EEC);
}

void fromFrameToBlobCount::thread_tmp_4_i1_cast_fu_807_p1() {
    tmp_4_i1_cast_fu_807_p1 = esl_sext<32,18>(tmp_4_i1_reg_1373.read());
}

void fromFrameToBlobCount::thread_tmp_4_i1_fu_795_p2() {
    tmp_4_i1_fu_795_p2 = (!tmp_i1_fu_789_p2.read().is_01() || !ap_const_lv18_1.is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_i1_fu_789_p2.read()) + sc_biguint<18>(ap_const_lv18_1));
}

void fromFrameToBlobCount::thread_tmp_4_i_cast_fu_1140_p1() {
    tmp_4_i_cast_fu_1140_p1 = esl_sext<32,18>(tmp_4_i_reg_1560.read());
}

void fromFrameToBlobCount::thread_tmp_4_i_fu_1126_p2() {
    tmp_4_i_fu_1126_p2 = (!tmp_i_fu_1120_p2.read().is_01() || !ap_const_lv18_1.is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_i_fu_1120_p2.read()) + sc_biguint<18>(ap_const_lv18_1));
}

void fromFrameToBlobCount::thread_tmp_5_i1_fu_810_p1() {
    tmp_5_i1_fu_810_p1 = esl_zext<64,32>(tmp_4_i1_cast_fu_807_p1.read());
}

void fromFrameToBlobCount::thread_tmp_5_i_fu_1143_p1() {
    tmp_5_i_fu_1143_p1 = esl_zext<64,32>(tmp_4_i_cast_fu_1140_p1.read());
}

void fromFrameToBlobCount::thread_tmp_6_fu_704_p1() {
    tmp_6_fu_704_p1 = mem_index_gep1_fu_698_p2.read().range(17-1, 0);
}

void fromFrameToBlobCount::thread_tmp_7_fu_726_p1() {
    tmp_7_fu_726_p1 = streamIn_V_data_0_data_out.read().range(8-1, 0);
}

void fromFrameToBlobCount::thread_tmp_7_i1_fu_831_p0() {
    tmp_7_i1_fu_831_p0 =  (sc_lv<8>) (tmp_7_i1_fu_831_p00.read());
}

void fromFrameToBlobCount::thread_tmp_7_i1_fu_831_p00() {
    tmp_7_i1_fu_831_p00 = esl_zext<15,8>(reg_653.read());
}

void fromFrameToBlobCount::thread_tmp_7_i1_fu_831_p2() {
    tmp_7_i1_fu_831_p2 = (!tmp_7_i1_fu_831_p0.read().is_01() || !ap_const_lv15_3B.is_01())? sc_lv<15>(): sc_biguint<8>(tmp_7_i1_fu_831_p0.read()) * sc_biguint<15>(ap_const_lv15_3B);
}

void fromFrameToBlobCount::thread_tmp_7_i_fu_1157_p0() {
    tmp_7_i_fu_1157_p0 =  (sc_lv<8>) (tmp_7_i_fu_1157_p00.read());
}

void fromFrameToBlobCount::thread_tmp_7_i_fu_1157_p00() {
    tmp_7_i_fu_1157_p00 = esl_zext<15,8>(background_q1.read());
}

void fromFrameToBlobCount::thread_tmp_7_i_fu_1157_p2() {
    tmp_7_i_fu_1157_p2 = (!tmp_7_i_fu_1157_p0.read().is_01() || !ap_const_lv15_3B.is_01())? sc_lv<15>(): sc_biguint<8>(tmp_7_i_fu_1157_p0.read()) * sc_biguint<15>(ap_const_lv15_3B);
}

void fromFrameToBlobCount::thread_tmp_8_i1_cast_fu_815_p1() {
    tmp_8_i1_cast_fu_815_p1 = esl_sext<32,18>(tmp_8_i1_reg_1378.read());
}

void fromFrameToBlobCount::thread_tmp_8_i1_fu_801_p2() {
    tmp_8_i1_fu_801_p2 = (!tmp_i1_fu_789_p2.read().is_01() || !ap_const_lv18_2.is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_i1_fu_789_p2.read()) + sc_biguint<18>(ap_const_lv18_2));
}

void fromFrameToBlobCount::thread_tmp_8_i_cast_fu_1163_p1() {
    tmp_8_i_cast_fu_1163_p1 = esl_sext<32,18>(tmp_8_i_reg_1575.read());
}

void fromFrameToBlobCount::thread_tmp_8_i_fu_1148_p2() {
    tmp_8_i_fu_1148_p2 = (!tmp_i_reg_1554.read().is_01() || !ap_const_lv18_2.is_01())? sc_lv<18>(): (sc_bigint<18>(tmp_i_reg_1554.read()) + sc_biguint<18>(ap_const_lv18_2));
}

void fromFrameToBlobCount::thread_tmp_9_i1_fu_818_p1() {
    tmp_9_i1_fu_818_p1 = esl_zext<64,32>(tmp_8_i1_cast_fu_815_p1.read());
}

void fromFrameToBlobCount::thread_tmp_9_i_fu_1166_p1() {
    tmp_9_i_fu_1166_p1 = esl_zext<64,32>(tmp_8_i_cast_fu_1163_p1.read());
}

void fromFrameToBlobCount::thread_tmp_data_fu_1014_p1() {
    tmp_data_fu_1014_p1 = esl_sext<32,31>(grp_blobsCount_fu_573_ap_return.read());
}

void fromFrameToBlobCount::thread_tmp_fu_662_p2() {
    tmp_fu_662_p2 = (!action_0_data_reg.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(action_0_data_reg.read() == ap_const_lv32_0);
}

void fromFrameToBlobCount::thread_tmp_i1_cast_fu_837_p1() {
    tmp_i1_cast_fu_837_p1 = esl_sext<32,18>(tmp_i1_reg_1368_pp1_iter1_reg.read());
}

void fromFrameToBlobCount::thread_tmp_i1_fu_789_p2() {
    tmp_i1_fu_789_p2 = (!p_shl1_i1_cast_fu_785_p1.read().is_01() || !i_i1_cast6_fu_773_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(p_shl1_i1_cast_fu_785_p1.read()) - sc_biguint<18>(i_i1_cast6_fu_773_p1.read()));
}

void fromFrameToBlobCount::thread_tmp_i2_cast_fu_934_p1() {
    tmp_i2_cast_fu_934_p1 = esl_zext<9,8>(input_grey_load_reg_1452.read());
}

void fromFrameToBlobCount::thread_tmp_i2_fu_928_p1() {
    tmp_i2_fu_928_p1 = esl_zext<64,15>(i_i2_reg_498.read());
}

void fromFrameToBlobCount::thread_tmp_i_cast_fu_1132_p1() {
    tmp_i_cast_fu_1132_p1 = esl_sext<32,18>(tmp_i_reg_1554.read());
}

void fromFrameToBlobCount::thread_tmp_i_fu_1120_p2() {
    tmp_i_fu_1120_p2 = (!p_shl2_i_cast_fu_1116_p1.read().is_01() || !i_i_cast_fu_1104_p1.read().is_01())? sc_lv<18>(): (sc_biguint<18>(p_shl2_i_cast_fu_1116_p1.read()) - sc_biguint<18>(i_i_cast_fu_1104_p1.read()));
}

void fromFrameToBlobCount::thread_tmp_s_fu_668_p2() {
    tmp_s_fu_668_p2 = (!action_0_data_reg.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(action_0_data_reg.read() == ap_const_lv32_1);
}

void fromFrameToBlobCount::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_662_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_662_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_668_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state42;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_674_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_674_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter5.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i1_fu_761_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter5.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter4.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i1_fu_761_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter4.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i2_fu_916_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter4.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i2_fu_916_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_981_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(grp_erode_filter_fu_565_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(grp_copy_fu_593_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_992_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(grp_dilate_fu_579_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(grp_copy_fu_593_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1003_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(grp_erode_filter_fu_565_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(grp_copy_fu_593_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(grp_cleanBorders_fu_587_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state39;
            }
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_blobsCount_fu_573_ap_done.read())))) {
                ap_NS_fsm = ap_ST_fsm_state42;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(ap_block_state42_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state55;
            } else {
                ap_NS_fsm = ap_ST_fsm_state42;
            }
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_1019_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_1019_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state48;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 134217728 : 
            if (esl_seteq<1,1,1>(ap_block_pp3_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_1092_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_1092_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state54;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            }
            break;
        case 1073741824 : 
            if (esl_seteq<1,1,1>(ap_block_pp4_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            }
            break;
        case 2147483648 : 
            if (esl_seteq<1,1,1>(ap_block_pp4_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            }
            break;
        case 4294967296 : 
            if (esl_seteq<1,1,1>(ap_block_pp4_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            }
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_data_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, streamOut_V_dest_V_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state55;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<35>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void fromFrameToBlobCount::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamIn_TDATA\" :  \"" << streamIn_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamIn_TVALID\" :  \"" << streamIn_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"streamIn_TREADY\" :  \"" << streamIn_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamIn_TKEEP\" :  \"" << streamIn_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamIn_TSTRB\" :  \"" << streamIn_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamIn_TUSER\" :  \"" << streamIn_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamIn_TLAST\" :  \"" << streamIn_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamIn_TID\" :  \"" << streamIn_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamIn_TDEST\" :  \"" << streamIn_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"streamOut_TDATA\" :  \"" << streamOut_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"streamOut_TVALID\" :  \"" << streamOut_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"streamOut_TREADY\" :  \"" << streamOut_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"streamOut_TKEEP\" :  \"" << streamOut_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"streamOut_TSTRB\" :  \"" << streamOut_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"streamOut_TUSER\" :  \"" << streamOut_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"streamOut_TLAST\" :  \"" << streamOut_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"streamOut_TID\" :  \"" << streamOut_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"streamOut_TDEST\" :  \"" << streamOut_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

